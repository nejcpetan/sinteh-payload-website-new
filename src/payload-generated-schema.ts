/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:db-schema` to regenerate this file.
 */

import type {} from '@payloadcms/db-vercel-postgres'
import {
  pgTable,
  index,
  uniqueIndex,
  foreignKey,
  integer,
  varchar,
  timestamp,
  serial,
  numeric,
  text,
  jsonb,
  boolean,
  type AnyPgColumn,
  pgEnum,
} from '@payloadcms/db-vercel-postgres/drizzle/pg-core'
import { sql, relations } from '@payloadcms/db-vercel-postgres/drizzle'
export const enum__locales = pgEnum('enum__locales', ['sl', 'en', 'de', 'hr'])
export const enum_pages_blocks_hero_cta_buttons_type = pgEnum(
  'enum_pages_blocks_hero_cta_buttons_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_hero_cta_buttons_variant = pgEnum(
  'enum_pages_blocks_hero_cta_buttons_variant',
  ['default', 'secondary', 'outline', 'ghost'],
)
export const enum_pages_blocks_services_services_button_type = pgEnum(
  'enum_pages_blocks_services_services_button_type',
  ['page', 'url', 'anchor'],
)
export const enum_pages_blocks_about_button_type = pgEnum('enum_pages_blocks_about_button_type', [
  'page',
  'post',
  'url',
  'anchor',
])
export const enum_pages_blocks_why_trust_pillars_icon = pgEnum(
  'enum_pages_blocks_why_trust_pillars_icon',
  ['shield', 'cog', 'headset'],
)
export const enum_pages_blocks_why_trust_button_type = pgEnum(
  'enum_pages_blocks_why_trust_button_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_projects_button_type = pgEnum(
  'enum_pages_blocks_projects_button_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_product_hero_cta_buttons_type = pgEnum(
  'enum_pages_blocks_product_hero_cta_buttons_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_product_hero_cta_buttons_variant = pgEnum(
  'enum_pages_blocks_product_hero_cta_buttons_variant',
  ['default', 'secondary', 'outline', 'ghost'],
)
export const enum_pages_blocks_key_features_features_icon = pgEnum(
  'enum_pages_blocks_key_features_features_icon',
  ['mechanical', 'shield', 'retrofit', 'modular', 'temperature', 'key'],
)
export const enum_pages_blocks_applications_applications_icon = pgEnum(
  'enum_pages_blocks_applications_applications_icon',
  ['oilgas', 'energy', 'pharm', 'manufacturing', 'atex', 'water'],
)
export const enum_pages_blocks_benefits_comparison_summary_cards_icon = pgEnum(
  'enum_pages_blocks_benefits_comparison_summary_cards_icon',
  ['shield', 'clock', 'users'],
)
export const enum_pages_blocks_contact_hero_quick_contact_methods_type = pgEnum(
  'enum_pages_blocks_contact_hero_quick_contact_methods_type',
  ['phone', 'email', 'location'],
)
export const enum_pages_blocks_universal_hero_contact_methods_link_type = pgEnum(
  'enum_pages_blocks_universal_hero_contact_methods_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_universal_hero_variant = pgEnum(
  'enum_pages_blocks_universal_hero_variant',
  ['standard', 'blog', 'contact', 'minimal'],
)
export const enum_pages_blocks_universal_hero_benefits_layout = pgEnum(
  'enum_pages_blocks_universal_hero_benefits_layout',
  ['grid', 'list'],
)
export const enum_pages_blocks_universal_hero_primary_c_t_a_type = pgEnum(
  'enum_pages_blocks_universal_hero_primary_c_t_a_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_universal_hero_primary_c_t_a_variant = pgEnum(
  'enum_pages_blocks_universal_hero_primary_c_t_a_variant',
  ['default', 'outline', 'secondary', 'ghost'],
)
export const enum_pages_blocks_universal_hero_secondary_c_t_a_type = pgEnum(
  'enum_pages_blocks_universal_hero_secondary_c_t_a_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_universal_hero_secondary_c_t_a_variant = pgEnum(
  'enum_pages_blocks_universal_hero_secondary_c_t_a_variant',
  ['default', 'outline', 'secondary', 'ghost'],
)
export const enum_pages_blocks_universal_hero_background_style = pgEnum(
  'enum_pages_blocks_universal_hero_background_style',
  ['surface', 'background', 'white', 'gradient'],
)
export const enum_pages_blocks_universal_hero_content_alignment = pgEnum(
  'enum_pages_blocks_universal_hero_content_alignment',
  ['left', 'center'],
)
export const enum_pages_blocks_universal_c_t_a_variant = pgEnum(
  'enum_pages_blocks_universal_c_t_a_variant',
  ['standard', 'with-contact-form', 'minimal', 'full-width'],
)
export const enum_pages_blocks_universal_c_t_a_primary_c_t_a_type = pgEnum(
  'enum_pages_blocks_universal_c_t_a_primary_c_t_a_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_universal_c_t_a_primary_c_t_a_variant = pgEnum(
  'enum_pages_blocks_universal_c_t_a_primary_c_t_a_variant',
  ['default', 'outline', 'secondary', 'ghost'],
)
export const enum_pages_blocks_universal_c_t_a_secondary_c_t_a_type = pgEnum(
  'enum_pages_blocks_universal_c_t_a_secondary_c_t_a_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_universal_c_t_a_secondary_c_t_a_variant = pgEnum(
  'enum_pages_blocks_universal_c_t_a_secondary_c_t_a_variant',
  ['default', 'outline', 'secondary', 'ghost'],
)
export const enum_pages_blocks_universal_c_t_a_background_style = pgEnum(
  'enum_pages_blocks_universal_c_t_a_background_style',
  ['surface', 'background', 'white', 'gradient'],
)
export const enum_pages_blocks_feature_grid_features_link_type = pgEnum(
  'enum_pages_blocks_feature_grid_features_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_feature_grid_variant = pgEnum(
  'enum_pages_blocks_feature_grid_variant',
  ['features', 'services', 'benefits', 'solutions'],
)
export const enum_pages_blocks_feature_grid_columns = pgEnum(
  'enum_pages_blocks_feature_grid_columns',
  ['2', '3', '4'],
)
export const enum_pages_blocks_feature_grid_card_style = pgEnum(
  'enum_pages_blocks_feature_grid_card_style',
  ['default', 'minimal', 'bordered'],
)
export const enum_pages_blocks_feature_grid_background_style = pgEnum(
  'enum_pages_blocks_feature_grid_background_style',
  ['background', 'surface', 'white'],
)
export const enum_pages_blocks_content_grid_items_link_type = pgEnum(
  'enum_pages_blocks_content_grid_items_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_content_grid_variant = pgEnum(
  'enum_pages_blocks_content_grid_variant',
  ['categories', 'topics', 'services', 'industries'],
)
export const enum_pages_blocks_content_grid_columns = pgEnum(
  'enum_pages_blocks_content_grid_columns',
  ['2', '3', '4'],
)
export const enum_pages_blocks_content_grid_background_style = pgEnum(
  'enum_pages_blocks_content_grid_background_style',
  ['background', 'surface', 'white'],
)
export const enum_pages_blocks_stats_section_variant = pgEnum(
  'enum_pages_blocks_stats_section_variant',
  ['standard', 'highlighted', 'minimal', 'cards'],
)
export const enum_pages_blocks_stats_section_columns = pgEnum(
  'enum_pages_blocks_stats_section_columns',
  ['2', '3', '4', '5'],
)
export const enum_pages_blocks_stats_section_background_style = pgEnum(
  'enum_pages_blocks_stats_section_background_style',
  ['background', 'surface', 'white'],
)
export const enum_pages_blocks_process_steps_variant = pgEnum(
  'enum_pages_blocks_process_steps_variant',
  ['numbered', 'timeline', 'cards', 'minimal'],
)
export const enum_pages_blocks_process_steps_background_style = pgEnum(
  'enum_pages_blocks_process_steps_background_style',
  ['background', 'surface', 'white'],
)
export const enum_pages_blocks_content_cards_cards_link_type = pgEnum(
  'enum_pages_blocks_content_cards_cards_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_content_cards_variant = pgEnum(
  'enum_pages_blocks_content_cards_variant',
  ['blog-posts', 'service-brands', 'projects', 'general', 'featured-content'],
)
export const enum_pages_blocks_content_cards_columns = pgEnum(
  'enum_pages_blocks_content_cards_columns',
  ['2', '3', '4'],
)
export const enum_pages_blocks_content_cards_background_style = pgEnum(
  'enum_pages_blocks_content_cards_background_style',
  ['background', 'surface', 'white'],
)
export const enum_pages_blocks_contact_section_variant = pgEnum(
  'enum_pages_blocks_contact_section_variant',
  ['form-only', 'info-only', 'split', 'hero-style', 'compact'],
)
export const enum_pages_blocks_contact_section_background_style = pgEnum(
  'enum_pages_blocks_contact_section_background_style',
  ['surface', 'background', 'white', 'gradient'],
)
export const enum_pages_blocks_comparison_table_items_primary = pgEnum(
  'enum_pages_blocks_comparison_table_items_primary',
  ['yes', 'no', 'partial'],
)
export const enum_pages_blocks_comparison_table_items_secondary = pgEnum(
  'enum_pages_blocks_comparison_table_items_secondary',
  ['yes', 'no', 'partial'],
)
export const enum_pages_blocks_comparison_table_background_style = pgEnum(
  'enum_pages_blocks_comparison_table_background_style',
  ['background', 'surface', 'white'],
)
export const enum_pages_blocks_simple_page_breadcrumbs_link_type = pgEnum(
  'enum_pages_blocks_simple_page_breadcrumbs_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_simple_page_links_link_type = pgEnum(
  'enum_pages_blocks_simple_page_links_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum_pages_blocks_simple_page_variant = pgEnum(
  'enum_pages_blocks_simple_page_variant',
  ['standard', 'centered', 'documentation', 'legal', 'minimal'],
)
export const enum_pages_blocks_brand_showcase_variant = pgEnum(
  'enum_pages_blocks_brand_showcase_variant',
  ['grid', 'carousel', 'list', 'featured'],
)
export const enum_pages_blocks_brand_showcase_background_style = pgEnum(
  'enum_pages_blocks_brand_showcase_background_style',
  ['background', 'surface', 'white'],
)
export const enum_pages_blocks_technical_content_variant = pgEnum(
  'enum_pages_blocks_technical_content_variant',
  ['overview', 'specifications', 'process', 'documentation'],
)
export const enum_pages_blocks_technical_content_background_style = pgEnum(
  'enum_pages_blocks_technical_content_background_style',
  ['background', 'surface', 'white'],
)
export const enum_pages_blocks_resource_gallery_variant = pgEnum(
  'enum_pages_blocks_resource_gallery_variant',
  ['grid', 'list', 'categories', 'featured'],
)
export const enum_pages_blocks_resource_gallery_background_style = pgEnum(
  'enum_pages_blocks_resource_gallery_background_style',
  ['background', 'surface', 'white'],
)
export const enum_pages_status = pgEnum('enum_pages_status', ['draft', 'published'])
export const enum__pages_v_blocks_hero_cta_buttons_type = pgEnum(
  'enum__pages_v_blocks_hero_cta_buttons_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_hero_cta_buttons_variant = pgEnum(
  'enum__pages_v_blocks_hero_cta_buttons_variant',
  ['default', 'secondary', 'outline', 'ghost'],
)
export const enum__pages_v_blocks_services_services_button_type = pgEnum(
  'enum__pages_v_blocks_services_services_button_type',
  ['page', 'url', 'anchor'],
)
export const enum__pages_v_blocks_about_button_type = pgEnum(
  'enum__pages_v_blocks_about_button_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_why_trust_pillars_icon = pgEnum(
  'enum__pages_v_blocks_why_trust_pillars_icon',
  ['shield', 'cog', 'headset'],
)
export const enum__pages_v_blocks_why_trust_button_type = pgEnum(
  'enum__pages_v_blocks_why_trust_button_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_projects_button_type = pgEnum(
  'enum__pages_v_blocks_projects_button_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_product_hero_cta_buttons_type = pgEnum(
  'enum__pages_v_blocks_product_hero_cta_buttons_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_product_hero_cta_buttons_variant = pgEnum(
  'enum__pages_v_blocks_product_hero_cta_buttons_variant',
  ['default', 'secondary', 'outline', 'ghost'],
)
export const enum__pages_v_blocks_key_features_features_icon = pgEnum(
  'enum__pages_v_blocks_key_features_features_icon',
  ['mechanical', 'shield', 'retrofit', 'modular', 'temperature', 'key'],
)
export const enum__pages_v_blocks_applications_applications_icon = pgEnum(
  'enum__pages_v_blocks_applications_applications_icon',
  ['oilgas', 'energy', 'pharm', 'manufacturing', 'atex', 'water'],
)
export const enum__pages_v_blocks_benefits_comparison_summary_cards_icon = pgEnum(
  'enum__pages_v_blocks_benefits_comparison_summary_cards_icon',
  ['shield', 'clock', 'users'],
)
export const enum__pages_v_blocks_contact_hero_quick_contact_methods_type = pgEnum(
  'enum__pages_v_blocks_contact_hero_quick_contact_methods_type',
  ['phone', 'email', 'location'],
)
export const enum__pages_v_blocks_universal_hero_contact_methods_link_type = pgEnum(
  'enum__pages_v_blocks_universal_hero_contact_methods_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_universal_hero_variant = pgEnum(
  'enum__pages_v_blocks_universal_hero_variant',
  ['standard', 'blog', 'contact', 'minimal'],
)
export const enum__pages_v_blocks_universal_hero_benefits_layout = pgEnum(
  'enum__pages_v_blocks_universal_hero_benefits_layout',
  ['grid', 'list'],
)
export const enum__pages_v_blocks_universal_hero_primary_c_t_a_type = pgEnum(
  'enum__pages_v_blocks_universal_hero_primary_c_t_a_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_universal_hero_primary_c_t_a_variant = pgEnum(
  'enum__pages_v_blocks_universal_hero_primary_c_t_a_variant',
  ['default', 'outline', 'secondary', 'ghost'],
)
export const enum__pages_v_blocks_universal_hero_secondary_c_t_a_type = pgEnum(
  'enum__pages_v_blocks_universal_hero_secondary_c_t_a_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_universal_hero_secondary_c_t_a_variant = pgEnum(
  'enum__pages_v_blocks_universal_hero_secondary_c_t_a_variant',
  ['default', 'outline', 'secondary', 'ghost'],
)
export const enum__pages_v_blocks_universal_hero_background_style = pgEnum(
  'enum__pages_v_blocks_universal_hero_background_style',
  ['surface', 'background', 'white', 'gradient'],
)
export const enum__pages_v_blocks_universal_hero_content_alignment = pgEnum(
  'enum__pages_v_blocks_universal_hero_content_alignment',
  ['left', 'center'],
)
export const enum__pages_v_blocks_universal_c_t_a_variant = pgEnum(
  'enum__pages_v_blocks_universal_c_t_a_variant',
  ['standard', 'with-contact-form', 'minimal', 'full-width'],
)
export const enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_type = pgEnum(
  'enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_variant = pgEnum(
  'enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_variant',
  ['default', 'outline', 'secondary', 'ghost'],
)
export const enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_type = pgEnum(
  'enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_variant = pgEnum(
  'enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_variant',
  ['default', 'outline', 'secondary', 'ghost'],
)
export const enum__pages_v_blocks_universal_c_t_a_background_style = pgEnum(
  'enum__pages_v_blocks_universal_c_t_a_background_style',
  ['surface', 'background', 'white', 'gradient'],
)
export const enum__pages_v_blocks_feature_grid_features_link_type = pgEnum(
  'enum__pages_v_blocks_feature_grid_features_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_feature_grid_variant = pgEnum(
  'enum__pages_v_blocks_feature_grid_variant',
  ['features', 'services', 'benefits', 'solutions'],
)
export const enum__pages_v_blocks_feature_grid_columns = pgEnum(
  'enum__pages_v_blocks_feature_grid_columns',
  ['2', '3', '4'],
)
export const enum__pages_v_blocks_feature_grid_card_style = pgEnum(
  'enum__pages_v_blocks_feature_grid_card_style',
  ['default', 'minimal', 'bordered'],
)
export const enum__pages_v_blocks_feature_grid_background_style = pgEnum(
  'enum__pages_v_blocks_feature_grid_background_style',
  ['background', 'surface', 'white'],
)
export const enum__pages_v_blocks_content_grid_items_link_type = pgEnum(
  'enum__pages_v_blocks_content_grid_items_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_content_grid_variant = pgEnum(
  'enum__pages_v_blocks_content_grid_variant',
  ['categories', 'topics', 'services', 'industries'],
)
export const enum__pages_v_blocks_content_grid_columns = pgEnum(
  'enum__pages_v_blocks_content_grid_columns',
  ['2', '3', '4'],
)
export const enum__pages_v_blocks_content_grid_background_style = pgEnum(
  'enum__pages_v_blocks_content_grid_background_style',
  ['background', 'surface', 'white'],
)
export const enum__pages_v_blocks_stats_section_variant = pgEnum(
  'enum__pages_v_blocks_stats_section_variant',
  ['standard', 'highlighted', 'minimal', 'cards'],
)
export const enum__pages_v_blocks_stats_section_columns = pgEnum(
  'enum__pages_v_blocks_stats_section_columns',
  ['2', '3', '4', '5'],
)
export const enum__pages_v_blocks_stats_section_background_style = pgEnum(
  'enum__pages_v_blocks_stats_section_background_style',
  ['background', 'surface', 'white'],
)
export const enum__pages_v_blocks_process_steps_variant = pgEnum(
  'enum__pages_v_blocks_process_steps_variant',
  ['numbered', 'timeline', 'cards', 'minimal'],
)
export const enum__pages_v_blocks_process_steps_background_style = pgEnum(
  'enum__pages_v_blocks_process_steps_background_style',
  ['background', 'surface', 'white'],
)
export const enum__pages_v_blocks_content_cards_cards_link_type = pgEnum(
  'enum__pages_v_blocks_content_cards_cards_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_content_cards_variant = pgEnum(
  'enum__pages_v_blocks_content_cards_variant',
  ['blog-posts', 'service-brands', 'projects', 'general', 'featured-content'],
)
export const enum__pages_v_blocks_content_cards_columns = pgEnum(
  'enum__pages_v_blocks_content_cards_columns',
  ['2', '3', '4'],
)
export const enum__pages_v_blocks_content_cards_background_style = pgEnum(
  'enum__pages_v_blocks_content_cards_background_style',
  ['background', 'surface', 'white'],
)
export const enum__pages_v_blocks_contact_section_variant = pgEnum(
  'enum__pages_v_blocks_contact_section_variant',
  ['form-only', 'info-only', 'split', 'hero-style', 'compact'],
)
export const enum__pages_v_blocks_contact_section_background_style = pgEnum(
  'enum__pages_v_blocks_contact_section_background_style',
  ['surface', 'background', 'white', 'gradient'],
)
export const enum__pages_v_blocks_comparison_table_items_primary = pgEnum(
  'enum__pages_v_blocks_comparison_table_items_primary',
  ['yes', 'no', 'partial'],
)
export const enum__pages_v_blocks_comparison_table_items_secondary = pgEnum(
  'enum__pages_v_blocks_comparison_table_items_secondary',
  ['yes', 'no', 'partial'],
)
export const enum__pages_v_blocks_comparison_table_background_style = pgEnum(
  'enum__pages_v_blocks_comparison_table_background_style',
  ['background', 'surface', 'white'],
)
export const enum__pages_v_blocks_simple_page_breadcrumbs_link_type = pgEnum(
  'enum__pages_v_blocks_simple_page_breadcrumbs_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_simple_page_links_link_type = pgEnum(
  'enum__pages_v_blocks_simple_page_links_link_type',
  ['page', 'post', 'url', 'anchor'],
)
export const enum__pages_v_blocks_simple_page_variant = pgEnum(
  'enum__pages_v_blocks_simple_page_variant',
  ['standard', 'centered', 'documentation', 'legal', 'minimal'],
)
export const enum__pages_v_blocks_brand_showcase_variant = pgEnum(
  'enum__pages_v_blocks_brand_showcase_variant',
  ['grid', 'carousel', 'list', 'featured'],
)
export const enum__pages_v_blocks_brand_showcase_background_style = pgEnum(
  'enum__pages_v_blocks_brand_showcase_background_style',
  ['background', 'surface', 'white'],
)
export const enum__pages_v_blocks_technical_content_variant = pgEnum(
  'enum__pages_v_blocks_technical_content_variant',
  ['overview', 'specifications', 'process', 'documentation'],
)
export const enum__pages_v_blocks_technical_content_background_style = pgEnum(
  'enum__pages_v_blocks_technical_content_background_style',
  ['background', 'surface', 'white'],
)
export const enum__pages_v_blocks_resource_gallery_variant = pgEnum(
  'enum__pages_v_blocks_resource_gallery_variant',
  ['grid', 'list', 'categories', 'featured'],
)
export const enum__pages_v_blocks_resource_gallery_background_style = pgEnum(
  'enum__pages_v_blocks_resource_gallery_background_style',
  ['background', 'surface', 'white'],
)
export const enum__pages_v_version_status = pgEnum('enum__pages_v_version_status', [
  'draft',
  'published',
])
export const enum__pages_v_published_locale = pgEnum('enum__pages_v_published_locale', [
  'sl',
  'en',
  'de',
  'hr',
])
export const enum_posts_status = pgEnum('enum_posts_status', ['draft', 'published', 'archived'])
export const enum__posts_v_version_status = pgEnum('enum__posts_v_version_status', [
  'draft',
  'published',
  'archived',
])
export const enum__posts_v_published_locale = pgEnum('enum__posts_v_published_locale', [
  'sl',
  'en',
  'de',
  'hr',
])
export const enum_contact_submissions_emails_sent_type = pgEnum(
  'enum_contact_submissions_emails_sent_type',
  ['auto-reply', 'admin-notification', 'follow-up', 'response'],
)
export const enum_contact_submissions_status = pgEnum('enum_contact_submissions_status', [
  'new',
  'in-progress',
  'responded',
  'closed',
  'spam',
])
export const enum_contact_submissions_priority = pgEnum('enum_contact_submissions_priority', [
  'low',
  'medium',
  'high',
  'urgent',
])
export const enum_contact_submissions_source = pgEnum('enum_contact_submissions_source', [
  'contact-form',
  'product-cta',
  'simple-contact',
  'universal-contact',
])
export const enum_header_navigation_dropdown_items_type = pgEnum(
  'enum_header_navigation_dropdown_items_type',
  ['page', 'url', 'blog', 'post', 'category', 'divider'],
)
export const enum_header_navigation_nav_type = pgEnum('enum_header_navigation_nav_type', [
  'link',
  'dropdown',
])
export const enum_header_navigation_type = pgEnum('enum_header_navigation_type', [
  'page',
  'url',
  'blog',
  'post',
  'category',
])
export const enum_header_navigation_dropdown_style = pgEnum(
  'enum_header_navigation_dropdown_style',
  ['simple', 'cards', 'columns'],
)
export const enum_header_categories_nav_display_type = pgEnum(
  'enum_header_categories_nav_display_type',
  ['all', 'selected'],
)
export const enum_footer_footer_columns_links_type = pgEnum(
  'enum_footer_footer_columns_links_type',
  ['page', 'url', 'anchor'],
)
export const enum_footer_bottom_links_type = pgEnum('enum_footer_bottom_links_type', [
  'page',
  'url',
  'anchor',
])
export const enum_homepage_blocks_hero_cta_buttons_type = pgEnum(
  'enum_homepage_blocks_hero_cta_buttons_type',
  ['page', 'url', 'anchor'],
)
export const enum_homepage_blocks_hero_cta_buttons_variant = pgEnum(
  'enum_homepage_blocks_hero_cta_buttons_variant',
  ['default', 'secondary', 'outline', 'ghost'],
)
export const enum_homepage_blocks_services_services_button_type = pgEnum(
  'enum_homepage_blocks_services_services_button_type',
  ['page', 'url', 'anchor'],
)
export const enum_homepage_blocks_about_button_type = pgEnum(
  'enum_homepage_blocks_about_button_type',
  ['page', 'url', 'anchor'],
)
export const enum_homepage_blocks_why_trust_pillars_icon = pgEnum(
  'enum_homepage_blocks_why_trust_pillars_icon',
  ['shield', 'cog', 'headset'],
)
export const enum_homepage_blocks_why_trust_button_type = pgEnum(
  'enum_homepage_blocks_why_trust_button_type',
  ['page', 'url', 'anchor'],
)
export const enum_homepage_blocks_projects_button_type = pgEnum(
  'enum_homepage_blocks_projects_button_type',
  ['page', 'url', 'anchor'],
)

export const users_sessions = pgTable(
  'users_sessions',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
    expiresAt: timestamp('expires_at', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }).notNull(),
  },
  (columns) => ({
    _orderIdx: index('users_sessions_order_idx').on(columns._order),
    _parentIDIdx: index('users_sessions_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [users.id],
      name: 'users_sessions_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const users = pgTable(
  'users',
  {
    id: serial('id').primaryKey(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    email: varchar('email').notNull(),
    resetPasswordToken: varchar('reset_password_token'),
    resetPasswordExpiration: timestamp('reset_password_expiration', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }),
    salt: varchar('salt'),
    hash: varchar('hash'),
    loginAttempts: numeric('login_attempts').default('0'),
    lockUntil: timestamp('lock_until', { mode: 'string', withTimezone: true, precision: 3 }),
  },
  (columns) => ({
    users_updated_at_idx: index('users_updated_at_idx').on(columns.updatedAt),
    users_created_at_idx: index('users_created_at_idx').on(columns.createdAt),
    users_email_idx: uniqueIndex('users_email_idx').on(columns.email),
  }),
)

export const media = pgTable(
  'media',
  {
    id: serial('id').primaryKey(),
    alt: varchar('alt').notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    url: varchar('url'),
    thumbnailURL: varchar('thumbnail_u_r_l'),
    filename: varchar('filename'),
    mimeType: varchar('mime_type'),
    filesize: numeric('filesize'),
    width: numeric('width'),
    height: numeric('height'),
    focalX: numeric('focal_x'),
    focalY: numeric('focal_y'),
  },
  (columns) => ({
    media_updated_at_idx: index('media_updated_at_idx').on(columns.updatedAt),
    media_created_at_idx: index('media_created_at_idx').on(columns.createdAt),
    media_filename_idx: uniqueIndex('media_filename_idx').on(columns.filename),
  }),
)

export const pages_blocks_hero_cta_buttons = pgTable(
  'pages_blocks_hero_cta_buttons',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    type: enum_pages_blocks_hero_cta_buttons_type('type').default('page'),
    page: integer('page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    post: integer('post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    url: varchar('url'),
    anchor: varchar('anchor'),
    variant: enum_pages_blocks_hero_cta_buttons_variant('variant').default('default'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_hero_cta_buttons_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_hero_cta_buttons_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_hero_cta_buttons_locale_idx').on(columns._locale),
    pages_blocks_hero_cta_buttons_page_idx: index('pages_blocks_hero_cta_buttons_page_idx').on(
      columns.page,
    ),
    pages_blocks_hero_cta_buttons_post_idx: index('pages_blocks_hero_cta_buttons_post_idx').on(
      columns.post,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_hero.id],
      name: 'pages_blocks_hero_cta_buttons_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_hero = pgTable(
  'pages_blocks_hero',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    backgroundImage: integer('background_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    bottomText: varchar('bottom_text'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_hero_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_hero_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_hero_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_hero_locale_idx').on(columns._locale),
    pages_blocks_hero_background_image_idx: index('pages_blocks_hero_background_image_idx').on(
      columns.backgroundImage,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_hero_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_logo_belt_logos = pgTable(
  'pages_blocks_logo_belt_logos',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    logo: integer('logo_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    alt: varchar('alt'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_logo_belt_logos_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_logo_belt_logos_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_logo_belt_logos_locale_idx').on(columns._locale),
    pages_blocks_logo_belt_logos_logo_idx: index('pages_blocks_logo_belt_logos_logo_idx').on(
      columns.logo,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_logo_belt.id],
      name: 'pages_blocks_logo_belt_logos_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_logo_belt = pgTable(
  'pages_blocks_logo_belt',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_logo_belt_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_logo_belt_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_logo_belt_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_logo_belt_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_logo_belt_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_services_services_features = pgTable(
  'pages_blocks_services_services_features',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    feature: varchar('feature'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_services_services_features_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_services_services_features_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_services_services_features_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_services_services.id],
      name: 'pages_blocks_services_services_features_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_services_services = pgTable(
  'pages_blocks_services_services',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description').default(
      'Sistematičen pristop, preverjene komponente, popolna dokumentacija.',
    ),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    button_text: varchar('button_text').default('Več o storitvi'),
    button_type: enum_pages_blocks_services_services_button_type('button_type').default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_services_services_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_services_services_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_services_services_locale_idx').on(columns._locale),
    pages_blocks_services_services_image_idx: index('pages_blocks_services_services_image_idx').on(
      columns.image,
    ),
    pages_blocks_services_services_button_button_page_idx: index(
      'pages_blocks_services_services_button_button_page_idx',
    ).on(columns.button_page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_services.id],
      name: 'pages_blocks_services_services_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_services = pgTable(
  'pages_blocks_services',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('STORITVE'),
    title: varchar('title').default('Specializirani za krmiljenje in avtomatizacijo'),
    subtitle: varchar('subtitle').default('Od načrtovanja do zagona in servisa'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_services_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_services_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_services_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_services_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_services_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_about_badges = pgTable(
  'pages_blocks_about_badges',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    text: varchar('text'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_about_badges_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_about_badges_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_about_badges_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_about.id],
      name: 'pages_blocks_about_badges_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_about_stats = pgTable(
  'pages_blocks_about_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    number: varchar('number'),
    label: varchar('label'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_about_stats_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_about_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_about_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_about.id],
      name: 'pages_blocks_about_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_about_process = pgTable(
  'pages_blocks_about_process',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    step: varchar('step'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_about_process_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_about_process_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_about_process_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_about.id],
      name: 'pages_blocks_about_process_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_about = pgTable(
  'pages_blocks_about',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title').default('O podjetju'),
    description: varchar('description').default(
      'Specializirani smo za industrijske avtomatizacijske sisteme z več kot 10-letnimi izkušnjami.',
    ),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    calloutText: varchar('callout_text'),
    button_text: varchar('button_text').default('Več o nas'),
    button_type: enum_pages_blocks_about_button_type('button_type').default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_post: integer('button_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_about_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_about_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_about_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_about_locale_idx').on(columns._locale),
    pages_blocks_about_image_idx: index('pages_blocks_about_image_idx').on(columns.image),
    pages_blocks_about_button_button_page_idx: index(
      'pages_blocks_about_button_button_page_idx',
    ).on(columns.button_page),
    pages_blocks_about_button_button_post_idx: index(
      'pages_blocks_about_button_button_post_idx',
    ).on(columns.button_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_about_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_why_trust_reasons = pgTable(
  'pages_blocks_why_trust_reasons',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    reason: varchar('reason'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_why_trust_reasons_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_why_trust_reasons_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_why_trust_reasons_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_why_trust.id],
      name: 'pages_blocks_why_trust_reasons_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_why_trust_pillars = pgTable(
  'pages_blocks_why_trust_pillars',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    icon: enum_pages_blocks_why_trust_pillars_icon('icon'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_why_trust_pillars_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_why_trust_pillars_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_why_trust_pillars_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_why_trust.id],
      name: 'pages_blocks_why_trust_pillars_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_why_trust = pgTable(
  'pages_blocks_why_trust',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title').default('Zakaj nam zaupajo?'),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    button_text: varchar('button_text').default('Zaupajte nam'),
    button_type: enum_pages_blocks_why_trust_button_type('button_type').default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_post: integer('button_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_why_trust_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_why_trust_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_why_trust_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_why_trust_locale_idx').on(columns._locale),
    pages_blocks_why_trust_image_idx: index('pages_blocks_why_trust_image_idx').on(columns.image),
    pages_blocks_why_trust_button_button_page_idx: index(
      'pages_blocks_why_trust_button_button_page_idx',
    ).on(columns.button_page),
    pages_blocks_why_trust_button_button_post_idx: index(
      'pages_blocks_why_trust_button_button_post_idx',
    ).on(columns.button_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_why_trust_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_projects_projects_stack = pgTable(
  'pages_blocks_projects_projects_stack',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    technology: varchar('technology'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_projects_projects_stack_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_projects_projects_stack_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_projects_projects_stack_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_projects_projects.id],
      name: 'pages_blocks_projects_projects_stack_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_projects_projects = pgTable(
  'pages_blocks_projects_projects',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    category: varchar('category'),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    description: varchar('description'),
    link: varchar('link'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_projects_projects_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_projects_projects_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_projects_projects_locale_idx').on(columns._locale),
    pages_blocks_projects_projects_image_idx: index('pages_blocks_projects_projects_image_idx').on(
      columns.image,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_projects.id],
      name: 'pages_blocks_projects_projects_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_projects = pgTable(
  'pages_blocks_projects',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('PROJEKTI'),
    title: varchar('title').default('Naši projekti'),
    subtitle: varchar('subtitle').default(
      'Izsek projektov, ki so izboljšali produktivnost, varnost in sledljivost.',
    ),
    button_text: varchar('button_text').default('Vsi projekti'),
    button_type: enum_pages_blocks_projects_button_type('button_type').default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_post: integer('button_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_projects_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_projects_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_projects_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_projects_locale_idx').on(columns._locale),
    pages_blocks_projects_button_button_page_idx: index(
      'pages_blocks_projects_button_button_page_idx',
    ).on(columns.button_page),
    pages_blocks_projects_button_button_post_idx: index(
      'pages_blocks_projects_button_button_post_idx',
    ).on(columns.button_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_projects_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact = pgTable(
  'pages_blocks_contact',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('KONTAKT'),
    title: varchar('title').default('Stopite v stik z nami'),
    subtitle: varchar('subtitle').default('Pripravili vam bomo ponudbo v 24 urah'),
    phone: varchar('phone').default('+386 1 234 5678'),
    email: varchar('email').default('info@sinteh.si'),
    privacyText: varchar('privacy_text').default(
      'Pošiljanjem soglašate z našo politiko zasebnosti. Vaših podatkov ne posredujemo tretjim.',
    ),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_contact_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_contact_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_contact_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_rich_text = pgTable(
  'pages_blocks_rich_text',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    content: jsonb('content'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_rich_text_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_rich_text_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_rich_text_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_rich_text_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_rich_text_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_hero_key_benefits = pgTable(
  'pages_blocks_product_hero_key_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_hero_key_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_hero_key_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_product_hero_key_benefits_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_product_hero.id],
      name: 'pages_blocks_product_hero_key_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_hero_cta_buttons = pgTable(
  'pages_blocks_product_hero_cta_buttons',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    type: enum_pages_blocks_product_hero_cta_buttons_type('type').default('page'),
    page: integer('page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    post: integer('post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    url: varchar('url'),
    anchor: varchar('anchor'),
    variant: enum_pages_blocks_product_hero_cta_buttons_variant('variant').default('default'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_hero_cta_buttons_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_hero_cta_buttons_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_product_hero_cta_buttons_locale_idx').on(columns._locale),
    pages_blocks_product_hero_cta_buttons_page_idx: index(
      'pages_blocks_product_hero_cta_buttons_page_idx',
    ).on(columns.page),
    pages_blocks_product_hero_cta_buttons_post_idx: index(
      'pages_blocks_product_hero_cta_buttons_post_idx',
    ).on(columns.post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_product_hero.id],
      name: 'pages_blocks_product_hero_cta_buttons_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_hero = pgTable(
  'pages_blocks_product_hero',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    backgroundImage: integer('background_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_hero_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_hero_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_product_hero_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_product_hero_locale_idx').on(columns._locale),
    pages_blocks_product_hero_background_image_idx: index(
      'pages_blocks_product_hero_background_image_idx',
    ).on(columns.backgroundImage),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_product_hero_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_key_features_features = pgTable(
  'pages_blocks_key_features_features',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    icon: enum_pages_blocks_key_features_features_icon('icon'),
    title: varchar('title'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_key_features_features_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_key_features_features_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_key_features_features_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_key_features.id],
      name: 'pages_blocks_key_features_features_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_key_features = pgTable(
  'pages_blocks_key_features',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    bottomHighlight_title: varchar('bottom_highlight_title'),
    bottomHighlight_description: varchar('bottom_highlight_description'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_key_features_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_key_features_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_key_features_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_key_features_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_key_features_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_gallery_images = pgTable(
  'pages_blocks_product_gallery_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    category: varchar('category'),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_gallery_images_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_gallery_images_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_product_gallery_images_locale_idx').on(columns._locale),
    pages_blocks_product_gallery_images_image_idx: index(
      'pages_blocks_product_gallery_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_product_gallery.id],
      name: 'pages_blocks_product_gallery_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_gallery = pgTable(
  'pages_blocks_product_gallery',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    downloadSection_title: varchar('download_section_title'),
    downloadSection_description: varchar('download_section_description'),
    downloadSection_downloadButtonText: varchar('download_section_download_button_text').default(
      'Prenesi galerijo',
    ),
    downloadSection_requestButtonText: varchar('download_section_request_button_text').default(
      'Zahtevaj specifične slike',
    ),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_gallery_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_gallery_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_product_gallery_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_product_gallery_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_product_gallery_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_specifications_specifications_items = pgTable(
  'pages_blocks_specifications_specifications_items',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    value: varchar('value'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_specifications_specifications_items_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('pages_blocks_specifications_specifications_items_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_specifications_specifications_items_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_specifications_specifications.id],
      name: 'pages_blocks_specifications_specifications_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_specifications_specifications = pgTable(
  'pages_blocks_specifications_specifications',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    category: varchar('category'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_specifications_specifications_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_specifications_specifications_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_specifications_specifications_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_specifications.id],
      name: 'pages_blocks_specifications_specifications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_specifications_certification_badges = pgTable(
  'pages_blocks_specifications_certification_badges',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    name: varchar('name'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_specifications_certification_badges_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('pages_blocks_specifications_certification_badges_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_specifications_certification_badges_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_specifications.id],
      name: 'pages_blocks_specifications_certification_badges_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_specifications_additional_info_details = pgTable(
  'pages_blocks_specifications_additional_info_details',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    value: varchar('value'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_specifications_additional_info_details_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('pages_blocks_specifications_additional_info_details_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_specifications_additional_info_details_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_specifications.id],
      name: 'pages_blocks_specifications_additional_info_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_specifications = pgTable(
  'pages_blocks_specifications',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    additionalInfo_title: varchar('additional_info_title'),
    additionalInfo_description: varchar('additional_info_description'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_specifications_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_specifications_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_specifications_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_specifications_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_specifications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_applications_applications_details = pgTable(
  'pages_blocks_applications_applications_details',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    detail: varchar('detail'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_applications_applications_details_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_applications_applications_details_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_applications_applications_details_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_applications_applications.id],
      name: 'pages_blocks_applications_applications_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_applications_applications = pgTable(
  'pages_blocks_applications_applications',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    icon: enum_pages_blocks_applications_applications_icon('icon'),
    title: varchar('title'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_applications_applications_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_applications_applications_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_applications_applications_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_applications.id],
      name: 'pages_blocks_applications_applications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_applications_stats = pgTable(
  'pages_blocks_applications_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    number: varchar('number'),
    label: varchar('label'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_applications_stats_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_applications_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_applications_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_applications.id],
      name: 'pages_blocks_applications_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_applications_case_study_stats = pgTable(
  'pages_blocks_applications_case_study_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    value: varchar('value'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_applications_case_study_stats_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_applications_case_study_stats_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_applications_case_study_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_applications.id],
      name: 'pages_blocks_applications_case_study_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_applications = pgTable(
  'pages_blocks_applications',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    caseStudy_title: varchar('case_study_title'),
    caseStudy_description: varchar('case_study_description'),
    caseStudy_image: integer('case_study_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_applications_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_applications_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_applications_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_applications_locale_idx').on(columns._locale),
    pages_blocks_applications_case_study_case_study_image_idx: index(
      'pages_blocks_applications_case_study_case_study_image_idx',
    ).on(columns.caseStudy_image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_applications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_technical_overview_process_steps = pgTable(
  'pages_blocks_technical_overview_process_steps',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_technical_overview_process_steps_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_technical_overview_process_steps_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_technical_overview_process_steps_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_technical_overview.id],
      name: 'pages_blocks_technical_overview_process_steps_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_technical_overview_technical_benefits = pgTable(
  'pages_blocks_technical_overview_technical_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_technical_overview_technical_benefits_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('pages_blocks_technical_overview_technical_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_technical_overview_technical_benefits_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_technical_overview.id],
      name: 'pages_blocks_technical_overview_technical_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_technical_overview = pgTable(
  'pages_blocks_technical_overview',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    description: varchar('description'),
    technicalImage: integer('technical_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_technical_overview_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_technical_overview_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_technical_overview_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_technical_overview_locale_idx').on(columns._locale),
    pages_blocks_technical_overview_technical_image_idx: index(
      'pages_blocks_technical_overview_technical_image_idx',
    ).on(columns.technicalImage),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_technical_overview_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_benefits_comparison_benefits = pgTable(
  'pages_blocks_benefits_comparison_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    advantage: varchar('advantage'),
    description: varchar('description'),
    mGard: varchar('m_gard'),
    electronic: varchar('electronic'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_benefits_comparison_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_benefits_comparison_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_benefits_comparison_benefits_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_benefits_comparison.id],
      name: 'pages_blocks_benefits_comparison_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_benefits_comparison_summary_cards = pgTable(
  'pages_blocks_benefits_comparison_summary_cards',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    icon: enum_pages_blocks_benefits_comparison_summary_cards_icon('icon'),
    title: varchar('title'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_benefits_comparison_summary_cards_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_benefits_comparison_summary_cards_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_benefits_comparison_summary_cards_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_benefits_comparison.id],
      name: 'pages_blocks_benefits_comparison_summary_cards_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_benefits_comparison = pgTable(
  'pages_blocks_benefits_comparison',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    bottomCTA_title: varchar('bottom_c_t_a_title'),
    bottomCTA_description: varchar('bottom_c_t_a_description'),
    bottomCTA_primaryButtonText: varchar('bottom_c_t_a_primary_button_text').default(
      'Kontaktirajte nas',
    ),
    bottomCTA_secondaryButtonText: varchar('bottom_c_t_a_secondary_button_text').default(
      'Prenesi dokumentacijo',
    ),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_benefits_comparison_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_benefits_comparison_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_benefits_comparison_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_benefits_comparison_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_benefits_comparison_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_c_t_a_stats = pgTable(
  'pages_blocks_product_c_t_a_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_c_t_a_stats_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_c_t_a_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_product_c_t_a_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_product_c_t_a.id],
      name: 'pages_blocks_product_c_t_a_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_c_t_a_why_us_points = pgTable(
  'pages_blocks_product_c_t_a_why_us_points',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    text: varchar('text'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_c_t_a_why_us_points_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_c_t_a_why_us_points_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_product_c_t_a_why_us_points_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_product_c_t_a.id],
      name: 'pages_blocks_product_c_t_a_why_us_points_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_c_t_a_application_options = pgTable(
  'pages_blocks_product_c_t_a_application_options',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_c_t_a_application_options_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_c_t_a_application_options_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_product_c_t_a_application_options_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_product_c_t_a.id],
      name: 'pages_blocks_product_c_t_a_application_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_c_t_a = pgTable(
  'pages_blocks_product_c_t_a',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    contactInfo_phone: varchar('contact_info_phone'),
    contactInfo_email: varchar('contact_info_email'),
    contactInfo_responseTime: varchar('contact_info_response_time'),
    heroImage: integer('hero_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    formTitle: varchar('form_title').default('Povpraševanje za sistem'),
    privacyText: varchar('privacy_text').default(
      'Soglašam z politiko zasebnosti in obdelavo osebnih podatkov za namen odgovora na povpraševanje.',
    ),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_c_t_a_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_c_t_a_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_product_c_t_a_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_product_c_t_a_locale_idx').on(columns._locale),
    pages_blocks_product_c_t_a_hero_image_idx: index(
      'pages_blocks_product_c_t_a_hero_image_idx',
    ).on(columns.heroImage),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_product_c_t_a_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_resources_resources = pgTable(
  'pages_blocks_product_resources_resources',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    fileType: varchar('file_type'),
    fileSize: varchar('file_size'),
    icon: varchar('icon'),
    category: varchar('category'),
    downloadUrl: varchar('download_url'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_resources_resources_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_resources_resources_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_product_resources_resources_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_product_resources.id],
      name: 'pages_blocks_product_resources_resources_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_resources_quick_access_items = pgTable(
  'pages_blocks_product_resources_quick_access_items',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    name: varchar('name'),
    fileInfo: varchar('file_info'),
    downloadUrl: varchar('download_url'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_resources_quick_access_items_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('pages_blocks_product_resources_quick_access_items_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_product_resources_quick_access_items_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_product_resources.id],
      name: 'pages_blocks_product_resources_quick_access_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_product_resources = pgTable(
  'pages_blocks_product_resources',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    contactSection_title: varchar('contact_section_title'),
    contactSection_description: varchar('contact_section_description'),
    contactSection_phone: varchar('contact_section_phone'),
    contactSection_email: varchar('contact_section_email'),
    newsletterSection_title: varchar('newsletter_section_title'),
    newsletterSection_description: varchar('newsletter_section_description'),
    newsletterSection_privacyText: varchar('newsletter_section_privacy_text'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_product_resources_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_product_resources_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_product_resources_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_product_resources_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_product_resources_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_hero_quick_contact_methods = pgTable(
  'pages_blocks_contact_hero_quick_contact_methods',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    type: enum_pages_blocks_contact_hero_quick_contact_methods_type('type'),
    label: varchar('label'),
    value: varchar('value'),
    link: varchar('link'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_hero_quick_contact_methods_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('pages_blocks_contact_hero_quick_contact_methods_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_contact_hero_quick_contact_methods_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_contact_hero.id],
      name: 'pages_blocks_contact_hero_quick_contact_methods_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_hero = pgTable(
  'pages_blocks_contact_hero',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title').default('Kontakt'),
    subtitle: varchar('subtitle').default('Odgovarjamo v 24h | Nujna podpora: 24/7'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_hero_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_hero_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_contact_hero_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_contact_hero_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_contact_hero_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_form = pgTable(
  'pages_blocks_contact_form',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('Povpraševanje'),
    title: varchar('title').default('Pošljite sporočilo'),
    subtitle: varchar('subtitle').default('Odgovorimo v 24 urah.'),
    formTitle: varchar('form_title').default('Kontaktni obrazec'),
    submitButtonText: varchar('submit_button_text').default('Pošlji povpraševanje'),
    submitButtonLoadingText: varchar('submit_button_loading_text').default('Pošiljam...'),
    privacyText: varchar('privacy_text').default(
      'Soglašam z obdelavo osebnih podatkov in politiko zasebnosti. Podatki bodo uporabljeni izključno za obravnavo povpraševanja in pripravo ponudbe.',
    ),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_form_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_form_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_contact_form_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_contact_form_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_contact_form_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_info_contact_methods = pgTable(
  'pages_blocks_contact_info_contact_methods',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    email: varchar('email'),
    phone: varchar('phone'),
    description: varchar('description'),
    hours: varchar('hours'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_info_contact_methods_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_info_contact_methods_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_contact_info_contact_methods_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_contact_info.id],
      name: 'pages_blocks_contact_info_contact_methods_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_info = pgTable(
  'pages_blocks_contact_info',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('Kontaktni podatki'),
    title: varchar('title').default('Direkten kontakt'),
    subtitle: varchar('subtitle').default('Telefon in e-mail za hitrejši odziv.'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_info_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_info_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_contact_info_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_contact_info_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_contact_info_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_location = pgTable(
  'pages_blocks_contact_location',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('Lokacija'),
    title: varchar('title').default('Naš urad'),
    subtitle: varchar('subtitle').default('V Celju, obisk po dogovoru.'),
    mapEmbedUrl: varchar('map_embed_url').default(
      'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2751.8!2d15.2664!3d46.2396!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x476f8a89d21ae0ad%3A0x4a5b0f1c78ae9a7f!2sCesta%20na%20Ostro%C5%BEno%208%2C%203000%20Celje%2C%20Slovenia!5e0!3m2!1sen!2ssi!4v1700000000000!5m2!1sen!2ssi',
    ),
    address_companyName: varchar('address_company_name').default('SINTEH PRO d.o.o.'),
    address_street: varchar('address_street').default('Cesta na Ostrožno 8'),
    address_city: varchar('address_city').default('3000 Celje'),
    address_country: varchar('address_country').default('Slovenija - EU'),
    emergencyPhone: varchar('emergency_phone').default('+386 (3) 426 36 46'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_location_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_location_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_contact_location_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_contact_location_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_contact_location_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_f_a_q_faqs = pgTable(
  'pages_blocks_contact_f_a_q_faqs',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    question: varchar('question'),
    answer: varchar('answer'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_f_a_q_faqs_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_f_a_q_faqs_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_contact_f_a_q_faqs_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_contact_f_a_q.id],
      name: 'pages_blocks_contact_f_a_q_faqs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_f_a_q = pgTable(
  'pages_blocks_contact_f_a_q',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('Pogosta vprašanja'),
    title: varchar('title').default('Pogosta vprašanja'),
    subtitle: varchar('subtitle').default(
      'Odgovori na najpogostejša vprašanja, ki nam jih zastavljajo stranke.',
    ),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_f_a_q_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_f_a_q_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_contact_f_a_q_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_contact_f_a_q_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_contact_f_a_q_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_universal_hero_benefits = pgTable(
  'pages_blocks_universal_hero_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_universal_hero_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_universal_hero_benefits_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_universal_hero_benefits_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_universal_hero.id],
      name: 'pages_blocks_universal_hero_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_universal_hero_trust_indicators = pgTable(
  'pages_blocks_universal_hero_trust_indicators',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    text: varchar('text'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_universal_hero_trust_indicators_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_universal_hero_trust_indicators_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_universal_hero_trust_indicators_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_universal_hero.id],
      name: 'pages_blocks_universal_hero_trust_indicators_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_universal_hero_stats = pgTable(
  'pages_blocks_universal_hero_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_universal_hero_stats_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_universal_hero_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_universal_hero_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_universal_hero.id],
      name: 'pages_blocks_universal_hero_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_universal_hero_contact_methods = pgTable(
  'pages_blocks_universal_hero_contact_methods',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    link_type:
      enum_pages_blocks_universal_hero_contact_methods_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    title: varchar('title'),
    value: varchar('value'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_universal_hero_contact_methods_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_universal_hero_contact_methods_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_universal_hero_contact_methods_locale_idx').on(columns._locale),
    pages_blocks_universal_hero_contact_methods_link_link_page_idx: index(
      'pages_blocks_universal_hero_contact_methods_link_link_page_idx',
    ).on(columns.link_page),
    pages_blocks_universal_hero_contact_methods_link_link_post_idx: index(
      'pages_blocks_universal_hero_contact_methods_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_universal_hero.id],
      name: 'pages_blocks_universal_hero_contact_methods_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_universal_hero = pgTable(
  'pages_blocks_universal_hero',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_universal_hero_variant('variant').default('standard'),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    benefitsLayout:
      enum_pages_blocks_universal_hero_benefits_layout('benefits_layout').default('grid'),
    primaryCTA_text: varchar('primary_c_t_a_text'),
    primaryCTA_type:
      enum_pages_blocks_universal_hero_primary_c_t_a_type('primary_c_t_a_type').default('page'),
    primaryCTA_page: integer('primary_c_t_a_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    primaryCTA_post: integer('primary_c_t_a_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    primaryCTA_url: varchar('primary_c_t_a_url'),
    primaryCTA_anchor: varchar('primary_c_t_a_anchor'),
    primaryCTA_variant:
      enum_pages_blocks_universal_hero_primary_c_t_a_variant('primary_c_t_a_variant').default(
        'default',
      ),
    secondaryCTA_text: varchar('secondary_c_t_a_text'),
    secondaryCTA_type:
      enum_pages_blocks_universal_hero_secondary_c_t_a_type('secondary_c_t_a_type').default('page'),
    secondaryCTA_page: integer('secondary_c_t_a_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    secondaryCTA_post: integer('secondary_c_t_a_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    secondaryCTA_url: varchar('secondary_c_t_a_url'),
    secondaryCTA_anchor: varchar('secondary_c_t_a_anchor'),
    secondaryCTA_variant:
      enum_pages_blocks_universal_hero_secondary_c_t_a_variant('secondary_c_t_a_variant').default(
        'default',
      ),
    trustText: varchar('trust_text'),
    showImage: boolean('show_image').default(true),
    backgroundStyle:
      enum_pages_blocks_universal_hero_background_style('background_style').default('surface'),
    contentAlignment:
      enum_pages_blocks_universal_hero_content_alignment('content_alignment').default('left'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_universal_hero_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_universal_hero_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_universal_hero_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_universal_hero_locale_idx').on(columns._locale),
    pages_blocks_universal_hero_primary_c_t_a_primary_c_t_a_page_idx: index(
      'pages_blocks_universal_hero_primary_c_t_a_primary_c_t_a_page_idx',
    ).on(columns.primaryCTA_page),
    pages_blocks_universal_hero_primary_c_t_a_primary_c_t_a_post_idx: index(
      'pages_blocks_universal_hero_primary_c_t_a_primary_c_t_a_post_idx',
    ).on(columns.primaryCTA_post),
    pages_blocks_universal_hero_secondary_c_t_a_secondary_c_t_a_page_idx: index(
      'pages_blocks_universal_hero_secondary_c_t_a_secondary_c_t_a_page_idx',
    ).on(columns.secondaryCTA_page),
    pages_blocks_universal_hero_secondary_c_t_a_secondary_c_t_a_post_idx: index(
      'pages_blocks_universal_hero_secondary_c_t_a_secondary_c_t_a_post_idx',
    ).on(columns.secondaryCTA_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_universal_hero_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_universal_c_t_a_benefits = pgTable(
  'pages_blocks_universal_c_t_a_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    benefit: varchar('benefit'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_universal_c_t_a_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_universal_c_t_a_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_universal_c_t_a_benefits_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_universal_c_t_a.id],
      name: 'pages_blocks_universal_c_t_a_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_universal_c_t_a_stats = pgTable(
  'pages_blocks_universal_c_t_a_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_universal_c_t_a_stats_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_universal_c_t_a_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_universal_c_t_a_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_universal_c_t_a.id],
      name: 'pages_blocks_universal_c_t_a_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_universal_c_t_a = pgTable(
  'pages_blocks_universal_c_t_a',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_universal_c_t_a_variant('variant').default('standard'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    primaryCTA_text: varchar('primary_c_t_a_text'),
    primaryCTA_type:
      enum_pages_blocks_universal_c_t_a_primary_c_t_a_type('primary_c_t_a_type').default('page'),
    primaryCTA_page: integer('primary_c_t_a_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    primaryCTA_post: integer('primary_c_t_a_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    primaryCTA_url: varchar('primary_c_t_a_url'),
    primaryCTA_anchor: varchar('primary_c_t_a_anchor'),
    primaryCTA_variant:
      enum_pages_blocks_universal_c_t_a_primary_c_t_a_variant('primary_c_t_a_variant').default(
        'default',
      ),
    secondaryCTA_text: varchar('secondary_c_t_a_text'),
    secondaryCTA_type:
      enum_pages_blocks_universal_c_t_a_secondary_c_t_a_type('secondary_c_t_a_type').default(
        'page',
      ),
    secondaryCTA_page: integer('secondary_c_t_a_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    secondaryCTA_post: integer('secondary_c_t_a_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    secondaryCTA_url: varchar('secondary_c_t_a_url'),
    secondaryCTA_anchor: varchar('secondary_c_t_a_anchor'),
    secondaryCTA_variant:
      enum_pages_blocks_universal_c_t_a_secondary_c_t_a_variant('secondary_c_t_a_variant').default(
        'default',
      ),
    backgroundStyle:
      enum_pages_blocks_universal_c_t_a_background_style('background_style').default('surface'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_universal_c_t_a_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_universal_c_t_a_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_universal_c_t_a_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_universal_c_t_a_locale_idx').on(columns._locale),
    pages_blocks_universal_c_t_a_primary_c_t_a_primary_c_t_a_page_idx: index(
      'pages_blocks_universal_c_t_a_primary_c_t_a_primary_c_t_a_page_idx',
    ).on(columns.primaryCTA_page),
    pages_blocks_universal_c_t_a_primary_c_t_a_primary_c_t_a_post_idx: index(
      'pages_blocks_universal_c_t_a_primary_c_t_a_primary_c_t_a_post_idx',
    ).on(columns.primaryCTA_post),
    pages_blocks_universal_c_t_a_secondary_c_t_a_secondary_c_t_a_page_idx: index(
      'pages_blocks_universal_c_t_a_secondary_c_t_a_secondary_c_t_a_page_idx',
    ).on(columns.secondaryCTA_page),
    pages_blocks_universal_c_t_a_secondary_c_t_a_secondary_c_t_a_post_idx: index(
      'pages_blocks_universal_c_t_a_secondary_c_t_a_secondary_c_t_a_post_idx',
    ).on(columns.secondaryCTA_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_universal_c_t_a_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_feature_grid_features_details = pgTable(
  'pages_blocks_feature_grid_features_details',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    detail: varchar('detail'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_feature_grid_features_details_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_feature_grid_features_details_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_feature_grid_features_details_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_feature_grid_features.id],
      name: 'pages_blocks_feature_grid_features_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_feature_grid_features = pgTable(
  'pages_blocks_feature_grid_features',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    link_type: enum_pages_blocks_feature_grid_features_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    ctaText: varchar('cta_text'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_feature_grid_features_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_feature_grid_features_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_feature_grid_features_locale_idx').on(columns._locale),
    pages_blocks_feature_grid_features_link_link_page_idx: index(
      'pages_blocks_feature_grid_features_link_link_page_idx',
    ).on(columns.link_page),
    pages_blocks_feature_grid_features_link_link_post_idx: index(
      'pages_blocks_feature_grid_features_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_feature_grid.id],
      name: 'pages_blocks_feature_grid_features_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_feature_grid = pgTable(
  'pages_blocks_feature_grid',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_feature_grid_variant('variant').default('features'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    columns: enum_pages_blocks_feature_grid_columns('columns').default('3'),
    cardStyle: enum_pages_blocks_feature_grid_card_style('card_style').default('default'),
    backgroundStyle:
      enum_pages_blocks_feature_grid_background_style('background_style').default('background'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_feature_grid_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_feature_grid_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_feature_grid_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_feature_grid_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_feature_grid_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_content_grid_items_applications = pgTable(
  'pages_blocks_content_grid_items_applications',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    application: varchar('application'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_content_grid_items_applications_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_content_grid_items_applications_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_content_grid_items_applications_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_content_grid_items.id],
      name: 'pages_blocks_content_grid_items_applications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_content_grid_items = pgTable(
  'pages_blocks_content_grid_items',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    name: varchar('name'),
    title: varchar('title'),
    description: varchar('description'),
    link_type: enum_pages_blocks_content_grid_items_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    postCount: numeric('post_count'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_content_grid_items_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_content_grid_items_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_content_grid_items_locale_idx').on(columns._locale),
    pages_blocks_content_grid_items_link_link_page_idx: index(
      'pages_blocks_content_grid_items_link_link_page_idx',
    ).on(columns.link_page),
    pages_blocks_content_grid_items_link_link_post_idx: index(
      'pages_blocks_content_grid_items_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_content_grid.id],
      name: 'pages_blocks_content_grid_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_content_grid = pgTable(
  'pages_blocks_content_grid',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_content_grid_variant('variant').default('categories'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    columns: enum_pages_blocks_content_grid_columns('columns').default('3'),
    backgroundStyle:
      enum_pages_blocks_content_grid_background_style('background_style').default('background'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_content_grid_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_content_grid_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_content_grid_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_content_grid_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_content_grid_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_stats_section_stats = pgTable(
  'pages_blocks_stats_section_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_stats_section_stats_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_stats_section_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_stats_section_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_stats_section.id],
      name: 'pages_blocks_stats_section_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_stats_section = pgTable(
  'pages_blocks_stats_section',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_stats_section_variant('variant').default('standard'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    columns: enum_pages_blocks_stats_section_columns('columns').default('3'),
    backgroundStyle:
      enum_pages_blocks_stats_section_background_style('background_style').default('background'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_stats_section_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_stats_section_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_stats_section_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_stats_section_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_stats_section_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_process_steps_steps_details = pgTable(
  'pages_blocks_process_steps_steps_details',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    detail: varchar('detail'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_process_steps_steps_details_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_process_steps_steps_details_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_process_steps_steps_details_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_process_steps_steps.id],
      name: 'pages_blocks_process_steps_steps_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_process_steps_steps = pgTable(
  'pages_blocks_process_steps_steps',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    number: varchar('number'),
    title: varchar('title'),
    description: varchar('description'),
    duration: varchar('duration'),
    deliverable: varchar('deliverable'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_process_steps_steps_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_process_steps_steps_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_process_steps_steps_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_process_steps.id],
      name: 'pages_blocks_process_steps_steps_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_process_steps = pgTable(
  'pages_blocks_process_steps',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_process_steps_variant('variant').default('numbered'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    backgroundStyle:
      enum_pages_blocks_process_steps_background_style('background_style').default('background'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_process_steps_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_process_steps_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_process_steps_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_process_steps_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_process_steps_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_content_cards_cards_tags = pgTable(
  'pages_blocks_content_cards_cards_tags',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    tag: varchar('tag'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_content_cards_cards_tags_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_content_cards_cards_tags_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_content_cards_cards_tags_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_content_cards_cards.id],
      name: 'pages_blocks_content_cards_cards_tags_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_content_cards_cards = pgTable(
  'pages_blocks_content_cards_cards',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    excerpt: varchar('excerpt'),
    category: varchar('category'),
    readTime: varchar('read_time'),
    publishedAt: varchar('published_at'),
    link_type: enum_pages_blocks_content_cards_cards_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    featured: boolean('featured'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_content_cards_cards_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_content_cards_cards_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_content_cards_cards_locale_idx').on(columns._locale),
    pages_blocks_content_cards_cards_link_link_page_idx: index(
      'pages_blocks_content_cards_cards_link_link_page_idx',
    ).on(columns.link_page),
    pages_blocks_content_cards_cards_link_link_post_idx: index(
      'pages_blocks_content_cards_cards_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_content_cards.id],
      name: 'pages_blocks_content_cards_cards_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_content_cards = pgTable(
  'pages_blocks_content_cards',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_content_cards_variant('variant').default('general'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    columns: enum_pages_blocks_content_cards_columns('columns').default('3'),
    backgroundStyle:
      enum_pages_blocks_content_cards_background_style('background_style').default('background'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_content_cards_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_content_cards_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_content_cards_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_content_cards_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_content_cards_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_section_benefits = pgTable(
  'pages_blocks_contact_section_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    benefit: varchar('benefit'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_section_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_section_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_contact_section_benefits_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_contact_section.id],
      name: 'pages_blocks_contact_section_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_contact_section = pgTable(
  'pages_blocks_contact_section',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_contact_section_variant('variant').default('split'),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    formTitle: varchar('form_title'),
    formDescription: varchar('form_description'),
    backgroundStyle:
      enum_pages_blocks_contact_section_background_style('background_style').default('surface'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_contact_section_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_contact_section_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_contact_section_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_contact_section_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_contact_section_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_comparison_table_items = pgTable(
  'pages_blocks_comparison_table_items',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    advantage: varchar('advantage'),
    description: varchar('description'),
    primary: enum_pages_blocks_comparison_table_items_primary('primary'),
    secondary: enum_pages_blocks_comparison_table_items_secondary('secondary'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_comparison_table_items_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_comparison_table_items_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_comparison_table_items_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_comparison_table.id],
      name: 'pages_blocks_comparison_table_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_comparison_table = pgTable(
  'pages_blocks_comparison_table',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    primaryLabel: varchar('primary_label'),
    secondaryLabel: varchar('secondary_label'),
    backgroundStyle:
      enum_pages_blocks_comparison_table_background_style('background_style').default('background'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_comparison_table_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_comparison_table_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_comparison_table_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_comparison_table_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_comparison_table_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_simple_page_breadcrumbs = pgTable(
  'pages_blocks_simple_page_breadcrumbs',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    link_type: enum_pages_blocks_simple_page_breadcrumbs_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_simple_page_breadcrumbs_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_simple_page_breadcrumbs_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_simple_page_breadcrumbs_locale_idx').on(columns._locale),
    pages_blocks_simple_page_breadcrumbs_link_link_page_idx: index(
      'pages_blocks_simple_page_breadcrumbs_link_link_page_idx',
    ).on(columns.link_page),
    pages_blocks_simple_page_breadcrumbs_link_link_post_idx: index(
      'pages_blocks_simple_page_breadcrumbs_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_simple_page.id],
      name: 'pages_blocks_simple_page_breadcrumbs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_simple_page_links = pgTable(
  'pages_blocks_simple_page_links',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    link_type: enum_pages_blocks_simple_page_links_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_simple_page_links_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_simple_page_links_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_simple_page_links_locale_idx').on(columns._locale),
    pages_blocks_simple_page_links_link_link_page_idx: index(
      'pages_blocks_simple_page_links_link_link_page_idx',
    ).on(columns.link_page),
    pages_blocks_simple_page_links_link_link_post_idx: index(
      'pages_blocks_simple_page_links_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_simple_page.id],
      name: 'pages_blocks_simple_page_links_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_simple_page = pgTable(
  'pages_blocks_simple_page',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_simple_page_variant('variant').default('standard'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_simple_page_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_simple_page_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_simple_page_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_simple_page_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_simple_page_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_brand_showcase_brands = pgTable(
  'pages_blocks_brand_showcase_brands',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    name: varchar('name'),
    description: varchar('description'),
    logo: integer('logo_id').references(() => media.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_brand_showcase_brands_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_brand_showcase_brands_parent_id_idx').on(columns._parentID),
    _localeIdx: index('pages_blocks_brand_showcase_brands_locale_idx').on(columns._locale),
    pages_blocks_brand_showcase_brands_logo_idx: index(
      'pages_blocks_brand_showcase_brands_logo_idx',
    ).on(columns.logo),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_brand_showcase.id],
      name: 'pages_blocks_brand_showcase_brands_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_brand_showcase = pgTable(
  'pages_blocks_brand_showcase',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_brand_showcase_variant('variant').default('grid'),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    backgroundStyle:
      enum_pages_blocks_brand_showcase_background_style('background_style').default('background'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_brand_showcase_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_brand_showcase_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_brand_showcase_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_brand_showcase_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_brand_showcase_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_technical_content_process_steps = pgTable(
  'pages_blocks_technical_content_process_steps',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    number: varchar('number'),
    title: varchar('title'),
    description: varchar('description'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_technical_content_process_steps_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_technical_content_process_steps_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_technical_content_process_steps_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_technical_content.id],
      name: 'pages_blocks_technical_content_process_steps_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_technical_content_specifications_items = pgTable(
  'pages_blocks_technical_content_specifications_items',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label'),
    value: varchar('value'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_technical_content_specifications_items_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('pages_blocks_technical_content_specifications_items_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_technical_content_specifications_items_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_technical_content_specifications.id],
      name: 'pages_blocks_technical_content_specifications_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_technical_content_specifications = pgTable(
  'pages_blocks_technical_content_specifications',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    category: varchar('category'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_technical_content_specifications_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_technical_content_specifications_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_technical_content_specifications_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_technical_content.id],
      name: 'pages_blocks_technical_content_specifications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_technical_content = pgTable(
  'pages_blocks_technical_content',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_technical_content_variant('variant').default('overview'),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    overviewContent: jsonb('overview_content'),
    backgroundStyle:
      enum_pages_blocks_technical_content_background_style('background_style').default(
        'background',
      ),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_technical_content_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_technical_content_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_technical_content_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_technical_content_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_technical_content_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_resource_gallery_resources = pgTable(
  'pages_blocks_resource_gallery_resources',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    fileType: varchar('file_type'),
    fileSize: varchar('file_size'),
    category: varchar('category'),
    downloadUrl: varchar('download_url'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_resource_gallery_resources_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_resource_gallery_resources_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_resource_gallery_resources_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_resource_gallery.id],
      name: 'pages_blocks_resource_gallery_resources_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_resource_gallery_gallery_images = pgTable(
  'pages_blocks_resource_gallery_gallery_images',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    category: varchar('category'),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_resource_gallery_gallery_images_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_resource_gallery_gallery_images_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('pages_blocks_resource_gallery_gallery_images_locale_idx').on(
      columns._locale,
    ),
    pages_blocks_resource_gallery_gallery_images_image_idx: index(
      'pages_blocks_resource_gallery_gallery_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages_blocks_resource_gallery.id],
      name: 'pages_blocks_resource_gallery_gallery_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages_blocks_resource_gallery = pgTable(
  'pages_blocks_resource_gallery',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    variant: enum_pages_blocks_resource_gallery_variant('variant').default('grid'),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    backgroundStyle:
      enum_pages_blocks_resource_gallery_background_style('background_style').default('background'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('pages_blocks_resource_gallery_order_idx').on(columns._order),
    _parentIDIdx: index('pages_blocks_resource_gallery_parent_id_idx').on(columns._parentID),
    _pathIdx: index('pages_blocks_resource_gallery_path_idx').on(columns._path),
    _localeIdx: index('pages_blocks_resource_gallery_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_blocks_resource_gallery_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const pages = pgTable(
  'pages',
  {
    id: serial('id').primaryKey(),
    slug: varchar('slug'),
    publishedAt: timestamp('published_at', { mode: 'string', withTimezone: true, precision: 3 }),
    status: enum_pages_status('status').default('draft'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    _status: enum_pages_status('_status').default('draft'),
  },
  (columns) => ({
    pages_slug_idx: uniqueIndex('pages_slug_idx').on(columns.slug),
    pages_updated_at_idx: index('pages_updated_at_idx').on(columns.updatedAt),
    pages_created_at_idx: index('pages_created_at_idx').on(columns.createdAt),
    pages__status_idx: index('pages__status_idx').on(columns._status),
  }),
)

export const pages_locales = pgTable(
  'pages_locales',
  {
    title: varchar('title'),
    meta_title: varchar('meta_title'),
    meta_description: varchar('meta_description'),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: integer('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex('pages_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [pages.id],
      name: 'pages_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_hero_cta_buttons = pgTable(
  '_pages_v_blocks_hero_cta_buttons',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    label: varchar('label'),
    type: enum__pages_v_blocks_hero_cta_buttons_type('type').default('page'),
    page: integer('page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    post: integer('post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    url: varchar('url'),
    anchor: varchar('anchor'),
    variant: enum__pages_v_blocks_hero_cta_buttons_variant('variant').default('default'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_hero_cta_buttons_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_hero_cta_buttons_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_hero_cta_buttons_locale_idx').on(columns._locale),
    _pages_v_blocks_hero_cta_buttons_page_idx: index(
      '_pages_v_blocks_hero_cta_buttons_page_idx',
    ).on(columns.page),
    _pages_v_blocks_hero_cta_buttons_post_idx: index(
      '_pages_v_blocks_hero_cta_buttons_post_idx',
    ).on(columns.post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_hero.id],
      name: '_pages_v_blocks_hero_cta_buttons_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_hero = pgTable(
  '_pages_v_blocks_hero',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    backgroundImage: integer('background_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    bottomText: varchar('bottom_text'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_hero_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_hero_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_hero_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_hero_locale_idx').on(columns._locale),
    _pages_v_blocks_hero_background_image_idx: index(
      '_pages_v_blocks_hero_background_image_idx',
    ).on(columns.backgroundImage),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_hero_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_logo_belt_logos = pgTable(
  '_pages_v_blocks_logo_belt_logos',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    logo: integer('logo_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    alt: varchar('alt'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_logo_belt_logos_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_logo_belt_logos_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_logo_belt_logos_locale_idx').on(columns._locale),
    _pages_v_blocks_logo_belt_logos_logo_idx: index('_pages_v_blocks_logo_belt_logos_logo_idx').on(
      columns.logo,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_logo_belt.id],
      name: '_pages_v_blocks_logo_belt_logos_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_logo_belt = pgTable(
  '_pages_v_blocks_logo_belt',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_logo_belt_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_logo_belt_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_logo_belt_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_logo_belt_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_logo_belt_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_services_services_features = pgTable(
  '_pages_v_blocks_services_services_features',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    feature: varchar('feature'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_services_services_features_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_services_services_features_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_services_services_features_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_services_services.id],
      name: '_pages_v_blocks_services_services_features_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_services_services = pgTable(
  '_pages_v_blocks_services_services',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description').default(
      'Sistematičen pristop, preverjene komponente, popolna dokumentacija.',
    ),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    button_text: varchar('button_text').default('Več o storitvi'),
    button_type: enum__pages_v_blocks_services_services_button_type('button_type').default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_services_services_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_services_services_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_services_services_locale_idx').on(columns._locale),
    _pages_v_blocks_services_services_image_idx: index(
      '_pages_v_blocks_services_services_image_idx',
    ).on(columns.image),
    _pages_v_blocks_services_services_button_button_page_idx: index(
      '_pages_v_blocks_services_services_button_button_page_idx',
    ).on(columns.button_page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_services.id],
      name: '_pages_v_blocks_services_services_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_services = pgTable(
  '_pages_v_blocks_services',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge').default('STORITVE'),
    title: varchar('title').default('Specializirani za krmiljenje in avtomatizacijo'),
    subtitle: varchar('subtitle').default('Od načrtovanja do zagona in servisa'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_services_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_services_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_services_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_services_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_services_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_about_badges = pgTable(
  '_pages_v_blocks_about_badges',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    text: varchar('text'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_about_badges_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_about_badges_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_about_badges_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_about.id],
      name: '_pages_v_blocks_about_badges_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_about_stats = pgTable(
  '_pages_v_blocks_about_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    number: varchar('number'),
    label: varchar('label'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_about_stats_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_about_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_about_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_about.id],
      name: '_pages_v_blocks_about_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_about_process = pgTable(
  '_pages_v_blocks_about_process',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    step: varchar('step'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_about_process_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_about_process_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_about_process_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_about.id],
      name: '_pages_v_blocks_about_process_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_about = pgTable(
  '_pages_v_blocks_about',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title').default('O podjetju'),
    description: varchar('description').default(
      'Specializirani smo za industrijske avtomatizacijske sisteme z več kot 10-letnimi izkušnjami.',
    ),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    calloutText: varchar('callout_text'),
    button_text: varchar('button_text').default('Več o nas'),
    button_type: enum__pages_v_blocks_about_button_type('button_type').default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_post: integer('button_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_about_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_about_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_about_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_about_locale_idx').on(columns._locale),
    _pages_v_blocks_about_image_idx: index('_pages_v_blocks_about_image_idx').on(columns.image),
    _pages_v_blocks_about_button_button_page_idx: index(
      '_pages_v_blocks_about_button_button_page_idx',
    ).on(columns.button_page),
    _pages_v_blocks_about_button_button_post_idx: index(
      '_pages_v_blocks_about_button_button_post_idx',
    ).on(columns.button_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_about_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_why_trust_reasons = pgTable(
  '_pages_v_blocks_why_trust_reasons',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    reason: varchar('reason'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_why_trust_reasons_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_why_trust_reasons_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_why_trust_reasons_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_why_trust.id],
      name: '_pages_v_blocks_why_trust_reasons_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_why_trust_pillars = pgTable(
  '_pages_v_blocks_why_trust_pillars',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    icon: enum__pages_v_blocks_why_trust_pillars_icon('icon'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_why_trust_pillars_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_why_trust_pillars_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_why_trust_pillars_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_why_trust.id],
      name: '_pages_v_blocks_why_trust_pillars_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_why_trust = pgTable(
  '_pages_v_blocks_why_trust',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title').default('Zakaj nam zaupajo?'),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    button_text: varchar('button_text').default('Zaupajte nam'),
    button_type: enum__pages_v_blocks_why_trust_button_type('button_type').default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_post: integer('button_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_why_trust_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_why_trust_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_why_trust_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_why_trust_locale_idx').on(columns._locale),
    _pages_v_blocks_why_trust_image_idx: index('_pages_v_blocks_why_trust_image_idx').on(
      columns.image,
    ),
    _pages_v_blocks_why_trust_button_button_page_idx: index(
      '_pages_v_blocks_why_trust_button_button_page_idx',
    ).on(columns.button_page),
    _pages_v_blocks_why_trust_button_button_post_idx: index(
      '_pages_v_blocks_why_trust_button_button_post_idx',
    ).on(columns.button_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_why_trust_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_projects_projects_stack = pgTable(
  '_pages_v_blocks_projects_projects_stack',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    technology: varchar('technology'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_projects_projects_stack_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_projects_projects_stack_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_projects_projects_stack_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_projects_projects.id],
      name: '_pages_v_blocks_projects_projects_stack_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_projects_projects = pgTable(
  '_pages_v_blocks_projects_projects',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    category: varchar('category'),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    description: varchar('description'),
    link: varchar('link'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_projects_projects_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_projects_projects_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_projects_projects_locale_idx').on(columns._locale),
    _pages_v_blocks_projects_projects_image_idx: index(
      '_pages_v_blocks_projects_projects_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_projects.id],
      name: '_pages_v_blocks_projects_projects_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_projects = pgTable(
  '_pages_v_blocks_projects',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge').default('PROJEKTI'),
    title: varchar('title').default('Naši projekti'),
    subtitle: varchar('subtitle').default(
      'Izsek projektov, ki so izboljšali produktivnost, varnost in sledljivost.',
    ),
    button_text: varchar('button_text').default('Vsi projekti'),
    button_type: enum__pages_v_blocks_projects_button_type('button_type').default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_post: integer('button_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_projects_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_projects_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_projects_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_projects_locale_idx').on(columns._locale),
    _pages_v_blocks_projects_button_button_page_idx: index(
      '_pages_v_blocks_projects_button_button_page_idx',
    ).on(columns.button_page),
    _pages_v_blocks_projects_button_button_post_idx: index(
      '_pages_v_blocks_projects_button_button_post_idx',
    ).on(columns.button_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_projects_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact = pgTable(
  '_pages_v_blocks_contact',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge').default('KONTAKT'),
    title: varchar('title').default('Stopite v stik z nami'),
    subtitle: varchar('subtitle').default('Pripravili vam bomo ponudbo v 24 urah'),
    phone: varchar('phone').default('+386 1 234 5678'),
    email: varchar('email').default('info@sinteh.si'),
    privacyText: varchar('privacy_text').default(
      'Pošiljanjem soglašate z našo politiko zasebnosti. Vaših podatkov ne posredujemo tretjim.',
    ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_contact_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_contact_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_contact_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_rich_text = pgTable(
  '_pages_v_blocks_rich_text',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    content: jsonb('content'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_rich_text_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_rich_text_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_rich_text_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_rich_text_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_rich_text_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_hero_key_benefits = pgTable(
  '_pages_v_blocks_product_hero_key_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_hero_key_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_hero_key_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_product_hero_key_benefits_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_product_hero.id],
      name: '_pages_v_blocks_product_hero_key_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_hero_cta_buttons = pgTable(
  '_pages_v_blocks_product_hero_cta_buttons',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    label: varchar('label'),
    type: enum__pages_v_blocks_product_hero_cta_buttons_type('type').default('page'),
    page: integer('page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    post: integer('post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    url: varchar('url'),
    anchor: varchar('anchor'),
    variant: enum__pages_v_blocks_product_hero_cta_buttons_variant('variant').default('default'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_hero_cta_buttons_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_hero_cta_buttons_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_product_hero_cta_buttons_locale_idx').on(columns._locale),
    _pages_v_blocks_product_hero_cta_buttons_page_idx: index(
      '_pages_v_blocks_product_hero_cta_buttons_page_idx',
    ).on(columns.page),
    _pages_v_blocks_product_hero_cta_buttons_post_idx: index(
      '_pages_v_blocks_product_hero_cta_buttons_post_idx',
    ).on(columns.post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_product_hero.id],
      name: '_pages_v_blocks_product_hero_cta_buttons_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_hero = pgTable(
  '_pages_v_blocks_product_hero',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    backgroundImage: integer('background_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_hero_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_hero_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_product_hero_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_product_hero_locale_idx').on(columns._locale),
    _pages_v_blocks_product_hero_background_image_idx: index(
      '_pages_v_blocks_product_hero_background_image_idx',
    ).on(columns.backgroundImage),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_product_hero_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_key_features_features = pgTable(
  '_pages_v_blocks_key_features_features',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    icon: enum__pages_v_blocks_key_features_features_icon('icon'),
    title: varchar('title'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_key_features_features_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_key_features_features_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_key_features_features_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_key_features.id],
      name: '_pages_v_blocks_key_features_features_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_key_features = pgTable(
  '_pages_v_blocks_key_features',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    bottomHighlight_title: varchar('bottom_highlight_title'),
    bottomHighlight_description: varchar('bottom_highlight_description'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_key_features_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_key_features_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_key_features_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_key_features_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_key_features_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_gallery_images = pgTable(
  '_pages_v_blocks_product_gallery_images',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    category: varchar('category'),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_gallery_images_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_gallery_images_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_product_gallery_images_locale_idx').on(columns._locale),
    _pages_v_blocks_product_gallery_images_image_idx: index(
      '_pages_v_blocks_product_gallery_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_product_gallery.id],
      name: '_pages_v_blocks_product_gallery_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_gallery = pgTable(
  '_pages_v_blocks_product_gallery',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    downloadSection_title: varchar('download_section_title'),
    downloadSection_description: varchar('download_section_description'),
    downloadSection_downloadButtonText: varchar('download_section_download_button_text').default(
      'Prenesi galerijo',
    ),
    downloadSection_requestButtonText: varchar('download_section_request_button_text').default(
      'Zahtevaj specifične slike',
    ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_gallery_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_gallery_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_product_gallery_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_product_gallery_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_product_gallery_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_specifications_specifications_items = pgTable(
  '_pages_v_blocks_specifications_specifications_items',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    label: varchar('label'),
    value: varchar('value'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_specifications_specifications_items_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_specifications_specifications_items_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_specifications_specifications_items_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_specifications_specifications.id],
      name: '_pages_v_blocks_specifications_specifications_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_specifications_specifications = pgTable(
  '_pages_v_blocks_specifications_specifications',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    category: varchar('category'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_specifications_specifications_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_specifications_specifications_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_specifications_specifications_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_specifications.id],
      name: '_pages_v_blocks_specifications_specifications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_specifications_certification_badges = pgTable(
  '_pages_v_blocks_specifications_certification_badges',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    name: varchar('name'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_specifications_certification_badges_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_specifications_certification_badges_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_specifications_certification_badges_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_specifications.id],
      name: '_pages_v_blocks_specifications_certification_badges_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_specifications_additional_info_details = pgTable(
  '_pages_v_blocks_specifications_additional_info_details',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    label: varchar('label'),
    value: varchar('value'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_specifications_additional_info_details_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_specifications_additional_info_details_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_specifications_additional_info_details_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_specifications.id],
      name: '_pages_v_blocks_specifications_additional_info_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_specifications = pgTable(
  '_pages_v_blocks_specifications',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    additionalInfo_title: varchar('additional_info_title'),
    additionalInfo_description: varchar('additional_info_description'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_specifications_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_specifications_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_specifications_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_specifications_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_specifications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_applications_applications_details = pgTable(
  '_pages_v_blocks_applications_applications_details',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    detail: varchar('detail'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_applications_applications_details_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_applications_applications_details_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_applications_applications_details_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_applications_applications.id],
      name: '_pages_v_blocks_applications_applications_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_applications_applications = pgTable(
  '_pages_v_blocks_applications_applications',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    icon: enum__pages_v_blocks_applications_applications_icon('icon'),
    title: varchar('title'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_applications_applications_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_applications_applications_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_applications_applications_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_applications.id],
      name: '_pages_v_blocks_applications_applications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_applications_stats = pgTable(
  '_pages_v_blocks_applications_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    number: varchar('number'),
    label: varchar('label'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_applications_stats_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_applications_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_applications_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_applications.id],
      name: '_pages_v_blocks_applications_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_applications_case_study_stats = pgTable(
  '_pages_v_blocks_applications_case_study_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    label: varchar('label'),
    value: varchar('value'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_applications_case_study_stats_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_applications_case_study_stats_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_applications_case_study_stats_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_applications.id],
      name: '_pages_v_blocks_applications_case_study_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_applications = pgTable(
  '_pages_v_blocks_applications',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    caseStudy_title: varchar('case_study_title'),
    caseStudy_description: varchar('case_study_description'),
    caseStudy_image: integer('case_study_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_applications_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_applications_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_applications_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_applications_locale_idx').on(columns._locale),
    _pages_v_blocks_applications_case_study_case_study_image_idx: index(
      '_pages_v_blocks_applications_case_study_case_study_image_idx',
    ).on(columns.caseStudy_image),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_applications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_technical_overview_process_steps = pgTable(
  '_pages_v_blocks_technical_overview_process_steps',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_technical_overview_process_steps_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_technical_overview_process_steps_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_technical_overview_process_steps_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_technical_overview.id],
      name: '_pages_v_blocks_technical_overview_process_steps_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_technical_overview_technical_benefits = pgTable(
  '_pages_v_blocks_technical_overview_technical_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_technical_overview_technical_benefits_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_technical_overview_technical_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_technical_overview_technical_benefits_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_technical_overview.id],
      name: '_pages_v_blocks_technical_overview_technical_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_technical_overview = pgTable(
  '_pages_v_blocks_technical_overview',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    description: varchar('description'),
    technicalImage: integer('technical_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_technical_overview_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_technical_overview_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_technical_overview_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_technical_overview_locale_idx').on(columns._locale),
    _pages_v_blocks_technical_overview_technical_image_idx: index(
      '_pages_v_blocks_technical_overview_technical_image_idx',
    ).on(columns.technicalImage),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_technical_overview_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_benefits_comparison_benefits = pgTable(
  '_pages_v_blocks_benefits_comparison_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    advantage: varchar('advantage'),
    description: varchar('description'),
    mGard: varchar('m_gard'),
    electronic: varchar('electronic'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_benefits_comparison_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_benefits_comparison_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_benefits_comparison_benefits_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_benefits_comparison.id],
      name: '_pages_v_blocks_benefits_comparison_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_benefits_comparison_summary_cards = pgTable(
  '_pages_v_blocks_benefits_comparison_summary_cards',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    icon: enum__pages_v_blocks_benefits_comparison_summary_cards_icon('icon'),
    title: varchar('title'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_benefits_comparison_summary_cards_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_benefits_comparison_summary_cards_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_benefits_comparison_summary_cards_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_benefits_comparison.id],
      name: '_pages_v_blocks_benefits_comparison_summary_cards_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_benefits_comparison = pgTable(
  '_pages_v_blocks_benefits_comparison',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    bottomCTA_title: varchar('bottom_c_t_a_title'),
    bottomCTA_description: varchar('bottom_c_t_a_description'),
    bottomCTA_primaryButtonText: varchar('bottom_c_t_a_primary_button_text').default(
      'Kontaktirajte nas',
    ),
    bottomCTA_secondaryButtonText: varchar('bottom_c_t_a_secondary_button_text').default(
      'Prenesi dokumentacijo',
    ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_benefits_comparison_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_benefits_comparison_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_benefits_comparison_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_benefits_comparison_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_benefits_comparison_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_c_t_a_stats = pgTable(
  '_pages_v_blocks_product_c_t_a_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_c_t_a_stats_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_c_t_a_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_product_c_t_a_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_product_c_t_a.id],
      name: '_pages_v_blocks_product_c_t_a_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_c_t_a_why_us_points = pgTable(
  '_pages_v_blocks_product_c_t_a_why_us_points',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    text: varchar('text'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_c_t_a_why_us_points_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_c_t_a_why_us_points_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_product_c_t_a_why_us_points_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_product_c_t_a.id],
      name: '_pages_v_blocks_product_c_t_a_why_us_points_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_c_t_a_application_options = pgTable(
  '_pages_v_blocks_product_c_t_a_application_options',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_c_t_a_application_options_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_product_c_t_a_application_options_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_product_c_t_a_application_options_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_product_c_t_a.id],
      name: '_pages_v_blocks_product_c_t_a_application_options_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_c_t_a = pgTable(
  '_pages_v_blocks_product_c_t_a',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    contactInfo_phone: varchar('contact_info_phone'),
    contactInfo_email: varchar('contact_info_email'),
    contactInfo_responseTime: varchar('contact_info_response_time'),
    heroImage: integer('hero_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    formTitle: varchar('form_title').default('Povpraševanje za sistem'),
    privacyText: varchar('privacy_text').default(
      'Soglašam z politiko zasebnosti in obdelavo osebnih podatkov za namen odgovora na povpraševanje.',
    ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_c_t_a_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_c_t_a_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_product_c_t_a_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_product_c_t_a_locale_idx').on(columns._locale),
    _pages_v_blocks_product_c_t_a_hero_image_idx: index(
      '_pages_v_blocks_product_c_t_a_hero_image_idx',
    ).on(columns.heroImage),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_product_c_t_a_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_resources_resources = pgTable(
  '_pages_v_blocks_product_resources_resources',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    fileType: varchar('file_type'),
    fileSize: varchar('file_size'),
    icon: varchar('icon'),
    category: varchar('category'),
    downloadUrl: varchar('download_url'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_resources_resources_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_resources_resources_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_product_resources_resources_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_product_resources.id],
      name: '_pages_v_blocks_product_resources_resources_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_resources_quick_access_items = pgTable(
  '_pages_v_blocks_product_resources_quick_access_items',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    name: varchar('name'),
    fileInfo: varchar('file_info'),
    downloadUrl: varchar('download_url'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_resources_quick_access_items_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_product_resources_quick_access_items_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_product_resources_quick_access_items_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_product_resources.id],
      name: '_pages_v_blocks_product_resources_quick_access_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_product_resources = pgTable(
  '_pages_v_blocks_product_resources',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    contactSection_title: varchar('contact_section_title'),
    contactSection_description: varchar('contact_section_description'),
    contactSection_phone: varchar('contact_section_phone'),
    contactSection_email: varchar('contact_section_email'),
    newsletterSection_title: varchar('newsletter_section_title'),
    newsletterSection_description: varchar('newsletter_section_description'),
    newsletterSection_privacyText: varchar('newsletter_section_privacy_text'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_product_resources_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_product_resources_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_product_resources_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_product_resources_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_product_resources_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_hero_quick_contact_methods = pgTable(
  '_pages_v_blocks_contact_hero_quick_contact_methods',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    type: enum__pages_v_blocks_contact_hero_quick_contact_methods_type('type'),
    label: varchar('label'),
    value: varchar('value'),
    link: varchar('link'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_hero_quick_contact_methods_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_contact_hero_quick_contact_methods_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_contact_hero_quick_contact_methods_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_contact_hero.id],
      name: '_pages_v_blocks_contact_hero_quick_contact_methods_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_hero = pgTable(
  '_pages_v_blocks_contact_hero',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title').default('Kontakt'),
    subtitle: varchar('subtitle').default('Odgovarjamo v 24h | Nujna podpora: 24/7'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_hero_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_hero_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_contact_hero_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_contact_hero_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_contact_hero_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_form = pgTable(
  '_pages_v_blocks_contact_form',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge').default('Povpraševanje'),
    title: varchar('title').default('Pošljite sporočilo'),
    subtitle: varchar('subtitle').default('Odgovorimo v 24 urah.'),
    formTitle: varchar('form_title').default('Kontaktni obrazec'),
    submitButtonText: varchar('submit_button_text').default('Pošlji povpraševanje'),
    submitButtonLoadingText: varchar('submit_button_loading_text').default('Pošiljam...'),
    privacyText: varchar('privacy_text').default(
      'Soglašam z obdelavo osebnih podatkov in politiko zasebnosti. Podatki bodo uporabljeni izključno za obravnavo povpraševanja in pripravo ponudbe.',
    ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_form_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_form_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_contact_form_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_contact_form_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_contact_form_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_info_contact_methods = pgTable(
  '_pages_v_blocks_contact_info_contact_methods',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    email: varchar('email'),
    phone: varchar('phone'),
    description: varchar('description'),
    hours: varchar('hours'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_info_contact_methods_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_info_contact_methods_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_contact_info_contact_methods_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_contact_info.id],
      name: '_pages_v_blocks_contact_info_contact_methods_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_info = pgTable(
  '_pages_v_blocks_contact_info',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge').default('Kontaktni podatki'),
    title: varchar('title').default('Direkten kontakt'),
    subtitle: varchar('subtitle').default('Telefon in e-mail za hitrejši odziv.'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_info_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_info_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_contact_info_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_contact_info_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_contact_info_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_location = pgTable(
  '_pages_v_blocks_contact_location',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge').default('Lokacija'),
    title: varchar('title').default('Naš urad'),
    subtitle: varchar('subtitle').default('V Celju, obisk po dogovoru.'),
    mapEmbedUrl: varchar('map_embed_url').default(
      'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2751.8!2d15.2664!3d46.2396!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x476f8a89d21ae0ad%3A0x4a5b0f1c78ae9a7f!2sCesta%20na%20Ostro%C5%BEno%208%2C%203000%20Celje%2C%20Slovenia!5e0!3m2!1sen!2ssi!4v1700000000000!5m2!1sen!2ssi',
    ),
    address_companyName: varchar('address_company_name').default('SINTEH PRO d.o.o.'),
    address_street: varchar('address_street').default('Cesta na Ostrožno 8'),
    address_city: varchar('address_city').default('3000 Celje'),
    address_country: varchar('address_country').default('Slovenija - EU'),
    emergencyPhone: varchar('emergency_phone').default('+386 (3) 426 36 46'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_location_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_location_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_contact_location_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_contact_location_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_contact_location_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_f_a_q_faqs = pgTable(
  '_pages_v_blocks_contact_f_a_q_faqs',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    question: varchar('question'),
    answer: varchar('answer'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_f_a_q_faqs_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_f_a_q_faqs_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_contact_f_a_q_faqs_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_contact_f_a_q.id],
      name: '_pages_v_blocks_contact_f_a_q_faqs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_f_a_q = pgTable(
  '_pages_v_blocks_contact_f_a_q',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    badge: varchar('badge').default('Pogosta vprašanja'),
    title: varchar('title').default('Pogosta vprašanja'),
    subtitle: varchar('subtitle').default(
      'Odgovori na najpogostejša vprašanja, ki nam jih zastavljajo stranke.',
    ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_f_a_q_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_f_a_q_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_contact_f_a_q_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_contact_f_a_q_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_contact_f_a_q_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_universal_hero_benefits = pgTable(
  '_pages_v_blocks_universal_hero_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_universal_hero_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_universal_hero_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_universal_hero_benefits_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_universal_hero.id],
      name: '_pages_v_blocks_universal_hero_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_universal_hero_trust_indicators = pgTable(
  '_pages_v_blocks_universal_hero_trust_indicators',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    text: varchar('text'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_universal_hero_trust_indicators_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_universal_hero_trust_indicators_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_universal_hero_trust_indicators_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_universal_hero.id],
      name: '_pages_v_blocks_universal_hero_trust_indicators_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_universal_hero_stats = pgTable(
  '_pages_v_blocks_universal_hero_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_universal_hero_stats_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_universal_hero_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_universal_hero_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_universal_hero.id],
      name: '_pages_v_blocks_universal_hero_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_universal_hero_contact_methods = pgTable(
  '_pages_v_blocks_universal_hero_contact_methods',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    link_type:
      enum__pages_v_blocks_universal_hero_contact_methods_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    title: varchar('title'),
    value: varchar('value'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_universal_hero_contact_methods_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_universal_hero_contact_methods_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_universal_hero_contact_methods_locale_idx').on(
      columns._locale,
    ),
    _pages_v_blocks_universal_hero_contact_methods_link_link_page_idx: index(
      '_pages_v_blocks_universal_hero_contact_methods_link_link_page_idx',
    ).on(columns.link_page),
    _pages_v_blocks_universal_hero_contact_methods_link_link_post_idx: index(
      '_pages_v_blocks_universal_hero_contact_methods_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_universal_hero.id],
      name: '_pages_v_blocks_universal_hero_contact_methods_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_universal_hero = pgTable(
  '_pages_v_blocks_universal_hero',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_universal_hero_variant('variant').default('standard'),
    badge: varchar('badge'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    benefitsLayout:
      enum__pages_v_blocks_universal_hero_benefits_layout('benefits_layout').default('grid'),
    primaryCTA_text: varchar('primary_c_t_a_text'),
    primaryCTA_type:
      enum__pages_v_blocks_universal_hero_primary_c_t_a_type('primary_c_t_a_type').default('page'),
    primaryCTA_page: integer('primary_c_t_a_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    primaryCTA_post: integer('primary_c_t_a_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    primaryCTA_url: varchar('primary_c_t_a_url'),
    primaryCTA_anchor: varchar('primary_c_t_a_anchor'),
    primaryCTA_variant:
      enum__pages_v_blocks_universal_hero_primary_c_t_a_variant('primary_c_t_a_variant').default(
        'default',
      ),
    secondaryCTA_text: varchar('secondary_c_t_a_text'),
    secondaryCTA_type:
      enum__pages_v_blocks_universal_hero_secondary_c_t_a_type('secondary_c_t_a_type').default(
        'page',
      ),
    secondaryCTA_page: integer('secondary_c_t_a_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    secondaryCTA_post: integer('secondary_c_t_a_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    secondaryCTA_url: varchar('secondary_c_t_a_url'),
    secondaryCTA_anchor: varchar('secondary_c_t_a_anchor'),
    secondaryCTA_variant:
      enum__pages_v_blocks_universal_hero_secondary_c_t_a_variant(
        'secondary_c_t_a_variant',
      ).default('default'),
    trustText: varchar('trust_text'),
    showImage: boolean('show_image').default(true),
    backgroundStyle:
      enum__pages_v_blocks_universal_hero_background_style('background_style').default('surface'),
    contentAlignment:
      enum__pages_v_blocks_universal_hero_content_alignment('content_alignment').default('left'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_universal_hero_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_universal_hero_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_universal_hero_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_universal_hero_locale_idx').on(columns._locale),
    _pages_v_blocks_universal_hero_primary_c_t_a_primary_c_t_a_page_idx: index(
      '_pages_v_blocks_universal_hero_primary_c_t_a_primary_c_t_a_page_idx',
    ).on(columns.primaryCTA_page),
    _pages_v_blocks_universal_hero_primary_c_t_a_primary_c_t_a_post_idx: index(
      '_pages_v_blocks_universal_hero_primary_c_t_a_primary_c_t_a_post_idx',
    ).on(columns.primaryCTA_post),
    _pages_v_blocks_universal_hero_secondary_c_t_a_secondary_c_t_a_page_idx: index(
      '_pages_v_blocks_universal_hero_secondary_c_t_a_secondary_c_t_a_page_idx',
    ).on(columns.secondaryCTA_page),
    _pages_v_blocks_universal_hero_secondary_c_t_a_secondary_c_t_a_post_idx: index(
      '_pages_v_blocks_universal_hero_secondary_c_t_a_secondary_c_t_a_post_idx',
    ).on(columns.secondaryCTA_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_universal_hero_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_universal_c_t_a_benefits = pgTable(
  '_pages_v_blocks_universal_c_t_a_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    benefit: varchar('benefit'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_universal_c_t_a_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_universal_c_t_a_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_universal_c_t_a_benefits_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_universal_c_t_a.id],
      name: '_pages_v_blocks_universal_c_t_a_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_universal_c_t_a_stats = pgTable(
  '_pages_v_blocks_universal_c_t_a_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_universal_c_t_a_stats_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_universal_c_t_a_stats_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_universal_c_t_a_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_universal_c_t_a.id],
      name: '_pages_v_blocks_universal_c_t_a_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_universal_c_t_a = pgTable(
  '_pages_v_blocks_universal_c_t_a',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_universal_c_t_a_variant('variant').default('standard'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    primaryCTA_text: varchar('primary_c_t_a_text'),
    primaryCTA_type:
      enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_type('primary_c_t_a_type').default('page'),
    primaryCTA_page: integer('primary_c_t_a_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    primaryCTA_post: integer('primary_c_t_a_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    primaryCTA_url: varchar('primary_c_t_a_url'),
    primaryCTA_anchor: varchar('primary_c_t_a_anchor'),
    primaryCTA_variant:
      enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_variant('primary_c_t_a_variant').default(
        'default',
      ),
    secondaryCTA_text: varchar('secondary_c_t_a_text'),
    secondaryCTA_type:
      enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_type('secondary_c_t_a_type').default(
        'page',
      ),
    secondaryCTA_page: integer('secondary_c_t_a_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    secondaryCTA_post: integer('secondary_c_t_a_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    secondaryCTA_url: varchar('secondary_c_t_a_url'),
    secondaryCTA_anchor: varchar('secondary_c_t_a_anchor'),
    secondaryCTA_variant:
      enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_variant(
        'secondary_c_t_a_variant',
      ).default('default'),
    backgroundStyle:
      enum__pages_v_blocks_universal_c_t_a_background_style('background_style').default('surface'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_universal_c_t_a_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_universal_c_t_a_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_universal_c_t_a_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_universal_c_t_a_locale_idx').on(columns._locale),
    _pages_v_blocks_universal_c_t_a_primary_c_t_a_primary_c_t_a_page_idx: index(
      '_pages_v_blocks_universal_c_t_a_primary_c_t_a_primary_c_t_a_page_idx',
    ).on(columns.primaryCTA_page),
    _pages_v_blocks_universal_c_t_a_primary_c_t_a_primary_c_t_a_post_idx: index(
      '_pages_v_blocks_universal_c_t_a_primary_c_t_a_primary_c_t_a_post_idx',
    ).on(columns.primaryCTA_post),
    _pages_v_blocks_universal_c_t_a_secondary_c_t_a_secondary_c_t_a_page_idx: index(
      '_pages_v_blocks_universal_c_t_a_secondary_c_t_a_secondary_c_t_a_page_idx',
    ).on(columns.secondaryCTA_page),
    _pages_v_blocks_universal_c_t_a_secondary_c_t_a_secondary_c_t_a_post_idx: index(
      '_pages_v_blocks_universal_c_t_a_secondary_c_t_a_secondary_c_t_a_post_idx',
    ).on(columns.secondaryCTA_post),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_universal_c_t_a_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_feature_grid_features_details = pgTable(
  '_pages_v_blocks_feature_grid_features_details',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    detail: varchar('detail'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_feature_grid_features_details_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_feature_grid_features_details_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_feature_grid_features_details_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_feature_grid_features.id],
      name: '_pages_v_blocks_feature_grid_features_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_feature_grid_features = pgTable(
  '_pages_v_blocks_feature_grid_features',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    link_type: enum__pages_v_blocks_feature_grid_features_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    ctaText: varchar('cta_text'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_feature_grid_features_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_feature_grid_features_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_feature_grid_features_locale_idx').on(columns._locale),
    _pages_v_blocks_feature_grid_features_link_link_page_idx: index(
      '_pages_v_blocks_feature_grid_features_link_link_page_idx',
    ).on(columns.link_page),
    _pages_v_blocks_feature_grid_features_link_link_post_idx: index(
      '_pages_v_blocks_feature_grid_features_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_feature_grid.id],
      name: '_pages_v_blocks_feature_grid_features_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_feature_grid = pgTable(
  '_pages_v_blocks_feature_grid',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_feature_grid_variant('variant').default('features'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    columns: enum__pages_v_blocks_feature_grid_columns('columns').default('3'),
    cardStyle: enum__pages_v_blocks_feature_grid_card_style('card_style').default('default'),
    backgroundStyle:
      enum__pages_v_blocks_feature_grid_background_style('background_style').default('background'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_feature_grid_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_feature_grid_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_feature_grid_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_feature_grid_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_feature_grid_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_content_grid_items_applications = pgTable(
  '_pages_v_blocks_content_grid_items_applications',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    application: varchar('application'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_content_grid_items_applications_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_content_grid_items_applications_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_content_grid_items_applications_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_content_grid_items.id],
      name: '_pages_v_blocks_content_grid_items_applications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_content_grid_items = pgTable(
  '_pages_v_blocks_content_grid_items',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    name: varchar('name'),
    title: varchar('title'),
    description: varchar('description'),
    link_type: enum__pages_v_blocks_content_grid_items_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    postCount: numeric('post_count'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_content_grid_items_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_content_grid_items_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_content_grid_items_locale_idx').on(columns._locale),
    _pages_v_blocks_content_grid_items_link_link_page_idx: index(
      '_pages_v_blocks_content_grid_items_link_link_page_idx',
    ).on(columns.link_page),
    _pages_v_blocks_content_grid_items_link_link_post_idx: index(
      '_pages_v_blocks_content_grid_items_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_content_grid.id],
      name: '_pages_v_blocks_content_grid_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_content_grid = pgTable(
  '_pages_v_blocks_content_grid',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_content_grid_variant('variant').default('categories'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    columns: enum__pages_v_blocks_content_grid_columns('columns').default('3'),
    backgroundStyle:
      enum__pages_v_blocks_content_grid_background_style('background_style').default('background'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_content_grid_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_content_grid_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_content_grid_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_content_grid_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_content_grid_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_stats_section_stats = pgTable(
  '_pages_v_blocks_stats_section_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    value: varchar('value'),
    label: varchar('label'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_stats_section_stats_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_stats_section_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_stats_section_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_stats_section.id],
      name: '_pages_v_blocks_stats_section_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_stats_section = pgTable(
  '_pages_v_blocks_stats_section',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_stats_section_variant('variant').default('standard'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    columns: enum__pages_v_blocks_stats_section_columns('columns').default('3'),
    backgroundStyle:
      enum__pages_v_blocks_stats_section_background_style('background_style').default('background'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_stats_section_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_stats_section_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_stats_section_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_stats_section_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_stats_section_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_process_steps_steps_details = pgTable(
  '_pages_v_blocks_process_steps_steps_details',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    detail: varchar('detail'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_process_steps_steps_details_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_process_steps_steps_details_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_process_steps_steps_details_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_process_steps_steps.id],
      name: '_pages_v_blocks_process_steps_steps_details_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_process_steps_steps = pgTable(
  '_pages_v_blocks_process_steps_steps',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    number: varchar('number'),
    title: varchar('title'),
    description: varchar('description'),
    duration: varchar('duration'),
    deliverable: varchar('deliverable'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_process_steps_steps_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_process_steps_steps_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_process_steps_steps_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_process_steps.id],
      name: '_pages_v_blocks_process_steps_steps_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_process_steps = pgTable(
  '_pages_v_blocks_process_steps',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_process_steps_variant('variant').default('numbered'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    backgroundStyle:
      enum__pages_v_blocks_process_steps_background_style('background_style').default('background'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_process_steps_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_process_steps_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_process_steps_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_process_steps_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_process_steps_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_content_cards_cards_tags = pgTable(
  '_pages_v_blocks_content_cards_cards_tags',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    tag: varchar('tag'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_content_cards_cards_tags_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_content_cards_cards_tags_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_content_cards_cards_tags_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_content_cards_cards.id],
      name: '_pages_v_blocks_content_cards_cards_tags_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_content_cards_cards = pgTable(
  '_pages_v_blocks_content_cards_cards',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    excerpt: varchar('excerpt'),
    category: varchar('category'),
    readTime: varchar('read_time'),
    publishedAt: varchar('published_at'),
    link_type: enum__pages_v_blocks_content_cards_cards_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    featured: boolean('featured'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_content_cards_cards_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_content_cards_cards_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_content_cards_cards_locale_idx').on(columns._locale),
    _pages_v_blocks_content_cards_cards_link_link_page_idx: index(
      '_pages_v_blocks_content_cards_cards_link_link_page_idx',
    ).on(columns.link_page),
    _pages_v_blocks_content_cards_cards_link_link_post_idx: index(
      '_pages_v_blocks_content_cards_cards_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_content_cards.id],
      name: '_pages_v_blocks_content_cards_cards_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_content_cards = pgTable(
  '_pages_v_blocks_content_cards',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_content_cards_variant('variant').default('general'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    description: varchar('description'),
    badge: varchar('badge'),
    columns: enum__pages_v_blocks_content_cards_columns('columns').default('3'),
    backgroundStyle:
      enum__pages_v_blocks_content_cards_background_style('background_style').default('background'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_content_cards_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_content_cards_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_content_cards_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_content_cards_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_content_cards_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_section_benefits = pgTable(
  '_pages_v_blocks_contact_section_benefits',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    benefit: varchar('benefit'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_section_benefits_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_section_benefits_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_contact_section_benefits_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_contact_section.id],
      name: '_pages_v_blocks_contact_section_benefits_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_contact_section = pgTable(
  '_pages_v_blocks_contact_section',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_contact_section_variant('variant').default('split'),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    formTitle: varchar('form_title'),
    formDescription: varchar('form_description'),
    backgroundStyle:
      enum__pages_v_blocks_contact_section_background_style('background_style').default('surface'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_contact_section_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_contact_section_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_contact_section_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_contact_section_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_contact_section_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_comparison_table_items = pgTable(
  '_pages_v_blocks_comparison_table_items',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    advantage: varchar('advantage'),
    description: varchar('description'),
    primary: enum__pages_v_blocks_comparison_table_items_primary('primary'),
    secondary: enum__pages_v_blocks_comparison_table_items_secondary('secondary'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_comparison_table_items_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_comparison_table_items_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_comparison_table_items_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_comparison_table.id],
      name: '_pages_v_blocks_comparison_table_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_comparison_table = pgTable(
  '_pages_v_blocks_comparison_table',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    primaryLabel: varchar('primary_label'),
    secondaryLabel: varchar('secondary_label'),
    backgroundStyle:
      enum__pages_v_blocks_comparison_table_background_style('background_style').default(
        'background',
      ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_comparison_table_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_comparison_table_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_comparison_table_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_comparison_table_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_comparison_table_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_simple_page_breadcrumbs = pgTable(
  '_pages_v_blocks_simple_page_breadcrumbs',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    label: varchar('label'),
    link_type: enum__pages_v_blocks_simple_page_breadcrumbs_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_simple_page_breadcrumbs_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_simple_page_breadcrumbs_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_simple_page_breadcrumbs_locale_idx').on(columns._locale),
    _pages_v_blocks_simple_page_breadcrumbs_link_link_page_idx: index(
      '_pages_v_blocks_simple_page_breadcrumbs_link_link_page_idx',
    ).on(columns.link_page),
    _pages_v_blocks_simple_page_breadcrumbs_link_link_post_idx: index(
      '_pages_v_blocks_simple_page_breadcrumbs_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_simple_page.id],
      name: '_pages_v_blocks_simple_page_breadcrumbs_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_simple_page_links = pgTable(
  '_pages_v_blocks_simple_page_links',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    link_type: enum__pages_v_blocks_simple_page_links_link_type('link_type').default('page'),
    link_page: integer('link_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    link_post: integer('link_post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    link_url: varchar('link_url'),
    link_anchor: varchar('link_anchor'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_simple_page_links_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_simple_page_links_parent_id_idx').on(columns._parentID),
    _localeIdx: index('_pages_v_blocks_simple_page_links_locale_idx').on(columns._locale),
    _pages_v_blocks_simple_page_links_link_link_page_idx: index(
      '_pages_v_blocks_simple_page_links_link_link_page_idx',
    ).on(columns.link_page),
    _pages_v_blocks_simple_page_links_link_link_post_idx: index(
      '_pages_v_blocks_simple_page_links_link_link_post_idx',
    ).on(columns.link_post),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_simple_page.id],
      name: '_pages_v_blocks_simple_page_links_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_simple_page = pgTable(
  '_pages_v_blocks_simple_page',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_simple_page_variant('variant').default('standard'),
    title: varchar('title'),
    subtitle: varchar('subtitle'),
    content: jsonb('content'),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_simple_page_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_simple_page_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_simple_page_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_simple_page_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_simple_page_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_brand_showcase_brands = pgTable(
  '_pages_v_blocks_brand_showcase_brands',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    name: varchar('name'),
    description: varchar('description'),
    logo: integer('logo_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_brand_showcase_brands_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_brand_showcase_brands_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_brand_showcase_brands_locale_idx').on(columns._locale),
    _pages_v_blocks_brand_showcase_brands_logo_idx: index(
      '_pages_v_blocks_brand_showcase_brands_logo_idx',
    ).on(columns.logo),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_brand_showcase.id],
      name: '_pages_v_blocks_brand_showcase_brands_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_brand_showcase = pgTable(
  '_pages_v_blocks_brand_showcase',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_brand_showcase_variant('variant').default('grid'),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    backgroundStyle:
      enum__pages_v_blocks_brand_showcase_background_style('background_style').default(
        'background',
      ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_brand_showcase_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_brand_showcase_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_brand_showcase_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_brand_showcase_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_brand_showcase_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_technical_content_process_steps = pgTable(
  '_pages_v_blocks_technical_content_process_steps',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    number: varchar('number'),
    title: varchar('title'),
    description: varchar('description'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_technical_content_process_steps_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_technical_content_process_steps_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_technical_content_process_steps_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_technical_content.id],
      name: '_pages_v_blocks_technical_content_process_steps_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_technical_content_specifications_items = pgTable(
  '_pages_v_blocks_technical_content_specifications_items',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    label: varchar('label'),
    value: varchar('value'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_technical_content_specifications_items_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_technical_content_specifications_items_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_technical_content_specifications_items_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_technical_content_specifications.id],
      name: '_pages_v_blocks_technical_content_specifications_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_technical_content_specifications = pgTable(
  '_pages_v_blocks_technical_content_specifications',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    category: varchar('category'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_technical_content_specifications_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_technical_content_specifications_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_technical_content_specifications_locale_idx').on(
      columns._locale,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_technical_content.id],
      name: '_pages_v_blocks_technical_content_specifications_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_technical_content = pgTable(
  '_pages_v_blocks_technical_content',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_technical_content_variant('variant').default('overview'),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    overviewContent: jsonb('overview_content'),
    backgroundStyle:
      enum__pages_v_blocks_technical_content_background_style('background_style').default(
        'background',
      ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_technical_content_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_technical_content_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_technical_content_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_technical_content_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_technical_content_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_resource_gallery_resources = pgTable(
  '_pages_v_blocks_resource_gallery_resources',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    fileType: varchar('file_type'),
    fileSize: varchar('file_size'),
    category: varchar('category'),
    downloadUrl: varchar('download_url'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_resource_gallery_resources_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_resource_gallery_resources_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_resource_gallery_resources_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_resource_gallery.id],
      name: '_pages_v_blocks_resource_gallery_resources_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_resource_gallery_gallery_images = pgTable(
  '_pages_v_blocks_resource_gallery_gallery_images',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    title: varchar('title'),
    description: varchar('description'),
    category: varchar('category'),
    image: integer('image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_resource_gallery_gallery_images_order_idx').on(
      columns._order,
    ),
    _parentIDIdx: index('_pages_v_blocks_resource_gallery_gallery_images_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('_pages_v_blocks_resource_gallery_gallery_images_locale_idx').on(
      columns._locale,
    ),
    _pages_v_blocks_resource_gallery_gallery_images_image_idx: index(
      '_pages_v_blocks_resource_gallery_gallery_images_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v_blocks_resource_gallery.id],
      name: '_pages_v_blocks_resource_gallery_gallery_images_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v_blocks_resource_gallery = pgTable(
  '_pages_v_blocks_resource_gallery',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: serial('id').primaryKey(),
    variant: enum__pages_v_blocks_resource_gallery_variant('variant').default('grid'),
    title: varchar('title'),
    description: varchar('description'),
    badge: varchar('badge'),
    backgroundStyle:
      enum__pages_v_blocks_resource_gallery_background_style('background_style').default(
        'background',
      ),
    _uuid: varchar('_uuid'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('_pages_v_blocks_resource_gallery_order_idx').on(columns._order),
    _parentIDIdx: index('_pages_v_blocks_resource_gallery_parent_id_idx').on(columns._parentID),
    _pathIdx: index('_pages_v_blocks_resource_gallery_path_idx').on(columns._path),
    _localeIdx: index('_pages_v_blocks_resource_gallery_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_blocks_resource_gallery_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _pages_v = pgTable(
  '_pages_v',
  {
    id: serial('id').primaryKey(),
    parent: integer('parent_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    version_slug: varchar('version_slug'),
    version_publishedAt: timestamp('version_published_at', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }),
    version_status: enum__pages_v_version_status('version_status').default('draft'),
    version_updatedAt: timestamp('version_updated_at', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }),
    version_createdAt: timestamp('version_created_at', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }),
    version__status: enum__pages_v_version_status('version__status').default('draft'),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    snapshot: boolean('snapshot'),
    publishedLocale: enum__pages_v_published_locale('published_locale'),
    latest: boolean('latest'),
  },
  (columns) => ({
    _pages_v_parent_idx: index('_pages_v_parent_idx').on(columns.parent),
    _pages_v_version_version_slug_idx: index('_pages_v_version_version_slug_idx').on(
      columns.version_slug,
    ),
    _pages_v_version_version_updated_at_idx: index('_pages_v_version_version_updated_at_idx').on(
      columns.version_updatedAt,
    ),
    _pages_v_version_version_created_at_idx: index('_pages_v_version_version_created_at_idx').on(
      columns.version_createdAt,
    ),
    _pages_v_version_version__status_idx: index('_pages_v_version_version__status_idx').on(
      columns.version__status,
    ),
    _pages_v_created_at_idx: index('_pages_v_created_at_idx').on(columns.createdAt),
    _pages_v_updated_at_idx: index('_pages_v_updated_at_idx').on(columns.updatedAt),
    _pages_v_snapshot_idx: index('_pages_v_snapshot_idx').on(columns.snapshot),
    _pages_v_published_locale_idx: index('_pages_v_published_locale_idx').on(
      columns.publishedLocale,
    ),
    _pages_v_latest_idx: index('_pages_v_latest_idx').on(columns.latest),
  }),
)

export const _pages_v_locales = pgTable(
  '_pages_v_locales',
  {
    version_title: varchar('version_title'),
    version_meta_title: varchar('version_meta_title'),
    version_meta_description: varchar('version_meta_description'),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: integer('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex('_pages_v_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_pages_v.id],
      name: '_pages_v_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const posts_tags = pgTable(
  'posts_tags',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    tag: varchar('tag'),
  },
  (columns) => ({
    _orderIdx: index('posts_tags_order_idx').on(columns._order),
    _parentIDIdx: index('posts_tags_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [posts.id],
      name: 'posts_tags_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const posts = pgTable(
  'posts',
  {
    id: serial('id').primaryKey(),
    slug: varchar('slug'),
    featuredImage: integer('featured_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    author: integer('author_id').references(() => users.id, {
      onDelete: 'set null',
    }),
    publishedAt: timestamp('published_at', { mode: 'string', withTimezone: true, precision: 3 }),
    status: enum_posts_status('status').default('draft'),
    readingTime: numeric('reading_time'),
    featured: boolean('featured').default(false),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    _status: enum_posts_status('_status').default('draft'),
  },
  (columns) => ({
    posts_slug_idx: uniqueIndex('posts_slug_idx').on(columns.slug),
    posts_featured_image_idx: index('posts_featured_image_idx').on(columns.featuredImage),
    posts_author_idx: index('posts_author_idx').on(columns.author),
    posts_updated_at_idx: index('posts_updated_at_idx').on(columns.updatedAt),
    posts_created_at_idx: index('posts_created_at_idx').on(columns.createdAt),
    posts__status_idx: index('posts__status_idx').on(columns._status),
  }),
)

export const posts_locales = pgTable(
  'posts_locales',
  {
    title: varchar('title'),
    excerpt: varchar('excerpt'),
    content: jsonb('content'),
    published: boolean('published').default(false),
    meta_title: varchar('meta_title'),
    meta_description: varchar('meta_description'),
    meta_keywords: varchar('meta_keywords'),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: integer('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex('posts_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [posts.id],
      name: 'posts_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const posts_rels = pgTable(
  'posts_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    categoriesID: integer('categories_id'),
  },
  (columns) => ({
    order: index('posts_rels_order_idx').on(columns.order),
    parentIdx: index('posts_rels_parent_idx').on(columns.parent),
    pathIdx: index('posts_rels_path_idx').on(columns.path),
    posts_rels_categories_id_idx: index('posts_rels_categories_id_idx').on(columns.categoriesID),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [posts.id],
      name: 'posts_rels_parent_fk',
    }).onDelete('cascade'),
    categoriesIdFk: foreignKey({
      columns: [columns['categoriesID']],
      foreignColumns: [categories.id],
      name: 'posts_rels_categories_fk',
    }).onDelete('cascade'),
  }),
)

export const _posts_v_version_tags = pgTable(
  '_posts_v_version_tags',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: serial('id').primaryKey(),
    tag: varchar('tag'),
    _uuid: varchar('_uuid'),
  },
  (columns) => ({
    _orderIdx: index('_posts_v_version_tags_order_idx').on(columns._order),
    _parentIDIdx: index('_posts_v_version_tags_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_posts_v.id],
      name: '_posts_v_version_tags_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _posts_v = pgTable(
  '_posts_v',
  {
    id: serial('id').primaryKey(),
    parent: integer('parent_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    version_slug: varchar('version_slug'),
    version_featuredImage: integer('version_featured_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    version_author: integer('version_author_id').references(() => users.id, {
      onDelete: 'set null',
    }),
    version_publishedAt: timestamp('version_published_at', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }),
    version_status: enum__posts_v_version_status('version_status').default('draft'),
    version_readingTime: numeric('version_reading_time'),
    version_featured: boolean('version_featured').default(false),
    version_updatedAt: timestamp('version_updated_at', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }),
    version_createdAt: timestamp('version_created_at', {
      mode: 'string',
      withTimezone: true,
      precision: 3,
    }),
    version__status: enum__posts_v_version_status('version__status').default('draft'),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    snapshot: boolean('snapshot'),
    publishedLocale: enum__posts_v_published_locale('published_locale'),
    latest: boolean('latest'),
    autosave: boolean('autosave'),
  },
  (columns) => ({
    _posts_v_parent_idx: index('_posts_v_parent_idx').on(columns.parent),
    _posts_v_version_version_slug_idx: index('_posts_v_version_version_slug_idx').on(
      columns.version_slug,
    ),
    _posts_v_version_version_featured_image_idx: index(
      '_posts_v_version_version_featured_image_idx',
    ).on(columns.version_featuredImage),
    _posts_v_version_version_author_idx: index('_posts_v_version_version_author_idx').on(
      columns.version_author,
    ),
    _posts_v_version_version_updated_at_idx: index('_posts_v_version_version_updated_at_idx').on(
      columns.version_updatedAt,
    ),
    _posts_v_version_version_created_at_idx: index('_posts_v_version_version_created_at_idx').on(
      columns.version_createdAt,
    ),
    _posts_v_version_version__status_idx: index('_posts_v_version_version__status_idx').on(
      columns.version__status,
    ),
    _posts_v_created_at_idx: index('_posts_v_created_at_idx').on(columns.createdAt),
    _posts_v_updated_at_idx: index('_posts_v_updated_at_idx').on(columns.updatedAt),
    _posts_v_snapshot_idx: index('_posts_v_snapshot_idx').on(columns.snapshot),
    _posts_v_published_locale_idx: index('_posts_v_published_locale_idx').on(
      columns.publishedLocale,
    ),
    _posts_v_latest_idx: index('_posts_v_latest_idx').on(columns.latest),
    _posts_v_autosave_idx: index('_posts_v_autosave_idx').on(columns.autosave),
  }),
)

export const _posts_v_locales = pgTable(
  '_posts_v_locales',
  {
    version_title: varchar('version_title'),
    version_excerpt: varchar('version_excerpt'),
    version_content: jsonb('version_content'),
    version_published: boolean('version_published').default(false),
    version_meta_title: varchar('version_meta_title'),
    version_meta_description: varchar('version_meta_description'),
    version_meta_keywords: varchar('version_meta_keywords'),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: integer('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex('_posts_v_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [_posts_v.id],
      name: '_posts_v_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const _posts_v_rels = pgTable(
  '_posts_v_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    categoriesID: integer('categories_id'),
  },
  (columns) => ({
    order: index('_posts_v_rels_order_idx').on(columns.order),
    parentIdx: index('_posts_v_rels_parent_idx').on(columns.parent),
    pathIdx: index('_posts_v_rels_path_idx').on(columns.path),
    _posts_v_rels_categories_id_idx: index('_posts_v_rels_categories_id_idx').on(
      columns.categoriesID,
    ),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [_posts_v.id],
      name: '_posts_v_rels_parent_fk',
    }).onDelete('cascade'),
    categoriesIdFk: foreignKey({
      columns: [columns['categoriesID']],
      foreignColumns: [categories.id],
      name: '_posts_v_rels_categories_fk',
    }).onDelete('cascade'),
  }),
)

export const categories = pgTable(
  'categories',
  {
    id: serial('id').primaryKey(),
    slug: varchar('slug').notNull(),
    parent: integer('parent_id').references((): AnyPgColumn => categories.id, {
      onDelete: 'set null',
    }),
    color: varchar('color'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    categories_slug_idx: uniqueIndex('categories_slug_idx').on(columns.slug),
    categories_parent_idx: index('categories_parent_idx').on(columns.parent),
    categories_updated_at_idx: index('categories_updated_at_idx').on(columns.updatedAt),
    categories_created_at_idx: index('categories_created_at_idx').on(columns.createdAt),
  }),
)

export const categories_locales = pgTable(
  'categories_locales',
  {
    name: varchar('name').notNull(),
    description: varchar('description'),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: integer('_parent_id').notNull(),
  },
  (columns) => ({
    categories_name_idx: uniqueIndex('categories_name_idx').on(columns.name, columns._locale),
    _localeParent: uniqueIndex('categories_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [categories.id],
      name: 'categories_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const contact_submissions_emails_sent = pgTable(
  'contact_submissions_emails_sent',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    type: enum_contact_submissions_emails_sent_type('type'),
    sentAt: timestamp('sent_at', { mode: 'string', withTimezone: true, precision: 3 }),
    recipient: varchar('recipient'),
    subject: varchar('subject'),
    success: boolean('success').default(true),
  },
  (columns) => ({
    _orderIdx: index('contact_submissions_emails_sent_order_idx').on(columns._order),
    _parentIDIdx: index('contact_submissions_emails_sent_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [contact_submissions.id],
      name: 'contact_submissions_emails_sent_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const contact_submissions = pgTable(
  'contact_submissions',
  {
    id: serial('id').primaryKey(),
    name: varchar('name').notNull(),
    email: varchar('email').notNull(),
    company: varchar('company'),
    phone: varchar('phone'),
    subject: varchar('subject').notNull(),
    message: varchar('message').notNull(),
    projectType: varchar('project_type'),
    budget: varchar('budget'),
    urgency: varchar('urgency'),
    application: varchar('application'),
    status: enum_contact_submissions_status('status').notNull().default('new'),
    priority: enum_contact_submissions_priority('priority').default('medium'),
    assignedTo: integer('assigned_to_id').references(() => users.id, {
      onDelete: 'set null',
    }),
    internalNotes: jsonb('internal_notes'),
    followUpDate: timestamp('follow_up_date', { mode: 'string', withTimezone: true, precision: 3 }),
    source: enum_contact_submissions_source('source').default('contact-form'),
    ipAddress: varchar('ip_address'),
    userAgent: varchar('user_agent'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    contact_submissions_assigned_to_idx: index('contact_submissions_assigned_to_idx').on(
      columns.assignedTo,
    ),
    contact_submissions_updated_at_idx: index('contact_submissions_updated_at_idx').on(
      columns.updatedAt,
    ),
    contact_submissions_created_at_idx: index('contact_submissions_created_at_idx').on(
      columns.createdAt,
    ),
  }),
)

export const contact_submissions_texts = pgTable(
  'contact_submissions_texts',
  {
    id: serial('id').primaryKey(),
    order: integer('order').notNull(),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    text: varchar('text'),
  },
  (columns) => ({
    orderParentIdx: index('contact_submissions_texts_order_parent_idx').on(
      columns.order,
      columns.parent,
    ),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [contact_submissions.id],
      name: 'contact_submissions_texts_parent_fk',
    }).onDelete('cascade'),
  }),
)

export const payload_locked_documents = pgTable(
  'payload_locked_documents',
  {
    id: serial('id').primaryKey(),
    globalSlug: varchar('global_slug'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    payload_locked_documents_global_slug_idx: index('payload_locked_documents_global_slug_idx').on(
      columns.globalSlug,
    ),
    payload_locked_documents_updated_at_idx: index('payload_locked_documents_updated_at_idx').on(
      columns.updatedAt,
    ),
    payload_locked_documents_created_at_idx: index('payload_locked_documents_created_at_idx').on(
      columns.createdAt,
    ),
  }),
)

export const payload_locked_documents_rels = pgTable(
  'payload_locked_documents_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    usersID: integer('users_id'),
    mediaID: integer('media_id'),
    pagesID: integer('pages_id'),
    postsID: integer('posts_id'),
    categoriesID: integer('categories_id'),
    'contact-submissionsID': integer('contact_submissions_id'),
  },
  (columns) => ({
    order: index('payload_locked_documents_rels_order_idx').on(columns.order),
    parentIdx: index('payload_locked_documents_rels_parent_idx').on(columns.parent),
    pathIdx: index('payload_locked_documents_rels_path_idx').on(columns.path),
    payload_locked_documents_rels_users_id_idx: index(
      'payload_locked_documents_rels_users_id_idx',
    ).on(columns.usersID),
    payload_locked_documents_rels_media_id_idx: index(
      'payload_locked_documents_rels_media_id_idx',
    ).on(columns.mediaID),
    payload_locked_documents_rels_pages_id_idx: index(
      'payload_locked_documents_rels_pages_id_idx',
    ).on(columns.pagesID),
    payload_locked_documents_rels_posts_id_idx: index(
      'payload_locked_documents_rels_posts_id_idx',
    ).on(columns.postsID),
    payload_locked_documents_rels_categories_id_idx: index(
      'payload_locked_documents_rels_categories_id_idx',
    ).on(columns.categoriesID),
    payload_locked_documents_rels_contact_submissions_id_idx: index(
      'payload_locked_documents_rels_contact_submissions_id_idx',
    ).on(columns['contact-submissionsID']),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [payload_locked_documents.id],
      name: 'payload_locked_documents_rels_parent_fk',
    }).onDelete('cascade'),
    usersIdFk: foreignKey({
      columns: [columns['usersID']],
      foreignColumns: [users.id],
      name: 'payload_locked_documents_rels_users_fk',
    }).onDelete('cascade'),
    mediaIdFk: foreignKey({
      columns: [columns['mediaID']],
      foreignColumns: [media.id],
      name: 'payload_locked_documents_rels_media_fk',
    }).onDelete('cascade'),
    pagesIdFk: foreignKey({
      columns: [columns['pagesID']],
      foreignColumns: [pages.id],
      name: 'payload_locked_documents_rels_pages_fk',
    }).onDelete('cascade'),
    postsIdFk: foreignKey({
      columns: [columns['postsID']],
      foreignColumns: [posts.id],
      name: 'payload_locked_documents_rels_posts_fk',
    }).onDelete('cascade'),
    categoriesIdFk: foreignKey({
      columns: [columns['categoriesID']],
      foreignColumns: [categories.id],
      name: 'payload_locked_documents_rels_categories_fk',
    }).onDelete('cascade'),
    'contact-submissionsIdFk': foreignKey({
      columns: [columns['contact-submissionsID']],
      foreignColumns: [contact_submissions.id],
      name: 'payload_locked_documents_rels_contact_submissions_fk',
    }).onDelete('cascade'),
  }),
)

export const payload_preferences = pgTable(
  'payload_preferences',
  {
    id: serial('id').primaryKey(),
    key: varchar('key'),
    value: jsonb('value'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    payload_preferences_key_idx: index('payload_preferences_key_idx').on(columns.key),
    payload_preferences_updated_at_idx: index('payload_preferences_updated_at_idx').on(
      columns.updatedAt,
    ),
    payload_preferences_created_at_idx: index('payload_preferences_created_at_idx').on(
      columns.createdAt,
    ),
  }),
)

export const payload_preferences_rels = pgTable(
  'payload_preferences_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    usersID: integer('users_id'),
  },
  (columns) => ({
    order: index('payload_preferences_rels_order_idx').on(columns.order),
    parentIdx: index('payload_preferences_rels_parent_idx').on(columns.parent),
    pathIdx: index('payload_preferences_rels_path_idx').on(columns.path),
    payload_preferences_rels_users_id_idx: index('payload_preferences_rels_users_id_idx').on(
      columns.usersID,
    ),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [payload_preferences.id],
      name: 'payload_preferences_rels_parent_fk',
    }).onDelete('cascade'),
    usersIdFk: foreignKey({
      columns: [columns['usersID']],
      foreignColumns: [users.id],
      name: 'payload_preferences_rels_users_fk',
    }).onDelete('cascade'),
  }),
)

export const payload_migrations = pgTable(
  'payload_migrations',
  {
    id: serial('id').primaryKey(),
    name: varchar('name'),
    batch: numeric('batch'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 })
      .defaultNow()
      .notNull(),
  },
  (columns) => ({
    payload_migrations_updated_at_idx: index('payload_migrations_updated_at_idx').on(
      columns.updatedAt,
    ),
    payload_migrations_created_at_idx: index('payload_migrations_created_at_idx').on(
      columns.createdAt,
    ),
  }),
)

export const header_navigation_dropdown_items = pgTable(
  'header_navigation_dropdown_items',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    type: enum_header_navigation_dropdown_items_type('type').default('page'),
    page: integer('page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    post: integer('post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    category: integer('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
    url: varchar('url'),
    newTab: boolean('new_tab').default(false),
    featured: boolean('featured').default(false),
  },
  (columns) => ({
    _orderIdx: index('header_navigation_dropdown_items_order_idx').on(columns._order),
    _parentIDIdx: index('header_navigation_dropdown_items_parent_id_idx').on(columns._parentID),
    header_navigation_dropdown_items_page_idx: index(
      'header_navigation_dropdown_items_page_idx',
    ).on(columns.page),
    header_navigation_dropdown_items_post_idx: index(
      'header_navigation_dropdown_items_post_idx',
    ).on(columns.post),
    header_navigation_dropdown_items_category_idx: index(
      'header_navigation_dropdown_items_category_idx',
    ).on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [header_navigation.id],
      name: 'header_navigation_dropdown_items_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const header_navigation_dropdown_items_locales = pgTable(
  'header_navigation_dropdown_items_locales',
  {
    label: varchar('label'),
    description: varchar('description'),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: varchar('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex(
      'header_navigation_dropdown_items_locales_locale_parent_id_unique',
    ).on(columns._locale, columns._parentID),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [header_navigation_dropdown_items.id],
      name: 'header_navigation_dropdown_items_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const header_navigation = pgTable(
  'header_navigation',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    navType: enum_header_navigation_nav_type('nav_type').notNull().default('link'),
    type: enum_header_navigation_type('type').default('page'),
    page: integer('page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    post: integer('post_id').references(() => posts.id, {
      onDelete: 'set null',
    }),
    category: integer('category_id').references(() => categories.id, {
      onDelete: 'set null',
    }),
    url: varchar('url'),
    newTab: boolean('new_tab').default(false),
    dropdownStyle: enum_header_navigation_dropdown_style('dropdown_style').default('simple'),
  },
  (columns) => ({
    _orderIdx: index('header_navigation_order_idx').on(columns._order),
    _parentIDIdx: index('header_navigation_parent_id_idx').on(columns._parentID),
    header_navigation_page_idx: index('header_navigation_page_idx').on(columns.page),
    header_navigation_post_idx: index('header_navigation_post_idx').on(columns.post),
    header_navigation_category_idx: index('header_navigation_category_idx').on(columns.category),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [header.id],
      name: 'header_navigation_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const header_navigation_locales = pgTable(
  'header_navigation_locales',
  {
    label: varchar('label').notNull(),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: varchar('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex('header_navigation_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [header_navigation.id],
      name: 'header_navigation_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const header = pgTable(
  'header',
  {
    id: serial('id').primaryKey(),
    logo: integer('logo_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    mobileNavigation_enabled: boolean('mobile_navigation_enabled').default(true),
    mobileNavigation_menuButtonLabel: varchar('mobile_navigation_menu_button_label').default(
      'Menu',
    ),
    mobileNavigation_closeButtonLabel: varchar('mobile_navigation_close_button_label').default(
      'Close menu',
    ),
    mobileNavigation_showLanguageSelector: boolean(
      'mobile_navigation_show_language_selector',
    ).default(true),
    mobileNavigation_showContactButton: boolean('mobile_navigation_show_contact_button').default(
      true,
    ),
    recentPosts_enabled: boolean('recent_posts_enabled').default(false),
    recentPosts_label: varchar('recent_posts_label').default('Recent Posts'),
    recentPosts_numberOfPosts: numeric('recent_posts_number_of_posts').default('5'),
    recentPosts_showInMobile: boolean('recent_posts_show_in_mobile').default(true),
    categoriesNav_enabled: boolean('categories_nav_enabled').default(false),
    categoriesNav_label: varchar('categories_nav_label').default('Categories'),
    categoriesNav_displayType: enum_header_categories_nav_display_type(
      'categories_nav_display_type',
    ).default('all'),
    categoriesNav_maxCategories: numeric('categories_nav_max_categories').default('6'),
    categoriesNav_showInMobile: boolean('categories_nav_show_in_mobile').default(true),
    socialLinks_facebook: varchar('social_links_facebook'),
    socialLinks_twitter: varchar('social_links_twitter'),
    socialLinks_instagram: varchar('social_links_instagram'),
    socialLinks_linkedin: varchar('social_links_linkedin'),
    socialLinks_youtube: varchar('social_links_youtube'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
  },
  (columns) => ({
    header_logo_idx: index('header_logo_idx').on(columns.logo),
  }),
)

export const header_locales = pgTable(
  'header_locales',
  {
    siteName: varchar('site_name').notNull().default('My Website'),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: integer('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex('header_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [header.id],
      name: 'header_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const header_rels = pgTable(
  'header_rels',
  {
    id: serial('id').primaryKey(),
    order: integer('order'),
    parent: integer('parent_id').notNull(),
    path: varchar('path').notNull(),
    categoriesID: integer('categories_id'),
  },
  (columns) => ({
    order: index('header_rels_order_idx').on(columns.order),
    parentIdx: index('header_rels_parent_idx').on(columns.parent),
    pathIdx: index('header_rels_path_idx').on(columns.path),
    header_rels_categories_id_idx: index('header_rels_categories_id_idx').on(columns.categoriesID),
    parentFk: foreignKey({
      columns: [columns['parent']],
      foreignColumns: [header.id],
      name: 'header_rels_parent_fk',
    }).onDelete('cascade'),
    categoriesIdFk: foreignKey({
      columns: [columns['categoriesID']],
      foreignColumns: [categories.id],
      name: 'header_rels_categories_fk',
    }).onDelete('cascade'),
  }),
)

export const footer_company_info_address = pgTable(
  'footer_company_info_address',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    line: varchar('line').notNull(),
  },
  (columns) => ({
    _orderIdx: index('footer_company_info_address_order_idx').on(columns._order),
    _parentIDIdx: index('footer_company_info_address_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [footer.id],
      name: 'footer_company_info_address_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const footer_footer_columns_links = pgTable(
  'footer_footer_columns_links',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    type: enum_footer_footer_columns_links_type('type').notNull().default('anchor'),
    page: integer('page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    url: varchar('url'),
    anchor: varchar('anchor'),
    newTab: boolean('new_tab').default(false),
  },
  (columns) => ({
    _orderIdx: index('footer_footer_columns_links_order_idx').on(columns._order),
    _parentIDIdx: index('footer_footer_columns_links_parent_id_idx').on(columns._parentID),
    footer_footer_columns_links_page_idx: index('footer_footer_columns_links_page_idx').on(
      columns.page,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [footer_footer_columns.id],
      name: 'footer_footer_columns_links_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const footer_footer_columns_links_locales = pgTable(
  'footer_footer_columns_links_locales',
  {
    label: varchar('label').notNull(),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: varchar('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex('footer_footer_columns_links_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [footer_footer_columns_links.id],
      name: 'footer_footer_columns_links_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const footer_footer_columns = pgTable(
  'footer_footer_columns',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
  },
  (columns) => ({
    _orderIdx: index('footer_footer_columns_order_idx').on(columns._order),
    _parentIDIdx: index('footer_footer_columns_parent_id_idx').on(columns._parentID),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [footer.id],
      name: 'footer_footer_columns_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const footer_footer_columns_locales = pgTable(
  'footer_footer_columns_locales',
  {
    title: varchar('title').notNull(),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: varchar('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex('footer_footer_columns_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [footer_footer_columns.id],
      name: 'footer_footer_columns_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const footer_bottom_links = pgTable(
  'footer_bottom_links',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label').notNull(),
    type: enum_footer_bottom_links_type('type').notNull().default('url'),
    page: integer('page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    url: varchar('url'),
    anchor: varchar('anchor'),
  },
  (columns) => ({
    _orderIdx: index('footer_bottom_links_order_idx').on(columns._order),
    _parentIDIdx: index('footer_bottom_links_parent_id_idx').on(columns._parentID),
    footer_bottom_links_page_idx: index('footer_bottom_links_page_idx').on(columns.page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [footer.id],
      name: 'footer_bottom_links_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const footer = pgTable(
  'footer',
  {
    id: serial('id').primaryKey(),
    logo: integer('logo_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    companyInfo_phone: varchar('company_info_phone').default('+386 (3) 426 36 46'),
    companyInfo_email: varchar('company_info_email').default('info@sinteh.pro'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
  },
  (columns) => ({
    footer_logo_idx: index('footer_logo_idx').on(columns.logo),
  }),
)

export const footer_locales = pgTable(
  'footer_locales',
  {
    copyright: varchar('copyright').default('© 2025 SINTEH PRO. Vse pravice pridržane.'),
    id: serial('id').primaryKey(),
    _locale: enum__locales('_locale').notNull(),
    _parentID: integer('_parent_id').notNull(),
  },
  (columns) => ({
    _localeParent: uniqueIndex('footer_locales_locale_parent_id_unique').on(
      columns._locale,
      columns._parentID,
    ),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [footer.id],
      name: 'footer_locales_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const seo = pgTable(
  'seo',
  {
    id: serial('id').primaryKey(),
    siteName: varchar('site_name').notNull().default('My Website'),
    siteDescription: varchar('site_description')
      .notNull()
      .default('A modern website built with Payload CMS and Next.js'),
    siteUrl: varchar('site_url').notNull().default('https://mywebsite.com'),
    defaultImage: integer('default_image_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    favicon: integer('favicon_id').references(() => media.id, {
      onDelete: 'set null',
    }),
    keywords: varchar('keywords'),
    author: varchar('author'),
    twitterHandle: varchar('twitter_handle'),
    facebookAppId: varchar('facebook_app_id'),
    googleAnalytics_enabled: boolean('google_analytics_enabled').default(false),
    googleAnalytics_measurementId: varchar('google_analytics_measurement_id'),
    googleTagManager_enabled: boolean('google_tag_manager_enabled').default(false),
    googleTagManager_containerId: varchar('google_tag_manager_container_id'),
    robots_index: boolean('robots_index').default(true),
    robots_follow: boolean('robots_follow').default(true),
    robots_customRobots: varchar('robots_custom_robots'),
    verification_googleSiteVerification: varchar('verification_google_site_verification'),
    verification_bingSiteVerification: varchar('verification_bing_site_verification'),
    updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
    createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
  },
  (columns) => ({
    seo_default_image_idx: index('seo_default_image_idx').on(columns.defaultImage),
    seo_favicon_idx: index('seo_favicon_idx').on(columns.favicon),
  }),
)

export const homepage_blocks_hero_cta_buttons = pgTable(
  'homepage_blocks_hero_cta_buttons',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    label: varchar('label').notNull(),
    type: enum_homepage_blocks_hero_cta_buttons_type('type').notNull().default('page'),
    page: integer('page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    url: varchar('url'),
    anchor: varchar('anchor'),
    variant: enum_homepage_blocks_hero_cta_buttons_variant('variant').default('default'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_hero_cta_buttons_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_hero_cta_buttons_parent_id_idx').on(columns._parentID),
    _localeIdx: index('homepage_blocks_hero_cta_buttons_locale_idx').on(columns._locale),
    homepage_blocks_hero_cta_buttons_page_idx: index(
      'homepage_blocks_hero_cta_buttons_page_idx',
    ).on(columns.page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_hero.id],
      name: 'homepage_blocks_hero_cta_buttons_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_hero = pgTable(
  'homepage_blocks_hero',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title').notNull().default('Sinteh d.o.o.'),
    subtitle: varchar('subtitle').default(
      'Od zasnove do zagona in servisa – modulno ter prilagojeno vašim procesom.',
    ),
    backgroundImage: integer('background_image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    bottomText: varchar('bottom_text').default('Certifcirane komponente, sledljivost in varnost'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_hero_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_hero_parent_id_idx').on(columns._parentID),
    _pathIdx: index('homepage_blocks_hero_path_idx').on(columns._path),
    _localeIdx: index('homepage_blocks_hero_locale_idx').on(columns._locale),
    homepage_blocks_hero_background_image_idx: index(
      'homepage_blocks_hero_background_image_idx',
    ).on(columns.backgroundImage),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage.id],
      name: 'homepage_blocks_hero_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_logo_belt_logos = pgTable(
  'homepage_blocks_logo_belt_logos',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    logo: integer('logo_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    alt: varchar('alt').notNull(),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_logo_belt_logos_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_logo_belt_logos_parent_id_idx').on(columns._parentID),
    _localeIdx: index('homepage_blocks_logo_belt_logos_locale_idx').on(columns._locale),
    homepage_blocks_logo_belt_logos_logo_idx: index('homepage_blocks_logo_belt_logos_logo_idx').on(
      columns.logo,
    ),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_logo_belt.id],
      name: 'homepage_blocks_logo_belt_logos_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_logo_belt = pgTable(
  'homepage_blocks_logo_belt',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_logo_belt_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_logo_belt_parent_id_idx').on(columns._parentID),
    _pathIdx: index('homepage_blocks_logo_belt_path_idx').on(columns._path),
    _localeIdx: index('homepage_blocks_logo_belt_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage.id],
      name: 'homepage_blocks_logo_belt_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_services_services_features = pgTable(
  'homepage_blocks_services_services_features',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    feature: varchar('feature').notNull(),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_services_services_features_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_services_services_features_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('homepage_blocks_services_services_features_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_services_services.id],
      name: 'homepage_blocks_services_services_features_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_services_services = pgTable(
  'homepage_blocks_services_services',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title').notNull(),
    description: varchar('description').default(
      'Sistematičen pristop, preverjene komponente, popolna dokumentacija.',
    ),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    button_text: varchar('button_text').notNull().default('Več o storitvi'),
    button_type: enum_homepage_blocks_services_services_button_type('button_type')
      .notNull()
      .default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_services_services_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_services_services_parent_id_idx').on(columns._parentID),
    _localeIdx: index('homepage_blocks_services_services_locale_idx').on(columns._locale),
    homepage_blocks_services_services_image_idx: index(
      'homepage_blocks_services_services_image_idx',
    ).on(columns.image),
    homepage_blocks_services_services_button_button_page_idx: index(
      'homepage_blocks_services_services_button_button_page_idx',
    ).on(columns.button_page),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_services.id],
      name: 'homepage_blocks_services_services_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_services = pgTable(
  'homepage_blocks_services',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('STORITVE'),
    title: varchar('title').notNull().default('Specializirani za krmiljenje in avtomatizacijo'),
    subtitle: varchar('subtitle').default('Od načrtovanja do zagona in servisa'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_services_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_services_parent_id_idx').on(columns._parentID),
    _pathIdx: index('homepage_blocks_services_path_idx').on(columns._path),
    _localeIdx: index('homepage_blocks_services_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage.id],
      name: 'homepage_blocks_services_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_about_badges = pgTable(
  'homepage_blocks_about_badges',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    text: varchar('text').notNull(),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_about_badges_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_about_badges_parent_id_idx').on(columns._parentID),
    _localeIdx: index('homepage_blocks_about_badges_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_about.id],
      name: 'homepage_blocks_about_badges_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_about_stats = pgTable(
  'homepage_blocks_about_stats',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    number: varchar('number').notNull(),
    label: varchar('label').notNull(),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_about_stats_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_about_stats_parent_id_idx').on(columns._parentID),
    _localeIdx: index('homepage_blocks_about_stats_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_about.id],
      name: 'homepage_blocks_about_stats_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_about_process = pgTable(
  'homepage_blocks_about_process',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    step: varchar('step').notNull(),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_about_process_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_about_process_parent_id_idx').on(columns._parentID),
    _localeIdx: index('homepage_blocks_about_process_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_about.id],
      name: 'homepage_blocks_about_process_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_about = pgTable(
  'homepage_blocks_about',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title').notNull().default('O podjetju'),
    description: varchar('description').default(
      'Specializirani smo za industrijske avtomatizacijske sisteme z več kot 10-letnimi izkušnjami.',
    ),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    calloutText: varchar('callout_text').default(
      'Naše ekipe načrtujejo, programirajo in zaganjajo sisteme krmiljenja, pogone ter HMI/SCADA v tesnem sodelovanju z vašimi tehnologijami.',
    ),
    button_text: varchar('button_text').notNull().default('Več o nas'),
    button_type: enum_homepage_blocks_about_button_type('button_type').notNull().default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_about_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_about_parent_id_idx').on(columns._parentID),
    _pathIdx: index('homepage_blocks_about_path_idx').on(columns._path),
    _localeIdx: index('homepage_blocks_about_locale_idx').on(columns._locale),
    homepage_blocks_about_image_idx: index('homepage_blocks_about_image_idx').on(columns.image),
    homepage_blocks_about_button_button_page_idx: index(
      'homepage_blocks_about_button_button_page_idx',
    ).on(columns.button_page),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage.id],
      name: 'homepage_blocks_about_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_why_trust_reasons = pgTable(
  'homepage_blocks_why_trust_reasons',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    reason: varchar('reason').notNull(),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_why_trust_reasons_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_why_trust_reasons_parent_id_idx').on(columns._parentID),
    _localeIdx: index('homepage_blocks_why_trust_reasons_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_why_trust.id],
      name: 'homepage_blocks_why_trust_reasons_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_why_trust_pillars = pgTable(
  'homepage_blocks_why_trust_pillars',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title').notNull(),
    description: varchar('description').notNull(),
    icon: enum_homepage_blocks_why_trust_pillars_icon('icon').notNull(),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_why_trust_pillars_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_why_trust_pillars_parent_id_idx').on(columns._parentID),
    _localeIdx: index('homepage_blocks_why_trust_pillars_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_why_trust.id],
      name: 'homepage_blocks_why_trust_pillars_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_why_trust = pgTable(
  'homepage_blocks_why_trust',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title').notNull().default('Zakaj nam zaupajo?'),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    button_text: varchar('button_text').notNull().default('Zaupajte nam'),
    button_type: enum_homepage_blocks_why_trust_button_type('button_type')
      .notNull()
      .default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_why_trust_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_why_trust_parent_id_idx').on(columns._parentID),
    _pathIdx: index('homepage_blocks_why_trust_path_idx').on(columns._path),
    _localeIdx: index('homepage_blocks_why_trust_locale_idx').on(columns._locale),
    homepage_blocks_why_trust_image_idx: index('homepage_blocks_why_trust_image_idx').on(
      columns.image,
    ),
    homepage_blocks_why_trust_button_button_page_idx: index(
      'homepage_blocks_why_trust_button_button_page_idx',
    ).on(columns.button_page),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage.id],
      name: 'homepage_blocks_why_trust_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_projects_projects_stack = pgTable(
  'homepage_blocks_projects_projects_stack',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    technology: varchar('technology').notNull(),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_projects_projects_stack_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_projects_projects_stack_parent_id_idx').on(
      columns._parentID,
    ),
    _localeIdx: index('homepage_blocks_projects_projects_stack_locale_idx').on(columns._locale),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_projects_projects.id],
      name: 'homepage_blocks_projects_projects_stack_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_projects_projects = pgTable(
  'homepage_blocks_projects_projects',
  {
    _order: integer('_order').notNull(),
    _parentID: varchar('_parent_id').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    title: varchar('title').notNull(),
    category: varchar('category').notNull(),
    image: integer('image_id')
      .notNull()
      .references(() => media.id, {
        onDelete: 'set null',
      }),
    description: varchar('description').notNull(),
    link: varchar('link'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_projects_projects_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_projects_projects_parent_id_idx').on(columns._parentID),
    _localeIdx: index('homepage_blocks_projects_projects_locale_idx').on(columns._locale),
    homepage_blocks_projects_projects_image_idx: index(
      'homepage_blocks_projects_projects_image_idx',
    ).on(columns.image),
    _parentIDFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage_blocks_projects.id],
      name: 'homepage_blocks_projects_projects_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_projects = pgTable(
  'homepage_blocks_projects',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('PROJEKTI'),
    title: varchar('title').notNull().default('Naši projekti'),
    subtitle: varchar('subtitle').default(
      'Izsek projektov, ki so izboljšali produktivnost, varnost in sledljivost.',
    ),
    button_text: varchar('button_text').notNull().default('Vsi projekti'),
    button_type: enum_homepage_blocks_projects_button_type('button_type').notNull().default('page'),
    button_page: integer('button_page_id').references(() => pages.id, {
      onDelete: 'set null',
    }),
    button_url: varchar('button_url'),
    button_anchor: varchar('button_anchor'),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_projects_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_projects_parent_id_idx').on(columns._parentID),
    _pathIdx: index('homepage_blocks_projects_path_idx').on(columns._path),
    _localeIdx: index('homepage_blocks_projects_locale_idx').on(columns._locale),
    homepage_blocks_projects_button_button_page_idx: index(
      'homepage_blocks_projects_button_button_page_idx',
    ).on(columns.button_page),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage.id],
      name: 'homepage_blocks_projects_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage_blocks_contact = pgTable(
  'homepage_blocks_contact',
  {
    _order: integer('_order').notNull(),
    _parentID: integer('_parent_id').notNull(),
    _path: text('_path').notNull(),
    _locale: enum__locales('_locale').notNull(),
    id: varchar('id').primaryKey(),
    badge: varchar('badge').default('KONTAKT'),
    title: varchar('title').notNull().default('Stopite v stik z nami'),
    subtitle: varchar('subtitle').default('Pripravili vam bomo ponudbo v 24 urah'),
    phone: varchar('phone').default('+386 1 234 5678'),
    email: varchar('email').default('info@sinteh.si'),
    privacyText: varchar('privacy_text').default(
      'Pošiljanjem soglašate z našo politiko zasebnosti. Vaših podatkov ne posredujemo tretjim.',
    ),
    blockName: varchar('block_name'),
  },
  (columns) => ({
    _orderIdx: index('homepage_blocks_contact_order_idx').on(columns._order),
    _parentIDIdx: index('homepage_blocks_contact_parent_id_idx').on(columns._parentID),
    _pathIdx: index('homepage_blocks_contact_path_idx').on(columns._path),
    _localeIdx: index('homepage_blocks_contact_locale_idx').on(columns._locale),
    _parentIdFk: foreignKey({
      columns: [columns['_parentID']],
      foreignColumns: [homepage.id],
      name: 'homepage_blocks_contact_parent_id_fk',
    }).onDelete('cascade'),
  }),
)

export const homepage = pgTable('homepage', {
  id: serial('id').primaryKey(),
  updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
  createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
})

export const email_admin = pgTable('email_admin', {
  id: serial('id').primaryKey(),
  emailSettings_fromEmail: varchar('email_settings_from_email')
    .notNull()
    .default('noreply@sinteh.pro'),
  emailSettings_fromName: varchar('email_settings_from_name').notNull().default('SINTEH PRO'),
  emailSettings_contactEmail: varchar('email_settings_contact_email')
    .notNull()
    .default('info@sinteh.pro'),
  emailSettings_replyToEmail: varchar('email_settings_reply_to_email').default('info@sinteh.pro'),
  emailSettings_autoReplyEnabled: boolean('email_settings_auto_reply_enabled').default(true),
  emailSettings_notificationEnabled: boolean('email_settings_notification_enabled').default(true),
  templates_customerConfirmation_subject: varchar('templates_customer_confirmation_subject')
    .notNull()
    .default('Potrditev prejema povpraševanja - SINTEH PRO'),
  templates_customerConfirmation_heading: varchar('templates_customer_confirmation_heading')
    .notNull()
    .default('Hvala za vaše povpraševanje!'),
  templates_customerConfirmation_message: jsonb('templates_customer_confirmation_message'),
  templates_customerConfirmation_responseTime: varchar(
    'templates_customer_confirmation_response_time',
  ).default('V 24 urah (delovni dnevi)'),
  templates_adminNotification_subject: varchar('templates_admin_notification_subject')
    .notNull()
    .default('Novo povpraševanje: {{subject}}'),
  templates_adminNotification_heading: varchar('templates_admin_notification_heading')
    .notNull()
    .default('Novo povpraševanje s spletne strani'),
  updatedAt: timestamp('updated_at', { mode: 'string', withTimezone: true, precision: 3 }),
  createdAt: timestamp('created_at', { mode: 'string', withTimezone: true, precision: 3 }),
})

export const relations_users_sessions = relations(users_sessions, ({ one }) => ({
  _parentID: one(users, {
    fields: [users_sessions._parentID],
    references: [users.id],
    relationName: 'sessions',
  }),
}))
export const relations_users = relations(users, ({ many }) => ({
  sessions: many(users_sessions, {
    relationName: 'sessions',
  }),
}))
export const relations_media = relations(media, () => ({}))
export const relations_pages_blocks_hero_cta_buttons = relations(
  pages_blocks_hero_cta_buttons,
  ({ one }) => ({
    _parentID: one(pages_blocks_hero, {
      fields: [pages_blocks_hero_cta_buttons._parentID],
      references: [pages_blocks_hero.id],
      relationName: 'ctaButtons',
    }),
    page: one(pages, {
      fields: [pages_blocks_hero_cta_buttons.page],
      references: [pages.id],
      relationName: 'page',
    }),
    post: one(posts, {
      fields: [pages_blocks_hero_cta_buttons.post],
      references: [posts.id],
      relationName: 'post',
    }),
  }),
)
export const relations_pages_blocks_hero = relations(pages_blocks_hero, ({ one, many }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_hero._parentID],
    references: [pages.id],
    relationName: '_blocks_hero',
  }),
  backgroundImage: one(media, {
    fields: [pages_blocks_hero.backgroundImage],
    references: [media.id],
    relationName: 'backgroundImage',
  }),
  ctaButtons: many(pages_blocks_hero_cta_buttons, {
    relationName: 'ctaButtons',
  }),
}))
export const relations_pages_blocks_logo_belt_logos = relations(
  pages_blocks_logo_belt_logos,
  ({ one }) => ({
    _parentID: one(pages_blocks_logo_belt, {
      fields: [pages_blocks_logo_belt_logos._parentID],
      references: [pages_blocks_logo_belt.id],
      relationName: 'logos',
    }),
    logo: one(media, {
      fields: [pages_blocks_logo_belt_logos.logo],
      references: [media.id],
      relationName: 'logo',
    }),
  }),
)
export const relations_pages_blocks_logo_belt = relations(
  pages_blocks_logo_belt,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_logo_belt._parentID],
      references: [pages.id],
      relationName: '_blocks_logoBelt',
    }),
    logos: many(pages_blocks_logo_belt_logos, {
      relationName: 'logos',
    }),
  }),
)
export const relations_pages_blocks_services_services_features = relations(
  pages_blocks_services_services_features,
  ({ one }) => ({
    _parentID: one(pages_blocks_services_services, {
      fields: [pages_blocks_services_services_features._parentID],
      references: [pages_blocks_services_services.id],
      relationName: 'features',
    }),
  }),
)
export const relations_pages_blocks_services_services = relations(
  pages_blocks_services_services,
  ({ one, many }) => ({
    _parentID: one(pages_blocks_services, {
      fields: [pages_blocks_services_services._parentID],
      references: [pages_blocks_services.id],
      relationName: 'services',
    }),
    image: one(media, {
      fields: [pages_blocks_services_services.image],
      references: [media.id],
      relationName: 'image',
    }),
    features: many(pages_blocks_services_services_features, {
      relationName: 'features',
    }),
    button_page: one(pages, {
      fields: [pages_blocks_services_services.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
  }),
)
export const relations_pages_blocks_services = relations(
  pages_blocks_services,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_services._parentID],
      references: [pages.id],
      relationName: '_blocks_services',
    }),
    services: many(pages_blocks_services_services, {
      relationName: 'services',
    }),
  }),
)
export const relations_pages_blocks_about_badges = relations(
  pages_blocks_about_badges,
  ({ one }) => ({
    _parentID: one(pages_blocks_about, {
      fields: [pages_blocks_about_badges._parentID],
      references: [pages_blocks_about.id],
      relationName: 'badges',
    }),
  }),
)
export const relations_pages_blocks_about_stats = relations(
  pages_blocks_about_stats,
  ({ one }) => ({
    _parentID: one(pages_blocks_about, {
      fields: [pages_blocks_about_stats._parentID],
      references: [pages_blocks_about.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_about_process = relations(
  pages_blocks_about_process,
  ({ one }) => ({
    _parentID: one(pages_blocks_about, {
      fields: [pages_blocks_about_process._parentID],
      references: [pages_blocks_about.id],
      relationName: 'process',
    }),
  }),
)
export const relations_pages_blocks_about = relations(pages_blocks_about, ({ one, many }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_about._parentID],
    references: [pages.id],
    relationName: '_blocks_about',
  }),
  image: one(media, {
    fields: [pages_blocks_about.image],
    references: [media.id],
    relationName: 'image',
  }),
  badges: many(pages_blocks_about_badges, {
    relationName: 'badges',
  }),
  stats: many(pages_blocks_about_stats, {
    relationName: 'stats',
  }),
  process: many(pages_blocks_about_process, {
    relationName: 'process',
  }),
  button_page: one(pages, {
    fields: [pages_blocks_about.button_page],
    references: [pages.id],
    relationName: 'button_page',
  }),
  button_post: one(posts, {
    fields: [pages_blocks_about.button_post],
    references: [posts.id],
    relationName: 'button_post',
  }),
}))
export const relations_pages_blocks_why_trust_reasons = relations(
  pages_blocks_why_trust_reasons,
  ({ one }) => ({
    _parentID: one(pages_blocks_why_trust, {
      fields: [pages_blocks_why_trust_reasons._parentID],
      references: [pages_blocks_why_trust.id],
      relationName: 'reasons',
    }),
  }),
)
export const relations_pages_blocks_why_trust_pillars = relations(
  pages_blocks_why_trust_pillars,
  ({ one }) => ({
    _parentID: one(pages_blocks_why_trust, {
      fields: [pages_blocks_why_trust_pillars._parentID],
      references: [pages_blocks_why_trust.id],
      relationName: 'pillars',
    }),
  }),
)
export const relations_pages_blocks_why_trust = relations(
  pages_blocks_why_trust,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_why_trust._parentID],
      references: [pages.id],
      relationName: '_blocks_whyTrust',
    }),
    image: one(media, {
      fields: [pages_blocks_why_trust.image],
      references: [media.id],
      relationName: 'image',
    }),
    reasons: many(pages_blocks_why_trust_reasons, {
      relationName: 'reasons',
    }),
    pillars: many(pages_blocks_why_trust_pillars, {
      relationName: 'pillars',
    }),
    button_page: one(pages, {
      fields: [pages_blocks_why_trust.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
    button_post: one(posts, {
      fields: [pages_blocks_why_trust.button_post],
      references: [posts.id],
      relationName: 'button_post',
    }),
  }),
)
export const relations_pages_blocks_projects_projects_stack = relations(
  pages_blocks_projects_projects_stack,
  ({ one }) => ({
    _parentID: one(pages_blocks_projects_projects, {
      fields: [pages_blocks_projects_projects_stack._parentID],
      references: [pages_blocks_projects_projects.id],
      relationName: 'stack',
    }),
  }),
)
export const relations_pages_blocks_projects_projects = relations(
  pages_blocks_projects_projects,
  ({ one, many }) => ({
    _parentID: one(pages_blocks_projects, {
      fields: [pages_blocks_projects_projects._parentID],
      references: [pages_blocks_projects.id],
      relationName: 'projects',
    }),
    image: one(media, {
      fields: [pages_blocks_projects_projects.image],
      references: [media.id],
      relationName: 'image',
    }),
    stack: many(pages_blocks_projects_projects_stack, {
      relationName: 'stack',
    }),
  }),
)
export const relations_pages_blocks_projects = relations(
  pages_blocks_projects,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_projects._parentID],
      references: [pages.id],
      relationName: '_blocks_projects',
    }),
    projects: many(pages_blocks_projects_projects, {
      relationName: 'projects',
    }),
    button_page: one(pages, {
      fields: [pages_blocks_projects.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
    button_post: one(posts, {
      fields: [pages_blocks_projects.button_post],
      references: [posts.id],
      relationName: 'button_post',
    }),
  }),
)
export const relations_pages_blocks_contact = relations(pages_blocks_contact, ({ one }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_contact._parentID],
    references: [pages.id],
    relationName: '_blocks_contact',
  }),
}))
export const relations_pages_blocks_rich_text = relations(pages_blocks_rich_text, ({ one }) => ({
  _parentID: one(pages, {
    fields: [pages_blocks_rich_text._parentID],
    references: [pages.id],
    relationName: '_blocks_richText',
  }),
}))
export const relations_pages_blocks_product_hero_key_benefits = relations(
  pages_blocks_product_hero_key_benefits,
  ({ one }) => ({
    _parentID: one(pages_blocks_product_hero, {
      fields: [pages_blocks_product_hero_key_benefits._parentID],
      references: [pages_blocks_product_hero.id],
      relationName: 'keyBenefits',
    }),
  }),
)
export const relations_pages_blocks_product_hero_cta_buttons = relations(
  pages_blocks_product_hero_cta_buttons,
  ({ one }) => ({
    _parentID: one(pages_blocks_product_hero, {
      fields: [pages_blocks_product_hero_cta_buttons._parentID],
      references: [pages_blocks_product_hero.id],
      relationName: 'ctaButtons',
    }),
    page: one(pages, {
      fields: [pages_blocks_product_hero_cta_buttons.page],
      references: [pages.id],
      relationName: 'page',
    }),
    post: one(posts, {
      fields: [pages_blocks_product_hero_cta_buttons.post],
      references: [posts.id],
      relationName: 'post',
    }),
  }),
)
export const relations_pages_blocks_product_hero = relations(
  pages_blocks_product_hero,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_product_hero._parentID],
      references: [pages.id],
      relationName: '_blocks_productHero',
    }),
    backgroundImage: one(media, {
      fields: [pages_blocks_product_hero.backgroundImage],
      references: [media.id],
      relationName: 'backgroundImage',
    }),
    keyBenefits: many(pages_blocks_product_hero_key_benefits, {
      relationName: 'keyBenefits',
    }),
    ctaButtons: many(pages_blocks_product_hero_cta_buttons, {
      relationName: 'ctaButtons',
    }),
  }),
)
export const relations_pages_blocks_key_features_features = relations(
  pages_blocks_key_features_features,
  ({ one }) => ({
    _parentID: one(pages_blocks_key_features, {
      fields: [pages_blocks_key_features_features._parentID],
      references: [pages_blocks_key_features.id],
      relationName: 'features',
    }),
  }),
)
export const relations_pages_blocks_key_features = relations(
  pages_blocks_key_features,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_key_features._parentID],
      references: [pages.id],
      relationName: '_blocks_keyFeatures',
    }),
    features: many(pages_blocks_key_features_features, {
      relationName: 'features',
    }),
  }),
)
export const relations_pages_blocks_product_gallery_images = relations(
  pages_blocks_product_gallery_images,
  ({ one }) => ({
    _parentID: one(pages_blocks_product_gallery, {
      fields: [pages_blocks_product_gallery_images._parentID],
      references: [pages_blocks_product_gallery.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [pages_blocks_product_gallery_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_pages_blocks_product_gallery = relations(
  pages_blocks_product_gallery,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_product_gallery._parentID],
      references: [pages.id],
      relationName: '_blocks_productGallery',
    }),
    images: many(pages_blocks_product_gallery_images, {
      relationName: 'images',
    }),
  }),
)
export const relations_pages_blocks_specifications_specifications_items = relations(
  pages_blocks_specifications_specifications_items,
  ({ one }) => ({
    _parentID: one(pages_blocks_specifications_specifications, {
      fields: [pages_blocks_specifications_specifications_items._parentID],
      references: [pages_blocks_specifications_specifications.id],
      relationName: 'items',
    }),
  }),
)
export const relations_pages_blocks_specifications_specifications = relations(
  pages_blocks_specifications_specifications,
  ({ one, many }) => ({
    _parentID: one(pages_blocks_specifications, {
      fields: [pages_blocks_specifications_specifications._parentID],
      references: [pages_blocks_specifications.id],
      relationName: 'specifications',
    }),
    items: many(pages_blocks_specifications_specifications_items, {
      relationName: 'items',
    }),
  }),
)
export const relations_pages_blocks_specifications_certification_badges = relations(
  pages_blocks_specifications_certification_badges,
  ({ one }) => ({
    _parentID: one(pages_blocks_specifications, {
      fields: [pages_blocks_specifications_certification_badges._parentID],
      references: [pages_blocks_specifications.id],
      relationName: 'certificationBadges',
    }),
  }),
)
export const relations_pages_blocks_specifications_additional_info_details = relations(
  pages_blocks_specifications_additional_info_details,
  ({ one }) => ({
    _parentID: one(pages_blocks_specifications, {
      fields: [pages_blocks_specifications_additional_info_details._parentID],
      references: [pages_blocks_specifications.id],
      relationName: 'additionalInfo_details',
    }),
  }),
)
export const relations_pages_blocks_specifications = relations(
  pages_blocks_specifications,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_specifications._parentID],
      references: [pages.id],
      relationName: '_blocks_specifications',
    }),
    specifications: many(pages_blocks_specifications_specifications, {
      relationName: 'specifications',
    }),
    certificationBadges: many(pages_blocks_specifications_certification_badges, {
      relationName: 'certificationBadges',
    }),
    additionalInfo_details: many(pages_blocks_specifications_additional_info_details, {
      relationName: 'additionalInfo_details',
    }),
  }),
)
export const relations_pages_blocks_applications_applications_details = relations(
  pages_blocks_applications_applications_details,
  ({ one }) => ({
    _parentID: one(pages_blocks_applications_applications, {
      fields: [pages_blocks_applications_applications_details._parentID],
      references: [pages_blocks_applications_applications.id],
      relationName: 'details',
    }),
  }),
)
export const relations_pages_blocks_applications_applications = relations(
  pages_blocks_applications_applications,
  ({ one, many }) => ({
    _parentID: one(pages_blocks_applications, {
      fields: [pages_blocks_applications_applications._parentID],
      references: [pages_blocks_applications.id],
      relationName: 'applications',
    }),
    details: many(pages_blocks_applications_applications_details, {
      relationName: 'details',
    }),
  }),
)
export const relations_pages_blocks_applications_stats = relations(
  pages_blocks_applications_stats,
  ({ one }) => ({
    _parentID: one(pages_blocks_applications, {
      fields: [pages_blocks_applications_stats._parentID],
      references: [pages_blocks_applications.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_applications_case_study_stats = relations(
  pages_blocks_applications_case_study_stats,
  ({ one }) => ({
    _parentID: one(pages_blocks_applications, {
      fields: [pages_blocks_applications_case_study_stats._parentID],
      references: [pages_blocks_applications.id],
      relationName: 'caseStudy_stats',
    }),
  }),
)
export const relations_pages_blocks_applications = relations(
  pages_blocks_applications,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_applications._parentID],
      references: [pages.id],
      relationName: '_blocks_applications',
    }),
    applications: many(pages_blocks_applications_applications, {
      relationName: 'applications',
    }),
    stats: many(pages_blocks_applications_stats, {
      relationName: 'stats',
    }),
    caseStudy_stats: many(pages_blocks_applications_case_study_stats, {
      relationName: 'caseStudy_stats',
    }),
    caseStudy_image: one(media, {
      fields: [pages_blocks_applications.caseStudy_image],
      references: [media.id],
      relationName: 'caseStudy_image',
    }),
  }),
)
export const relations_pages_blocks_technical_overview_process_steps = relations(
  pages_blocks_technical_overview_process_steps,
  ({ one }) => ({
    _parentID: one(pages_blocks_technical_overview, {
      fields: [pages_blocks_technical_overview_process_steps._parentID],
      references: [pages_blocks_technical_overview.id],
      relationName: 'processSteps',
    }),
  }),
)
export const relations_pages_blocks_technical_overview_technical_benefits = relations(
  pages_blocks_technical_overview_technical_benefits,
  ({ one }) => ({
    _parentID: one(pages_blocks_technical_overview, {
      fields: [pages_blocks_technical_overview_technical_benefits._parentID],
      references: [pages_blocks_technical_overview.id],
      relationName: 'technicalBenefits',
    }),
  }),
)
export const relations_pages_blocks_technical_overview = relations(
  pages_blocks_technical_overview,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_technical_overview._parentID],
      references: [pages.id],
      relationName: '_blocks_technicalOverview',
    }),
    technicalImage: one(media, {
      fields: [pages_blocks_technical_overview.technicalImage],
      references: [media.id],
      relationName: 'technicalImage',
    }),
    processSteps: many(pages_blocks_technical_overview_process_steps, {
      relationName: 'processSteps',
    }),
    technicalBenefits: many(pages_blocks_technical_overview_technical_benefits, {
      relationName: 'technicalBenefits',
    }),
  }),
)
export const relations_pages_blocks_benefits_comparison_benefits = relations(
  pages_blocks_benefits_comparison_benefits,
  ({ one }) => ({
    _parentID: one(pages_blocks_benefits_comparison, {
      fields: [pages_blocks_benefits_comparison_benefits._parentID],
      references: [pages_blocks_benefits_comparison.id],
      relationName: 'benefits',
    }),
  }),
)
export const relations_pages_blocks_benefits_comparison_summary_cards = relations(
  pages_blocks_benefits_comparison_summary_cards,
  ({ one }) => ({
    _parentID: one(pages_blocks_benefits_comparison, {
      fields: [pages_blocks_benefits_comparison_summary_cards._parentID],
      references: [pages_blocks_benefits_comparison.id],
      relationName: 'summaryCards',
    }),
  }),
)
export const relations_pages_blocks_benefits_comparison = relations(
  pages_blocks_benefits_comparison,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_benefits_comparison._parentID],
      references: [pages.id],
      relationName: '_blocks_benefitsComparison',
    }),
    benefits: many(pages_blocks_benefits_comparison_benefits, {
      relationName: 'benefits',
    }),
    summaryCards: many(pages_blocks_benefits_comparison_summary_cards, {
      relationName: 'summaryCards',
    }),
  }),
)
export const relations_pages_blocks_product_c_t_a_stats = relations(
  pages_blocks_product_c_t_a_stats,
  ({ one }) => ({
    _parentID: one(pages_blocks_product_c_t_a, {
      fields: [pages_blocks_product_c_t_a_stats._parentID],
      references: [pages_blocks_product_c_t_a.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_product_c_t_a_why_us_points = relations(
  pages_blocks_product_c_t_a_why_us_points,
  ({ one }) => ({
    _parentID: one(pages_blocks_product_c_t_a, {
      fields: [pages_blocks_product_c_t_a_why_us_points._parentID],
      references: [pages_blocks_product_c_t_a.id],
      relationName: 'whyUsPoints',
    }),
  }),
)
export const relations_pages_blocks_product_c_t_a_application_options = relations(
  pages_blocks_product_c_t_a_application_options,
  ({ one }) => ({
    _parentID: one(pages_blocks_product_c_t_a, {
      fields: [pages_blocks_product_c_t_a_application_options._parentID],
      references: [pages_blocks_product_c_t_a.id],
      relationName: 'applicationOptions',
    }),
  }),
)
export const relations_pages_blocks_product_c_t_a = relations(
  pages_blocks_product_c_t_a,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_product_c_t_a._parentID],
      references: [pages.id],
      relationName: '_blocks_productCTA',
    }),
    stats: many(pages_blocks_product_c_t_a_stats, {
      relationName: 'stats',
    }),
    whyUsPoints: many(pages_blocks_product_c_t_a_why_us_points, {
      relationName: 'whyUsPoints',
    }),
    heroImage: one(media, {
      fields: [pages_blocks_product_c_t_a.heroImage],
      references: [media.id],
      relationName: 'heroImage',
    }),
    applicationOptions: many(pages_blocks_product_c_t_a_application_options, {
      relationName: 'applicationOptions',
    }),
  }),
)
export const relations_pages_blocks_product_resources_resources = relations(
  pages_blocks_product_resources_resources,
  ({ one }) => ({
    _parentID: one(pages_blocks_product_resources, {
      fields: [pages_blocks_product_resources_resources._parentID],
      references: [pages_blocks_product_resources.id],
      relationName: 'resources',
    }),
  }),
)
export const relations_pages_blocks_product_resources_quick_access_items = relations(
  pages_blocks_product_resources_quick_access_items,
  ({ one }) => ({
    _parentID: one(pages_blocks_product_resources, {
      fields: [pages_blocks_product_resources_quick_access_items._parentID],
      references: [pages_blocks_product_resources.id],
      relationName: 'quickAccessItems',
    }),
  }),
)
export const relations_pages_blocks_product_resources = relations(
  pages_blocks_product_resources,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_product_resources._parentID],
      references: [pages.id],
      relationName: '_blocks_productResources',
    }),
    resources: many(pages_blocks_product_resources_resources, {
      relationName: 'resources',
    }),
    quickAccessItems: many(pages_blocks_product_resources_quick_access_items, {
      relationName: 'quickAccessItems',
    }),
  }),
)
export const relations_pages_blocks_contact_hero_quick_contact_methods = relations(
  pages_blocks_contact_hero_quick_contact_methods,
  ({ one }) => ({
    _parentID: one(pages_blocks_contact_hero, {
      fields: [pages_blocks_contact_hero_quick_contact_methods._parentID],
      references: [pages_blocks_contact_hero.id],
      relationName: 'quickContactMethods',
    }),
  }),
)
export const relations_pages_blocks_contact_hero = relations(
  pages_blocks_contact_hero,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_contact_hero._parentID],
      references: [pages.id],
      relationName: '_blocks_contactHero',
    }),
    quickContactMethods: many(pages_blocks_contact_hero_quick_contact_methods, {
      relationName: 'quickContactMethods',
    }),
  }),
)
export const relations_pages_blocks_contact_form = relations(
  pages_blocks_contact_form,
  ({ one }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_contact_form._parentID],
      references: [pages.id],
      relationName: '_blocks_contactForm',
    }),
  }),
)
export const relations_pages_blocks_contact_info_contact_methods = relations(
  pages_blocks_contact_info_contact_methods,
  ({ one }) => ({
    _parentID: one(pages_blocks_contact_info, {
      fields: [pages_blocks_contact_info_contact_methods._parentID],
      references: [pages_blocks_contact_info.id],
      relationName: 'contactMethods',
    }),
  }),
)
export const relations_pages_blocks_contact_info = relations(
  pages_blocks_contact_info,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_contact_info._parentID],
      references: [pages.id],
      relationName: '_blocks_contactInfo',
    }),
    contactMethods: many(pages_blocks_contact_info_contact_methods, {
      relationName: 'contactMethods',
    }),
  }),
)
export const relations_pages_blocks_contact_location = relations(
  pages_blocks_contact_location,
  ({ one }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_contact_location._parentID],
      references: [pages.id],
      relationName: '_blocks_contactLocation',
    }),
  }),
)
export const relations_pages_blocks_contact_f_a_q_faqs = relations(
  pages_blocks_contact_f_a_q_faqs,
  ({ one }) => ({
    _parentID: one(pages_blocks_contact_f_a_q, {
      fields: [pages_blocks_contact_f_a_q_faqs._parentID],
      references: [pages_blocks_contact_f_a_q.id],
      relationName: 'faqs',
    }),
  }),
)
export const relations_pages_blocks_contact_f_a_q = relations(
  pages_blocks_contact_f_a_q,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_contact_f_a_q._parentID],
      references: [pages.id],
      relationName: '_blocks_contactFAQ',
    }),
    faqs: many(pages_blocks_contact_f_a_q_faqs, {
      relationName: 'faqs',
    }),
  }),
)
export const relations_pages_blocks_universal_hero_benefits = relations(
  pages_blocks_universal_hero_benefits,
  ({ one }) => ({
    _parentID: one(pages_blocks_universal_hero, {
      fields: [pages_blocks_universal_hero_benefits._parentID],
      references: [pages_blocks_universal_hero.id],
      relationName: 'benefits',
    }),
  }),
)
export const relations_pages_blocks_universal_hero_trust_indicators = relations(
  pages_blocks_universal_hero_trust_indicators,
  ({ one }) => ({
    _parentID: one(pages_blocks_universal_hero, {
      fields: [pages_blocks_universal_hero_trust_indicators._parentID],
      references: [pages_blocks_universal_hero.id],
      relationName: 'trustIndicators',
    }),
  }),
)
export const relations_pages_blocks_universal_hero_stats = relations(
  pages_blocks_universal_hero_stats,
  ({ one }) => ({
    _parentID: one(pages_blocks_universal_hero, {
      fields: [pages_blocks_universal_hero_stats._parentID],
      references: [pages_blocks_universal_hero.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_universal_hero_contact_methods = relations(
  pages_blocks_universal_hero_contact_methods,
  ({ one }) => ({
    _parentID: one(pages_blocks_universal_hero, {
      fields: [pages_blocks_universal_hero_contact_methods._parentID],
      references: [pages_blocks_universal_hero.id],
      relationName: 'contactMethods',
    }),
    link_page: one(pages, {
      fields: [pages_blocks_universal_hero_contact_methods.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [pages_blocks_universal_hero_contact_methods.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
  }),
)
export const relations_pages_blocks_universal_hero = relations(
  pages_blocks_universal_hero,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_universal_hero._parentID],
      references: [pages.id],
      relationName: '_blocks_universalHero',
    }),
    benefits: many(pages_blocks_universal_hero_benefits, {
      relationName: 'benefits',
    }),
    primaryCTA_page: one(pages, {
      fields: [pages_blocks_universal_hero.primaryCTA_page],
      references: [pages.id],
      relationName: 'primaryCTA_page',
    }),
    primaryCTA_post: one(posts, {
      fields: [pages_blocks_universal_hero.primaryCTA_post],
      references: [posts.id],
      relationName: 'primaryCTA_post',
    }),
    secondaryCTA_page: one(pages, {
      fields: [pages_blocks_universal_hero.secondaryCTA_page],
      references: [pages.id],
      relationName: 'secondaryCTA_page',
    }),
    secondaryCTA_post: one(posts, {
      fields: [pages_blocks_universal_hero.secondaryCTA_post],
      references: [posts.id],
      relationName: 'secondaryCTA_post',
    }),
    trustIndicators: many(pages_blocks_universal_hero_trust_indicators, {
      relationName: 'trustIndicators',
    }),
    stats: many(pages_blocks_universal_hero_stats, {
      relationName: 'stats',
    }),
    contactMethods: many(pages_blocks_universal_hero_contact_methods, {
      relationName: 'contactMethods',
    }),
  }),
)
export const relations_pages_blocks_universal_c_t_a_benefits = relations(
  pages_blocks_universal_c_t_a_benefits,
  ({ one }) => ({
    _parentID: one(pages_blocks_universal_c_t_a, {
      fields: [pages_blocks_universal_c_t_a_benefits._parentID],
      references: [pages_blocks_universal_c_t_a.id],
      relationName: 'benefits',
    }),
  }),
)
export const relations_pages_blocks_universal_c_t_a_stats = relations(
  pages_blocks_universal_c_t_a_stats,
  ({ one }) => ({
    _parentID: one(pages_blocks_universal_c_t_a, {
      fields: [pages_blocks_universal_c_t_a_stats._parentID],
      references: [pages_blocks_universal_c_t_a.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_universal_c_t_a = relations(
  pages_blocks_universal_c_t_a,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_universal_c_t_a._parentID],
      references: [pages.id],
      relationName: '_blocks_universalCTA',
    }),
    primaryCTA_page: one(pages, {
      fields: [pages_blocks_universal_c_t_a.primaryCTA_page],
      references: [pages.id],
      relationName: 'primaryCTA_page',
    }),
    primaryCTA_post: one(posts, {
      fields: [pages_blocks_universal_c_t_a.primaryCTA_post],
      references: [posts.id],
      relationName: 'primaryCTA_post',
    }),
    secondaryCTA_page: one(pages, {
      fields: [pages_blocks_universal_c_t_a.secondaryCTA_page],
      references: [pages.id],
      relationName: 'secondaryCTA_page',
    }),
    secondaryCTA_post: one(posts, {
      fields: [pages_blocks_universal_c_t_a.secondaryCTA_post],
      references: [posts.id],
      relationName: 'secondaryCTA_post',
    }),
    benefits: many(pages_blocks_universal_c_t_a_benefits, {
      relationName: 'benefits',
    }),
    stats: many(pages_blocks_universal_c_t_a_stats, {
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_feature_grid_features_details = relations(
  pages_blocks_feature_grid_features_details,
  ({ one }) => ({
    _parentID: one(pages_blocks_feature_grid_features, {
      fields: [pages_blocks_feature_grid_features_details._parentID],
      references: [pages_blocks_feature_grid_features.id],
      relationName: 'details',
    }),
  }),
)
export const relations_pages_blocks_feature_grid_features = relations(
  pages_blocks_feature_grid_features,
  ({ one, many }) => ({
    _parentID: one(pages_blocks_feature_grid, {
      fields: [pages_blocks_feature_grid_features._parentID],
      references: [pages_blocks_feature_grid.id],
      relationName: 'features',
    }),
    link_page: one(pages, {
      fields: [pages_blocks_feature_grid_features.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [pages_blocks_feature_grid_features.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
    details: many(pages_blocks_feature_grid_features_details, {
      relationName: 'details',
    }),
  }),
)
export const relations_pages_blocks_feature_grid = relations(
  pages_blocks_feature_grid,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_feature_grid._parentID],
      references: [pages.id],
      relationName: '_blocks_featureGrid',
    }),
    features: many(pages_blocks_feature_grid_features, {
      relationName: 'features',
    }),
  }),
)
export const relations_pages_blocks_content_grid_items_applications = relations(
  pages_blocks_content_grid_items_applications,
  ({ one }) => ({
    _parentID: one(pages_blocks_content_grid_items, {
      fields: [pages_blocks_content_grid_items_applications._parentID],
      references: [pages_blocks_content_grid_items.id],
      relationName: 'applications',
    }),
  }),
)
export const relations_pages_blocks_content_grid_items = relations(
  pages_blocks_content_grid_items,
  ({ one, many }) => ({
    _parentID: one(pages_blocks_content_grid, {
      fields: [pages_blocks_content_grid_items._parentID],
      references: [pages_blocks_content_grid.id],
      relationName: 'items',
    }),
    link_page: one(pages, {
      fields: [pages_blocks_content_grid_items.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [pages_blocks_content_grid_items.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
    applications: many(pages_blocks_content_grid_items_applications, {
      relationName: 'applications',
    }),
  }),
)
export const relations_pages_blocks_content_grid = relations(
  pages_blocks_content_grid,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_content_grid._parentID],
      references: [pages.id],
      relationName: '_blocks_contentGrid',
    }),
    items: many(pages_blocks_content_grid_items, {
      relationName: 'items',
    }),
  }),
)
export const relations_pages_blocks_stats_section_stats = relations(
  pages_blocks_stats_section_stats,
  ({ one }) => ({
    _parentID: one(pages_blocks_stats_section, {
      fields: [pages_blocks_stats_section_stats._parentID],
      references: [pages_blocks_stats_section.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_stats_section = relations(
  pages_blocks_stats_section,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_stats_section._parentID],
      references: [pages.id],
      relationName: '_blocks_statsSection',
    }),
    stats: many(pages_blocks_stats_section_stats, {
      relationName: 'stats',
    }),
  }),
)
export const relations_pages_blocks_process_steps_steps_details = relations(
  pages_blocks_process_steps_steps_details,
  ({ one }) => ({
    _parentID: one(pages_blocks_process_steps_steps, {
      fields: [pages_blocks_process_steps_steps_details._parentID],
      references: [pages_blocks_process_steps_steps.id],
      relationName: 'details',
    }),
  }),
)
export const relations_pages_blocks_process_steps_steps = relations(
  pages_blocks_process_steps_steps,
  ({ one, many }) => ({
    _parentID: one(pages_blocks_process_steps, {
      fields: [pages_blocks_process_steps_steps._parentID],
      references: [pages_blocks_process_steps.id],
      relationName: 'steps',
    }),
    details: many(pages_blocks_process_steps_steps_details, {
      relationName: 'details',
    }),
  }),
)
export const relations_pages_blocks_process_steps = relations(
  pages_blocks_process_steps,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_process_steps._parentID],
      references: [pages.id],
      relationName: '_blocks_processSteps',
    }),
    steps: many(pages_blocks_process_steps_steps, {
      relationName: 'steps',
    }),
  }),
)
export const relations_pages_blocks_content_cards_cards_tags = relations(
  pages_blocks_content_cards_cards_tags,
  ({ one }) => ({
    _parentID: one(pages_blocks_content_cards_cards, {
      fields: [pages_blocks_content_cards_cards_tags._parentID],
      references: [pages_blocks_content_cards_cards.id],
      relationName: 'tags',
    }),
  }),
)
export const relations_pages_blocks_content_cards_cards = relations(
  pages_blocks_content_cards_cards,
  ({ one, many }) => ({
    _parentID: one(pages_blocks_content_cards, {
      fields: [pages_blocks_content_cards_cards._parentID],
      references: [pages_blocks_content_cards.id],
      relationName: 'cards',
    }),
    link_page: one(pages, {
      fields: [pages_blocks_content_cards_cards.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [pages_blocks_content_cards_cards.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
    tags: many(pages_blocks_content_cards_cards_tags, {
      relationName: 'tags',
    }),
  }),
)
export const relations_pages_blocks_content_cards = relations(
  pages_blocks_content_cards,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_content_cards._parentID],
      references: [pages.id],
      relationName: '_blocks_contentCards',
    }),
    cards: many(pages_blocks_content_cards_cards, {
      relationName: 'cards',
    }),
  }),
)
export const relations_pages_blocks_contact_section_benefits = relations(
  pages_blocks_contact_section_benefits,
  ({ one }) => ({
    _parentID: one(pages_blocks_contact_section, {
      fields: [pages_blocks_contact_section_benefits._parentID],
      references: [pages_blocks_contact_section.id],
      relationName: 'benefits',
    }),
  }),
)
export const relations_pages_blocks_contact_section = relations(
  pages_blocks_contact_section,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_contact_section._parentID],
      references: [pages.id],
      relationName: '_blocks_contactSection',
    }),
    benefits: many(pages_blocks_contact_section_benefits, {
      relationName: 'benefits',
    }),
  }),
)
export const relations_pages_blocks_comparison_table_items = relations(
  pages_blocks_comparison_table_items,
  ({ one }) => ({
    _parentID: one(pages_blocks_comparison_table, {
      fields: [pages_blocks_comparison_table_items._parentID],
      references: [pages_blocks_comparison_table.id],
      relationName: 'items',
    }),
  }),
)
export const relations_pages_blocks_comparison_table = relations(
  pages_blocks_comparison_table,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_comparison_table._parentID],
      references: [pages.id],
      relationName: '_blocks_comparisonTable',
    }),
    items: many(pages_blocks_comparison_table_items, {
      relationName: 'items',
    }),
  }),
)
export const relations_pages_blocks_simple_page_breadcrumbs = relations(
  pages_blocks_simple_page_breadcrumbs,
  ({ one }) => ({
    _parentID: one(pages_blocks_simple_page, {
      fields: [pages_blocks_simple_page_breadcrumbs._parentID],
      references: [pages_blocks_simple_page.id],
      relationName: 'breadcrumbs',
    }),
    link_page: one(pages, {
      fields: [pages_blocks_simple_page_breadcrumbs.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [pages_blocks_simple_page_breadcrumbs.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
  }),
)
export const relations_pages_blocks_simple_page_links = relations(
  pages_blocks_simple_page_links,
  ({ one }) => ({
    _parentID: one(pages_blocks_simple_page, {
      fields: [pages_blocks_simple_page_links._parentID],
      references: [pages_blocks_simple_page.id],
      relationName: 'links',
    }),
    link_page: one(pages, {
      fields: [pages_blocks_simple_page_links.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [pages_blocks_simple_page_links.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
  }),
)
export const relations_pages_blocks_simple_page = relations(
  pages_blocks_simple_page,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_simple_page._parentID],
      references: [pages.id],
      relationName: '_blocks_simplePage',
    }),
    breadcrumbs: many(pages_blocks_simple_page_breadcrumbs, {
      relationName: 'breadcrumbs',
    }),
    links: many(pages_blocks_simple_page_links, {
      relationName: 'links',
    }),
  }),
)
export const relations_pages_blocks_brand_showcase_brands = relations(
  pages_blocks_brand_showcase_brands,
  ({ one }) => ({
    _parentID: one(pages_blocks_brand_showcase, {
      fields: [pages_blocks_brand_showcase_brands._parentID],
      references: [pages_blocks_brand_showcase.id],
      relationName: 'brands',
    }),
    logo: one(media, {
      fields: [pages_blocks_brand_showcase_brands.logo],
      references: [media.id],
      relationName: 'logo',
    }),
  }),
)
export const relations_pages_blocks_brand_showcase = relations(
  pages_blocks_brand_showcase,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_brand_showcase._parentID],
      references: [pages.id],
      relationName: '_blocks_brandShowcase',
    }),
    brands: many(pages_blocks_brand_showcase_brands, {
      relationName: 'brands',
    }),
  }),
)
export const relations_pages_blocks_technical_content_process_steps = relations(
  pages_blocks_technical_content_process_steps,
  ({ one }) => ({
    _parentID: one(pages_blocks_technical_content, {
      fields: [pages_blocks_technical_content_process_steps._parentID],
      references: [pages_blocks_technical_content.id],
      relationName: 'processSteps',
    }),
  }),
)
export const relations_pages_blocks_technical_content_specifications_items = relations(
  pages_blocks_technical_content_specifications_items,
  ({ one }) => ({
    _parentID: one(pages_blocks_technical_content_specifications, {
      fields: [pages_blocks_technical_content_specifications_items._parentID],
      references: [pages_blocks_technical_content_specifications.id],
      relationName: 'items',
    }),
  }),
)
export const relations_pages_blocks_technical_content_specifications = relations(
  pages_blocks_technical_content_specifications,
  ({ one, many }) => ({
    _parentID: one(pages_blocks_technical_content, {
      fields: [pages_blocks_technical_content_specifications._parentID],
      references: [pages_blocks_technical_content.id],
      relationName: 'specifications',
    }),
    items: many(pages_blocks_technical_content_specifications_items, {
      relationName: 'items',
    }),
  }),
)
export const relations_pages_blocks_technical_content = relations(
  pages_blocks_technical_content,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_technical_content._parentID],
      references: [pages.id],
      relationName: '_blocks_technicalContent',
    }),
    processSteps: many(pages_blocks_technical_content_process_steps, {
      relationName: 'processSteps',
    }),
    specifications: many(pages_blocks_technical_content_specifications, {
      relationName: 'specifications',
    }),
  }),
)
export const relations_pages_blocks_resource_gallery_resources = relations(
  pages_blocks_resource_gallery_resources,
  ({ one }) => ({
    _parentID: one(pages_blocks_resource_gallery, {
      fields: [pages_blocks_resource_gallery_resources._parentID],
      references: [pages_blocks_resource_gallery.id],
      relationName: 'resources',
    }),
  }),
)
export const relations_pages_blocks_resource_gallery_gallery_images = relations(
  pages_blocks_resource_gallery_gallery_images,
  ({ one }) => ({
    _parentID: one(pages_blocks_resource_gallery, {
      fields: [pages_blocks_resource_gallery_gallery_images._parentID],
      references: [pages_blocks_resource_gallery.id],
      relationName: 'galleryImages',
    }),
    image: one(media, {
      fields: [pages_blocks_resource_gallery_gallery_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations_pages_blocks_resource_gallery = relations(
  pages_blocks_resource_gallery,
  ({ one, many }) => ({
    _parentID: one(pages, {
      fields: [pages_blocks_resource_gallery._parentID],
      references: [pages.id],
      relationName: '_blocks_resourceGallery',
    }),
    resources: many(pages_blocks_resource_gallery_resources, {
      relationName: 'resources',
    }),
    galleryImages: many(pages_blocks_resource_gallery_gallery_images, {
      relationName: 'galleryImages',
    }),
  }),
)
export const relations_pages_locales = relations(pages_locales, ({ one }) => ({
  _parentID: one(pages, {
    fields: [pages_locales._parentID],
    references: [pages.id],
    relationName: '_locales',
  }),
}))
export const relations_pages = relations(pages, ({ many }) => ({
  _blocks_hero: many(pages_blocks_hero, {
    relationName: '_blocks_hero',
  }),
  _blocks_logoBelt: many(pages_blocks_logo_belt, {
    relationName: '_blocks_logoBelt',
  }),
  _blocks_services: many(pages_blocks_services, {
    relationName: '_blocks_services',
  }),
  _blocks_about: many(pages_blocks_about, {
    relationName: '_blocks_about',
  }),
  _blocks_whyTrust: many(pages_blocks_why_trust, {
    relationName: '_blocks_whyTrust',
  }),
  _blocks_projects: many(pages_blocks_projects, {
    relationName: '_blocks_projects',
  }),
  _blocks_contact: many(pages_blocks_contact, {
    relationName: '_blocks_contact',
  }),
  _blocks_richText: many(pages_blocks_rich_text, {
    relationName: '_blocks_richText',
  }),
  _blocks_productHero: many(pages_blocks_product_hero, {
    relationName: '_blocks_productHero',
  }),
  _blocks_keyFeatures: many(pages_blocks_key_features, {
    relationName: '_blocks_keyFeatures',
  }),
  _blocks_productGallery: many(pages_blocks_product_gallery, {
    relationName: '_blocks_productGallery',
  }),
  _blocks_specifications: many(pages_blocks_specifications, {
    relationName: '_blocks_specifications',
  }),
  _blocks_applications: many(pages_blocks_applications, {
    relationName: '_blocks_applications',
  }),
  _blocks_technicalOverview: many(pages_blocks_technical_overview, {
    relationName: '_blocks_technicalOverview',
  }),
  _blocks_benefitsComparison: many(pages_blocks_benefits_comparison, {
    relationName: '_blocks_benefitsComparison',
  }),
  _blocks_productCTA: many(pages_blocks_product_c_t_a, {
    relationName: '_blocks_productCTA',
  }),
  _blocks_productResources: many(pages_blocks_product_resources, {
    relationName: '_blocks_productResources',
  }),
  _blocks_contactHero: many(pages_blocks_contact_hero, {
    relationName: '_blocks_contactHero',
  }),
  _blocks_contactForm: many(pages_blocks_contact_form, {
    relationName: '_blocks_contactForm',
  }),
  _blocks_contactInfo: many(pages_blocks_contact_info, {
    relationName: '_blocks_contactInfo',
  }),
  _blocks_contactLocation: many(pages_blocks_contact_location, {
    relationName: '_blocks_contactLocation',
  }),
  _blocks_contactFAQ: many(pages_blocks_contact_f_a_q, {
    relationName: '_blocks_contactFAQ',
  }),
  _blocks_universalHero: many(pages_blocks_universal_hero, {
    relationName: '_blocks_universalHero',
  }),
  _blocks_universalCTA: many(pages_blocks_universal_c_t_a, {
    relationName: '_blocks_universalCTA',
  }),
  _blocks_featureGrid: many(pages_blocks_feature_grid, {
    relationName: '_blocks_featureGrid',
  }),
  _blocks_contentGrid: many(pages_blocks_content_grid, {
    relationName: '_blocks_contentGrid',
  }),
  _blocks_statsSection: many(pages_blocks_stats_section, {
    relationName: '_blocks_statsSection',
  }),
  _blocks_processSteps: many(pages_blocks_process_steps, {
    relationName: '_blocks_processSteps',
  }),
  _blocks_contentCards: many(pages_blocks_content_cards, {
    relationName: '_blocks_contentCards',
  }),
  _blocks_contactSection: many(pages_blocks_contact_section, {
    relationName: '_blocks_contactSection',
  }),
  _blocks_comparisonTable: many(pages_blocks_comparison_table, {
    relationName: '_blocks_comparisonTable',
  }),
  _blocks_simplePage: many(pages_blocks_simple_page, {
    relationName: '_blocks_simplePage',
  }),
  _blocks_brandShowcase: many(pages_blocks_brand_showcase, {
    relationName: '_blocks_brandShowcase',
  }),
  _blocks_technicalContent: many(pages_blocks_technical_content, {
    relationName: '_blocks_technicalContent',
  }),
  _blocks_resourceGallery: many(pages_blocks_resource_gallery, {
    relationName: '_blocks_resourceGallery',
  }),
  _locales: many(pages_locales, {
    relationName: '_locales',
  }),
}))
export const relations__pages_v_blocks_hero_cta_buttons = relations(
  _pages_v_blocks_hero_cta_buttons,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_hero, {
      fields: [_pages_v_blocks_hero_cta_buttons._parentID],
      references: [_pages_v_blocks_hero.id],
      relationName: 'ctaButtons',
    }),
    page: one(pages, {
      fields: [_pages_v_blocks_hero_cta_buttons.page],
      references: [pages.id],
      relationName: 'page',
    }),
    post: one(posts, {
      fields: [_pages_v_blocks_hero_cta_buttons.post],
      references: [posts.id],
      relationName: 'post',
    }),
  }),
)
export const relations__pages_v_blocks_hero = relations(_pages_v_blocks_hero, ({ one, many }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_blocks_hero._parentID],
    references: [_pages_v.id],
    relationName: '_blocks_hero',
  }),
  backgroundImage: one(media, {
    fields: [_pages_v_blocks_hero.backgroundImage],
    references: [media.id],
    relationName: 'backgroundImage',
  }),
  ctaButtons: many(_pages_v_blocks_hero_cta_buttons, {
    relationName: 'ctaButtons',
  }),
}))
export const relations__pages_v_blocks_logo_belt_logos = relations(
  _pages_v_blocks_logo_belt_logos,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_logo_belt, {
      fields: [_pages_v_blocks_logo_belt_logos._parentID],
      references: [_pages_v_blocks_logo_belt.id],
      relationName: 'logos',
    }),
    logo: one(media, {
      fields: [_pages_v_blocks_logo_belt_logos.logo],
      references: [media.id],
      relationName: 'logo',
    }),
  }),
)
export const relations__pages_v_blocks_logo_belt = relations(
  _pages_v_blocks_logo_belt,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_logo_belt._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_logoBelt',
    }),
    logos: many(_pages_v_blocks_logo_belt_logos, {
      relationName: 'logos',
    }),
  }),
)
export const relations__pages_v_blocks_services_services_features = relations(
  _pages_v_blocks_services_services_features,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_services_services, {
      fields: [_pages_v_blocks_services_services_features._parentID],
      references: [_pages_v_blocks_services_services.id],
      relationName: 'features',
    }),
  }),
)
export const relations__pages_v_blocks_services_services = relations(
  _pages_v_blocks_services_services,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_services, {
      fields: [_pages_v_blocks_services_services._parentID],
      references: [_pages_v_blocks_services.id],
      relationName: 'services',
    }),
    image: one(media, {
      fields: [_pages_v_blocks_services_services.image],
      references: [media.id],
      relationName: 'image',
    }),
    features: many(_pages_v_blocks_services_services_features, {
      relationName: 'features',
    }),
    button_page: one(pages, {
      fields: [_pages_v_blocks_services_services.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
  }),
)
export const relations__pages_v_blocks_services = relations(
  _pages_v_blocks_services,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_services._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_services',
    }),
    services: many(_pages_v_blocks_services_services, {
      relationName: 'services',
    }),
  }),
)
export const relations__pages_v_blocks_about_badges = relations(
  _pages_v_blocks_about_badges,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_about, {
      fields: [_pages_v_blocks_about_badges._parentID],
      references: [_pages_v_blocks_about.id],
      relationName: 'badges',
    }),
  }),
)
export const relations__pages_v_blocks_about_stats = relations(
  _pages_v_blocks_about_stats,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_about, {
      fields: [_pages_v_blocks_about_stats._parentID],
      references: [_pages_v_blocks_about.id],
      relationName: 'stats',
    }),
  }),
)
export const relations__pages_v_blocks_about_process = relations(
  _pages_v_blocks_about_process,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_about, {
      fields: [_pages_v_blocks_about_process._parentID],
      references: [_pages_v_blocks_about.id],
      relationName: 'process',
    }),
  }),
)
export const relations__pages_v_blocks_about = relations(
  _pages_v_blocks_about,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_about._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_about',
    }),
    image: one(media, {
      fields: [_pages_v_blocks_about.image],
      references: [media.id],
      relationName: 'image',
    }),
    badges: many(_pages_v_blocks_about_badges, {
      relationName: 'badges',
    }),
    stats: many(_pages_v_blocks_about_stats, {
      relationName: 'stats',
    }),
    process: many(_pages_v_blocks_about_process, {
      relationName: 'process',
    }),
    button_page: one(pages, {
      fields: [_pages_v_blocks_about.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
    button_post: one(posts, {
      fields: [_pages_v_blocks_about.button_post],
      references: [posts.id],
      relationName: 'button_post',
    }),
  }),
)
export const relations__pages_v_blocks_why_trust_reasons = relations(
  _pages_v_blocks_why_trust_reasons,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_why_trust, {
      fields: [_pages_v_blocks_why_trust_reasons._parentID],
      references: [_pages_v_blocks_why_trust.id],
      relationName: 'reasons',
    }),
  }),
)
export const relations__pages_v_blocks_why_trust_pillars = relations(
  _pages_v_blocks_why_trust_pillars,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_why_trust, {
      fields: [_pages_v_blocks_why_trust_pillars._parentID],
      references: [_pages_v_blocks_why_trust.id],
      relationName: 'pillars',
    }),
  }),
)
export const relations__pages_v_blocks_why_trust = relations(
  _pages_v_blocks_why_trust,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_why_trust._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_whyTrust',
    }),
    image: one(media, {
      fields: [_pages_v_blocks_why_trust.image],
      references: [media.id],
      relationName: 'image',
    }),
    reasons: many(_pages_v_blocks_why_trust_reasons, {
      relationName: 'reasons',
    }),
    pillars: many(_pages_v_blocks_why_trust_pillars, {
      relationName: 'pillars',
    }),
    button_page: one(pages, {
      fields: [_pages_v_blocks_why_trust.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
    button_post: one(posts, {
      fields: [_pages_v_blocks_why_trust.button_post],
      references: [posts.id],
      relationName: 'button_post',
    }),
  }),
)
export const relations__pages_v_blocks_projects_projects_stack = relations(
  _pages_v_blocks_projects_projects_stack,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_projects_projects, {
      fields: [_pages_v_blocks_projects_projects_stack._parentID],
      references: [_pages_v_blocks_projects_projects.id],
      relationName: 'stack',
    }),
  }),
)
export const relations__pages_v_blocks_projects_projects = relations(
  _pages_v_blocks_projects_projects,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_projects, {
      fields: [_pages_v_blocks_projects_projects._parentID],
      references: [_pages_v_blocks_projects.id],
      relationName: 'projects',
    }),
    image: one(media, {
      fields: [_pages_v_blocks_projects_projects.image],
      references: [media.id],
      relationName: 'image',
    }),
    stack: many(_pages_v_blocks_projects_projects_stack, {
      relationName: 'stack',
    }),
  }),
)
export const relations__pages_v_blocks_projects = relations(
  _pages_v_blocks_projects,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_projects._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_projects',
    }),
    projects: many(_pages_v_blocks_projects_projects, {
      relationName: 'projects',
    }),
    button_page: one(pages, {
      fields: [_pages_v_blocks_projects.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
    button_post: one(posts, {
      fields: [_pages_v_blocks_projects.button_post],
      references: [posts.id],
      relationName: 'button_post',
    }),
  }),
)
export const relations__pages_v_blocks_contact = relations(_pages_v_blocks_contact, ({ one }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_blocks_contact._parentID],
    references: [_pages_v.id],
    relationName: '_blocks_contact',
  }),
}))
export const relations__pages_v_blocks_rich_text = relations(
  _pages_v_blocks_rich_text,
  ({ one }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_rich_text._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_richText',
    }),
  }),
)
export const relations__pages_v_blocks_product_hero_key_benefits = relations(
  _pages_v_blocks_product_hero_key_benefits,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_product_hero, {
      fields: [_pages_v_blocks_product_hero_key_benefits._parentID],
      references: [_pages_v_blocks_product_hero.id],
      relationName: 'keyBenefits',
    }),
  }),
)
export const relations__pages_v_blocks_product_hero_cta_buttons = relations(
  _pages_v_blocks_product_hero_cta_buttons,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_product_hero, {
      fields: [_pages_v_blocks_product_hero_cta_buttons._parentID],
      references: [_pages_v_blocks_product_hero.id],
      relationName: 'ctaButtons',
    }),
    page: one(pages, {
      fields: [_pages_v_blocks_product_hero_cta_buttons.page],
      references: [pages.id],
      relationName: 'page',
    }),
    post: one(posts, {
      fields: [_pages_v_blocks_product_hero_cta_buttons.post],
      references: [posts.id],
      relationName: 'post',
    }),
  }),
)
export const relations__pages_v_blocks_product_hero = relations(
  _pages_v_blocks_product_hero,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_product_hero._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_productHero',
    }),
    backgroundImage: one(media, {
      fields: [_pages_v_blocks_product_hero.backgroundImage],
      references: [media.id],
      relationName: 'backgroundImage',
    }),
    keyBenefits: many(_pages_v_blocks_product_hero_key_benefits, {
      relationName: 'keyBenefits',
    }),
    ctaButtons: many(_pages_v_blocks_product_hero_cta_buttons, {
      relationName: 'ctaButtons',
    }),
  }),
)
export const relations__pages_v_blocks_key_features_features = relations(
  _pages_v_blocks_key_features_features,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_key_features, {
      fields: [_pages_v_blocks_key_features_features._parentID],
      references: [_pages_v_blocks_key_features.id],
      relationName: 'features',
    }),
  }),
)
export const relations__pages_v_blocks_key_features = relations(
  _pages_v_blocks_key_features,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_key_features._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_keyFeatures',
    }),
    features: many(_pages_v_blocks_key_features_features, {
      relationName: 'features',
    }),
  }),
)
export const relations__pages_v_blocks_product_gallery_images = relations(
  _pages_v_blocks_product_gallery_images,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_product_gallery, {
      fields: [_pages_v_blocks_product_gallery_images._parentID],
      references: [_pages_v_blocks_product_gallery.id],
      relationName: 'images',
    }),
    image: one(media, {
      fields: [_pages_v_blocks_product_gallery_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations__pages_v_blocks_product_gallery = relations(
  _pages_v_blocks_product_gallery,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_product_gallery._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_productGallery',
    }),
    images: many(_pages_v_blocks_product_gallery_images, {
      relationName: 'images',
    }),
  }),
)
export const relations__pages_v_blocks_specifications_specifications_items = relations(
  _pages_v_blocks_specifications_specifications_items,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_specifications_specifications, {
      fields: [_pages_v_blocks_specifications_specifications_items._parentID],
      references: [_pages_v_blocks_specifications_specifications.id],
      relationName: 'items',
    }),
  }),
)
export const relations__pages_v_blocks_specifications_specifications = relations(
  _pages_v_blocks_specifications_specifications,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_specifications, {
      fields: [_pages_v_blocks_specifications_specifications._parentID],
      references: [_pages_v_blocks_specifications.id],
      relationName: 'specifications',
    }),
    items: many(_pages_v_blocks_specifications_specifications_items, {
      relationName: 'items',
    }),
  }),
)
export const relations__pages_v_blocks_specifications_certification_badges = relations(
  _pages_v_blocks_specifications_certification_badges,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_specifications, {
      fields: [_pages_v_blocks_specifications_certification_badges._parentID],
      references: [_pages_v_blocks_specifications.id],
      relationName: 'certificationBadges',
    }),
  }),
)
export const relations__pages_v_blocks_specifications_additional_info_details = relations(
  _pages_v_blocks_specifications_additional_info_details,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_specifications, {
      fields: [_pages_v_blocks_specifications_additional_info_details._parentID],
      references: [_pages_v_blocks_specifications.id],
      relationName: 'additionalInfo_details',
    }),
  }),
)
export const relations__pages_v_blocks_specifications = relations(
  _pages_v_blocks_specifications,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_specifications._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_specifications',
    }),
    specifications: many(_pages_v_blocks_specifications_specifications, {
      relationName: 'specifications',
    }),
    certificationBadges: many(_pages_v_blocks_specifications_certification_badges, {
      relationName: 'certificationBadges',
    }),
    additionalInfo_details: many(_pages_v_blocks_specifications_additional_info_details, {
      relationName: 'additionalInfo_details',
    }),
  }),
)
export const relations__pages_v_blocks_applications_applications_details = relations(
  _pages_v_blocks_applications_applications_details,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_applications_applications, {
      fields: [_pages_v_blocks_applications_applications_details._parentID],
      references: [_pages_v_blocks_applications_applications.id],
      relationName: 'details',
    }),
  }),
)
export const relations__pages_v_blocks_applications_applications = relations(
  _pages_v_blocks_applications_applications,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_applications, {
      fields: [_pages_v_blocks_applications_applications._parentID],
      references: [_pages_v_blocks_applications.id],
      relationName: 'applications',
    }),
    details: many(_pages_v_blocks_applications_applications_details, {
      relationName: 'details',
    }),
  }),
)
export const relations__pages_v_blocks_applications_stats = relations(
  _pages_v_blocks_applications_stats,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_applications, {
      fields: [_pages_v_blocks_applications_stats._parentID],
      references: [_pages_v_blocks_applications.id],
      relationName: 'stats',
    }),
  }),
)
export const relations__pages_v_blocks_applications_case_study_stats = relations(
  _pages_v_blocks_applications_case_study_stats,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_applications, {
      fields: [_pages_v_blocks_applications_case_study_stats._parentID],
      references: [_pages_v_blocks_applications.id],
      relationName: 'caseStudy_stats',
    }),
  }),
)
export const relations__pages_v_blocks_applications = relations(
  _pages_v_blocks_applications,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_applications._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_applications',
    }),
    applications: many(_pages_v_blocks_applications_applications, {
      relationName: 'applications',
    }),
    stats: many(_pages_v_blocks_applications_stats, {
      relationName: 'stats',
    }),
    caseStudy_stats: many(_pages_v_blocks_applications_case_study_stats, {
      relationName: 'caseStudy_stats',
    }),
    caseStudy_image: one(media, {
      fields: [_pages_v_blocks_applications.caseStudy_image],
      references: [media.id],
      relationName: 'caseStudy_image',
    }),
  }),
)
export const relations__pages_v_blocks_technical_overview_process_steps = relations(
  _pages_v_blocks_technical_overview_process_steps,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_technical_overview, {
      fields: [_pages_v_blocks_technical_overview_process_steps._parentID],
      references: [_pages_v_blocks_technical_overview.id],
      relationName: 'processSteps',
    }),
  }),
)
export const relations__pages_v_blocks_technical_overview_technical_benefits = relations(
  _pages_v_blocks_technical_overview_technical_benefits,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_technical_overview, {
      fields: [_pages_v_blocks_technical_overview_technical_benefits._parentID],
      references: [_pages_v_blocks_technical_overview.id],
      relationName: 'technicalBenefits',
    }),
  }),
)
export const relations__pages_v_blocks_technical_overview = relations(
  _pages_v_blocks_technical_overview,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_technical_overview._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_technicalOverview',
    }),
    technicalImage: one(media, {
      fields: [_pages_v_blocks_technical_overview.technicalImage],
      references: [media.id],
      relationName: 'technicalImage',
    }),
    processSteps: many(_pages_v_blocks_technical_overview_process_steps, {
      relationName: 'processSteps',
    }),
    technicalBenefits: many(_pages_v_blocks_technical_overview_technical_benefits, {
      relationName: 'technicalBenefits',
    }),
  }),
)
export const relations__pages_v_blocks_benefits_comparison_benefits = relations(
  _pages_v_blocks_benefits_comparison_benefits,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_benefits_comparison, {
      fields: [_pages_v_blocks_benefits_comparison_benefits._parentID],
      references: [_pages_v_blocks_benefits_comparison.id],
      relationName: 'benefits',
    }),
  }),
)
export const relations__pages_v_blocks_benefits_comparison_summary_cards = relations(
  _pages_v_blocks_benefits_comparison_summary_cards,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_benefits_comparison, {
      fields: [_pages_v_blocks_benefits_comparison_summary_cards._parentID],
      references: [_pages_v_blocks_benefits_comparison.id],
      relationName: 'summaryCards',
    }),
  }),
)
export const relations__pages_v_blocks_benefits_comparison = relations(
  _pages_v_blocks_benefits_comparison,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_benefits_comparison._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_benefitsComparison',
    }),
    benefits: many(_pages_v_blocks_benefits_comparison_benefits, {
      relationName: 'benefits',
    }),
    summaryCards: many(_pages_v_blocks_benefits_comparison_summary_cards, {
      relationName: 'summaryCards',
    }),
  }),
)
export const relations__pages_v_blocks_product_c_t_a_stats = relations(
  _pages_v_blocks_product_c_t_a_stats,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_product_c_t_a, {
      fields: [_pages_v_blocks_product_c_t_a_stats._parentID],
      references: [_pages_v_blocks_product_c_t_a.id],
      relationName: 'stats',
    }),
  }),
)
export const relations__pages_v_blocks_product_c_t_a_why_us_points = relations(
  _pages_v_blocks_product_c_t_a_why_us_points,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_product_c_t_a, {
      fields: [_pages_v_blocks_product_c_t_a_why_us_points._parentID],
      references: [_pages_v_blocks_product_c_t_a.id],
      relationName: 'whyUsPoints',
    }),
  }),
)
export const relations__pages_v_blocks_product_c_t_a_application_options = relations(
  _pages_v_blocks_product_c_t_a_application_options,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_product_c_t_a, {
      fields: [_pages_v_blocks_product_c_t_a_application_options._parentID],
      references: [_pages_v_blocks_product_c_t_a.id],
      relationName: 'applicationOptions',
    }),
  }),
)
export const relations__pages_v_blocks_product_c_t_a = relations(
  _pages_v_blocks_product_c_t_a,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_product_c_t_a._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_productCTA',
    }),
    stats: many(_pages_v_blocks_product_c_t_a_stats, {
      relationName: 'stats',
    }),
    whyUsPoints: many(_pages_v_blocks_product_c_t_a_why_us_points, {
      relationName: 'whyUsPoints',
    }),
    heroImage: one(media, {
      fields: [_pages_v_blocks_product_c_t_a.heroImage],
      references: [media.id],
      relationName: 'heroImage',
    }),
    applicationOptions: many(_pages_v_blocks_product_c_t_a_application_options, {
      relationName: 'applicationOptions',
    }),
  }),
)
export const relations__pages_v_blocks_product_resources_resources = relations(
  _pages_v_blocks_product_resources_resources,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_product_resources, {
      fields: [_pages_v_blocks_product_resources_resources._parentID],
      references: [_pages_v_blocks_product_resources.id],
      relationName: 'resources',
    }),
  }),
)
export const relations__pages_v_blocks_product_resources_quick_access_items = relations(
  _pages_v_blocks_product_resources_quick_access_items,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_product_resources, {
      fields: [_pages_v_blocks_product_resources_quick_access_items._parentID],
      references: [_pages_v_blocks_product_resources.id],
      relationName: 'quickAccessItems',
    }),
  }),
)
export const relations__pages_v_blocks_product_resources = relations(
  _pages_v_blocks_product_resources,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_product_resources._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_productResources',
    }),
    resources: many(_pages_v_blocks_product_resources_resources, {
      relationName: 'resources',
    }),
    quickAccessItems: many(_pages_v_blocks_product_resources_quick_access_items, {
      relationName: 'quickAccessItems',
    }),
  }),
)
export const relations__pages_v_blocks_contact_hero_quick_contact_methods = relations(
  _pages_v_blocks_contact_hero_quick_contact_methods,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_contact_hero, {
      fields: [_pages_v_blocks_contact_hero_quick_contact_methods._parentID],
      references: [_pages_v_blocks_contact_hero.id],
      relationName: 'quickContactMethods',
    }),
  }),
)
export const relations__pages_v_blocks_contact_hero = relations(
  _pages_v_blocks_contact_hero,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_contact_hero._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_contactHero',
    }),
    quickContactMethods: many(_pages_v_blocks_contact_hero_quick_contact_methods, {
      relationName: 'quickContactMethods',
    }),
  }),
)
export const relations__pages_v_blocks_contact_form = relations(
  _pages_v_blocks_contact_form,
  ({ one }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_contact_form._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_contactForm',
    }),
  }),
)
export const relations__pages_v_blocks_contact_info_contact_methods = relations(
  _pages_v_blocks_contact_info_contact_methods,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_contact_info, {
      fields: [_pages_v_blocks_contact_info_contact_methods._parentID],
      references: [_pages_v_blocks_contact_info.id],
      relationName: 'contactMethods',
    }),
  }),
)
export const relations__pages_v_blocks_contact_info = relations(
  _pages_v_blocks_contact_info,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_contact_info._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_contactInfo',
    }),
    contactMethods: many(_pages_v_blocks_contact_info_contact_methods, {
      relationName: 'contactMethods',
    }),
  }),
)
export const relations__pages_v_blocks_contact_location = relations(
  _pages_v_blocks_contact_location,
  ({ one }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_contact_location._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_contactLocation',
    }),
  }),
)
export const relations__pages_v_blocks_contact_f_a_q_faqs = relations(
  _pages_v_blocks_contact_f_a_q_faqs,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_contact_f_a_q, {
      fields: [_pages_v_blocks_contact_f_a_q_faqs._parentID],
      references: [_pages_v_blocks_contact_f_a_q.id],
      relationName: 'faqs',
    }),
  }),
)
export const relations__pages_v_blocks_contact_f_a_q = relations(
  _pages_v_blocks_contact_f_a_q,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_contact_f_a_q._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_contactFAQ',
    }),
    faqs: many(_pages_v_blocks_contact_f_a_q_faqs, {
      relationName: 'faqs',
    }),
  }),
)
export const relations__pages_v_blocks_universal_hero_benefits = relations(
  _pages_v_blocks_universal_hero_benefits,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_universal_hero, {
      fields: [_pages_v_blocks_universal_hero_benefits._parentID],
      references: [_pages_v_blocks_universal_hero.id],
      relationName: 'benefits',
    }),
  }),
)
export const relations__pages_v_blocks_universal_hero_trust_indicators = relations(
  _pages_v_blocks_universal_hero_trust_indicators,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_universal_hero, {
      fields: [_pages_v_blocks_universal_hero_trust_indicators._parentID],
      references: [_pages_v_blocks_universal_hero.id],
      relationName: 'trustIndicators',
    }),
  }),
)
export const relations__pages_v_blocks_universal_hero_stats = relations(
  _pages_v_blocks_universal_hero_stats,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_universal_hero, {
      fields: [_pages_v_blocks_universal_hero_stats._parentID],
      references: [_pages_v_blocks_universal_hero.id],
      relationName: 'stats',
    }),
  }),
)
export const relations__pages_v_blocks_universal_hero_contact_methods = relations(
  _pages_v_blocks_universal_hero_contact_methods,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_universal_hero, {
      fields: [_pages_v_blocks_universal_hero_contact_methods._parentID],
      references: [_pages_v_blocks_universal_hero.id],
      relationName: 'contactMethods',
    }),
    link_page: one(pages, {
      fields: [_pages_v_blocks_universal_hero_contact_methods.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [_pages_v_blocks_universal_hero_contact_methods.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
  }),
)
export const relations__pages_v_blocks_universal_hero = relations(
  _pages_v_blocks_universal_hero,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_universal_hero._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_universalHero',
    }),
    benefits: many(_pages_v_blocks_universal_hero_benefits, {
      relationName: 'benefits',
    }),
    primaryCTA_page: one(pages, {
      fields: [_pages_v_blocks_universal_hero.primaryCTA_page],
      references: [pages.id],
      relationName: 'primaryCTA_page',
    }),
    primaryCTA_post: one(posts, {
      fields: [_pages_v_blocks_universal_hero.primaryCTA_post],
      references: [posts.id],
      relationName: 'primaryCTA_post',
    }),
    secondaryCTA_page: one(pages, {
      fields: [_pages_v_blocks_universal_hero.secondaryCTA_page],
      references: [pages.id],
      relationName: 'secondaryCTA_page',
    }),
    secondaryCTA_post: one(posts, {
      fields: [_pages_v_blocks_universal_hero.secondaryCTA_post],
      references: [posts.id],
      relationName: 'secondaryCTA_post',
    }),
    trustIndicators: many(_pages_v_blocks_universal_hero_trust_indicators, {
      relationName: 'trustIndicators',
    }),
    stats: many(_pages_v_blocks_universal_hero_stats, {
      relationName: 'stats',
    }),
    contactMethods: many(_pages_v_blocks_universal_hero_contact_methods, {
      relationName: 'contactMethods',
    }),
  }),
)
export const relations__pages_v_blocks_universal_c_t_a_benefits = relations(
  _pages_v_blocks_universal_c_t_a_benefits,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_universal_c_t_a, {
      fields: [_pages_v_blocks_universal_c_t_a_benefits._parentID],
      references: [_pages_v_blocks_universal_c_t_a.id],
      relationName: 'benefits',
    }),
  }),
)
export const relations__pages_v_blocks_universal_c_t_a_stats = relations(
  _pages_v_blocks_universal_c_t_a_stats,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_universal_c_t_a, {
      fields: [_pages_v_blocks_universal_c_t_a_stats._parentID],
      references: [_pages_v_blocks_universal_c_t_a.id],
      relationName: 'stats',
    }),
  }),
)
export const relations__pages_v_blocks_universal_c_t_a = relations(
  _pages_v_blocks_universal_c_t_a,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_universal_c_t_a._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_universalCTA',
    }),
    primaryCTA_page: one(pages, {
      fields: [_pages_v_blocks_universal_c_t_a.primaryCTA_page],
      references: [pages.id],
      relationName: 'primaryCTA_page',
    }),
    primaryCTA_post: one(posts, {
      fields: [_pages_v_blocks_universal_c_t_a.primaryCTA_post],
      references: [posts.id],
      relationName: 'primaryCTA_post',
    }),
    secondaryCTA_page: one(pages, {
      fields: [_pages_v_blocks_universal_c_t_a.secondaryCTA_page],
      references: [pages.id],
      relationName: 'secondaryCTA_page',
    }),
    secondaryCTA_post: one(posts, {
      fields: [_pages_v_blocks_universal_c_t_a.secondaryCTA_post],
      references: [posts.id],
      relationName: 'secondaryCTA_post',
    }),
    benefits: many(_pages_v_blocks_universal_c_t_a_benefits, {
      relationName: 'benefits',
    }),
    stats: many(_pages_v_blocks_universal_c_t_a_stats, {
      relationName: 'stats',
    }),
  }),
)
export const relations__pages_v_blocks_feature_grid_features_details = relations(
  _pages_v_blocks_feature_grid_features_details,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_feature_grid_features, {
      fields: [_pages_v_blocks_feature_grid_features_details._parentID],
      references: [_pages_v_blocks_feature_grid_features.id],
      relationName: 'details',
    }),
  }),
)
export const relations__pages_v_blocks_feature_grid_features = relations(
  _pages_v_blocks_feature_grid_features,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_feature_grid, {
      fields: [_pages_v_blocks_feature_grid_features._parentID],
      references: [_pages_v_blocks_feature_grid.id],
      relationName: 'features',
    }),
    link_page: one(pages, {
      fields: [_pages_v_blocks_feature_grid_features.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [_pages_v_blocks_feature_grid_features.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
    details: many(_pages_v_blocks_feature_grid_features_details, {
      relationName: 'details',
    }),
  }),
)
export const relations__pages_v_blocks_feature_grid = relations(
  _pages_v_blocks_feature_grid,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_feature_grid._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_featureGrid',
    }),
    features: many(_pages_v_blocks_feature_grid_features, {
      relationName: 'features',
    }),
  }),
)
export const relations__pages_v_blocks_content_grid_items_applications = relations(
  _pages_v_blocks_content_grid_items_applications,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_content_grid_items, {
      fields: [_pages_v_blocks_content_grid_items_applications._parentID],
      references: [_pages_v_blocks_content_grid_items.id],
      relationName: 'applications',
    }),
  }),
)
export const relations__pages_v_blocks_content_grid_items = relations(
  _pages_v_blocks_content_grid_items,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_content_grid, {
      fields: [_pages_v_blocks_content_grid_items._parentID],
      references: [_pages_v_blocks_content_grid.id],
      relationName: 'items',
    }),
    link_page: one(pages, {
      fields: [_pages_v_blocks_content_grid_items.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [_pages_v_blocks_content_grid_items.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
    applications: many(_pages_v_blocks_content_grid_items_applications, {
      relationName: 'applications',
    }),
  }),
)
export const relations__pages_v_blocks_content_grid = relations(
  _pages_v_blocks_content_grid,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_content_grid._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_contentGrid',
    }),
    items: many(_pages_v_blocks_content_grid_items, {
      relationName: 'items',
    }),
  }),
)
export const relations__pages_v_blocks_stats_section_stats = relations(
  _pages_v_blocks_stats_section_stats,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_stats_section, {
      fields: [_pages_v_blocks_stats_section_stats._parentID],
      references: [_pages_v_blocks_stats_section.id],
      relationName: 'stats',
    }),
  }),
)
export const relations__pages_v_blocks_stats_section = relations(
  _pages_v_blocks_stats_section,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_stats_section._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_statsSection',
    }),
    stats: many(_pages_v_blocks_stats_section_stats, {
      relationName: 'stats',
    }),
  }),
)
export const relations__pages_v_blocks_process_steps_steps_details = relations(
  _pages_v_blocks_process_steps_steps_details,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_process_steps_steps, {
      fields: [_pages_v_blocks_process_steps_steps_details._parentID],
      references: [_pages_v_blocks_process_steps_steps.id],
      relationName: 'details',
    }),
  }),
)
export const relations__pages_v_blocks_process_steps_steps = relations(
  _pages_v_blocks_process_steps_steps,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_process_steps, {
      fields: [_pages_v_blocks_process_steps_steps._parentID],
      references: [_pages_v_blocks_process_steps.id],
      relationName: 'steps',
    }),
    details: many(_pages_v_blocks_process_steps_steps_details, {
      relationName: 'details',
    }),
  }),
)
export const relations__pages_v_blocks_process_steps = relations(
  _pages_v_blocks_process_steps,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_process_steps._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_processSteps',
    }),
    steps: many(_pages_v_blocks_process_steps_steps, {
      relationName: 'steps',
    }),
  }),
)
export const relations__pages_v_blocks_content_cards_cards_tags = relations(
  _pages_v_blocks_content_cards_cards_tags,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_content_cards_cards, {
      fields: [_pages_v_blocks_content_cards_cards_tags._parentID],
      references: [_pages_v_blocks_content_cards_cards.id],
      relationName: 'tags',
    }),
  }),
)
export const relations__pages_v_blocks_content_cards_cards = relations(
  _pages_v_blocks_content_cards_cards,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_content_cards, {
      fields: [_pages_v_blocks_content_cards_cards._parentID],
      references: [_pages_v_blocks_content_cards.id],
      relationName: 'cards',
    }),
    link_page: one(pages, {
      fields: [_pages_v_blocks_content_cards_cards.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [_pages_v_blocks_content_cards_cards.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
    tags: many(_pages_v_blocks_content_cards_cards_tags, {
      relationName: 'tags',
    }),
  }),
)
export const relations__pages_v_blocks_content_cards = relations(
  _pages_v_blocks_content_cards,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_content_cards._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_contentCards',
    }),
    cards: many(_pages_v_blocks_content_cards_cards, {
      relationName: 'cards',
    }),
  }),
)
export const relations__pages_v_blocks_contact_section_benefits = relations(
  _pages_v_blocks_contact_section_benefits,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_contact_section, {
      fields: [_pages_v_blocks_contact_section_benefits._parentID],
      references: [_pages_v_blocks_contact_section.id],
      relationName: 'benefits',
    }),
  }),
)
export const relations__pages_v_blocks_contact_section = relations(
  _pages_v_blocks_contact_section,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_contact_section._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_contactSection',
    }),
    benefits: many(_pages_v_blocks_contact_section_benefits, {
      relationName: 'benefits',
    }),
  }),
)
export const relations__pages_v_blocks_comparison_table_items = relations(
  _pages_v_blocks_comparison_table_items,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_comparison_table, {
      fields: [_pages_v_blocks_comparison_table_items._parentID],
      references: [_pages_v_blocks_comparison_table.id],
      relationName: 'items',
    }),
  }),
)
export const relations__pages_v_blocks_comparison_table = relations(
  _pages_v_blocks_comparison_table,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_comparison_table._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_comparisonTable',
    }),
    items: many(_pages_v_blocks_comparison_table_items, {
      relationName: 'items',
    }),
  }),
)
export const relations__pages_v_blocks_simple_page_breadcrumbs = relations(
  _pages_v_blocks_simple_page_breadcrumbs,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_simple_page, {
      fields: [_pages_v_blocks_simple_page_breadcrumbs._parentID],
      references: [_pages_v_blocks_simple_page.id],
      relationName: 'breadcrumbs',
    }),
    link_page: one(pages, {
      fields: [_pages_v_blocks_simple_page_breadcrumbs.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [_pages_v_blocks_simple_page_breadcrumbs.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
  }),
)
export const relations__pages_v_blocks_simple_page_links = relations(
  _pages_v_blocks_simple_page_links,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_simple_page, {
      fields: [_pages_v_blocks_simple_page_links._parentID],
      references: [_pages_v_blocks_simple_page.id],
      relationName: 'links',
    }),
    link_page: one(pages, {
      fields: [_pages_v_blocks_simple_page_links.link_page],
      references: [pages.id],
      relationName: 'link_page',
    }),
    link_post: one(posts, {
      fields: [_pages_v_blocks_simple_page_links.link_post],
      references: [posts.id],
      relationName: 'link_post',
    }),
  }),
)
export const relations__pages_v_blocks_simple_page = relations(
  _pages_v_blocks_simple_page,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_simple_page._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_simplePage',
    }),
    breadcrumbs: many(_pages_v_blocks_simple_page_breadcrumbs, {
      relationName: 'breadcrumbs',
    }),
    links: many(_pages_v_blocks_simple_page_links, {
      relationName: 'links',
    }),
  }),
)
export const relations__pages_v_blocks_brand_showcase_brands = relations(
  _pages_v_blocks_brand_showcase_brands,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_brand_showcase, {
      fields: [_pages_v_blocks_brand_showcase_brands._parentID],
      references: [_pages_v_blocks_brand_showcase.id],
      relationName: 'brands',
    }),
    logo: one(media, {
      fields: [_pages_v_blocks_brand_showcase_brands.logo],
      references: [media.id],
      relationName: 'logo',
    }),
  }),
)
export const relations__pages_v_blocks_brand_showcase = relations(
  _pages_v_blocks_brand_showcase,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_brand_showcase._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_brandShowcase',
    }),
    brands: many(_pages_v_blocks_brand_showcase_brands, {
      relationName: 'brands',
    }),
  }),
)
export const relations__pages_v_blocks_technical_content_process_steps = relations(
  _pages_v_blocks_technical_content_process_steps,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_technical_content, {
      fields: [_pages_v_blocks_technical_content_process_steps._parentID],
      references: [_pages_v_blocks_technical_content.id],
      relationName: 'processSteps',
    }),
  }),
)
export const relations__pages_v_blocks_technical_content_specifications_items = relations(
  _pages_v_blocks_technical_content_specifications_items,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_technical_content_specifications, {
      fields: [_pages_v_blocks_technical_content_specifications_items._parentID],
      references: [_pages_v_blocks_technical_content_specifications.id],
      relationName: 'items',
    }),
  }),
)
export const relations__pages_v_blocks_technical_content_specifications = relations(
  _pages_v_blocks_technical_content_specifications,
  ({ one, many }) => ({
    _parentID: one(_pages_v_blocks_technical_content, {
      fields: [_pages_v_blocks_technical_content_specifications._parentID],
      references: [_pages_v_blocks_technical_content.id],
      relationName: 'specifications',
    }),
    items: many(_pages_v_blocks_technical_content_specifications_items, {
      relationName: 'items',
    }),
  }),
)
export const relations__pages_v_blocks_technical_content = relations(
  _pages_v_blocks_technical_content,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_technical_content._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_technicalContent',
    }),
    processSteps: many(_pages_v_blocks_technical_content_process_steps, {
      relationName: 'processSteps',
    }),
    specifications: many(_pages_v_blocks_technical_content_specifications, {
      relationName: 'specifications',
    }),
  }),
)
export const relations__pages_v_blocks_resource_gallery_resources = relations(
  _pages_v_blocks_resource_gallery_resources,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_resource_gallery, {
      fields: [_pages_v_blocks_resource_gallery_resources._parentID],
      references: [_pages_v_blocks_resource_gallery.id],
      relationName: 'resources',
    }),
  }),
)
export const relations__pages_v_blocks_resource_gallery_gallery_images = relations(
  _pages_v_blocks_resource_gallery_gallery_images,
  ({ one }) => ({
    _parentID: one(_pages_v_blocks_resource_gallery, {
      fields: [_pages_v_blocks_resource_gallery_gallery_images._parentID],
      references: [_pages_v_blocks_resource_gallery.id],
      relationName: 'galleryImages',
    }),
    image: one(media, {
      fields: [_pages_v_blocks_resource_gallery_gallery_images.image],
      references: [media.id],
      relationName: 'image',
    }),
  }),
)
export const relations__pages_v_blocks_resource_gallery = relations(
  _pages_v_blocks_resource_gallery,
  ({ one, many }) => ({
    _parentID: one(_pages_v, {
      fields: [_pages_v_blocks_resource_gallery._parentID],
      references: [_pages_v.id],
      relationName: '_blocks_resourceGallery',
    }),
    resources: many(_pages_v_blocks_resource_gallery_resources, {
      relationName: 'resources',
    }),
    galleryImages: many(_pages_v_blocks_resource_gallery_gallery_images, {
      relationName: 'galleryImages',
    }),
  }),
)
export const relations__pages_v_locales = relations(_pages_v_locales, ({ one }) => ({
  _parentID: one(_pages_v, {
    fields: [_pages_v_locales._parentID],
    references: [_pages_v.id],
    relationName: '_locales',
  }),
}))
export const relations__pages_v = relations(_pages_v, ({ one, many }) => ({
  parent: one(pages, {
    fields: [_pages_v.parent],
    references: [pages.id],
    relationName: 'parent',
  }),
  _blocks_hero: many(_pages_v_blocks_hero, {
    relationName: '_blocks_hero',
  }),
  _blocks_logoBelt: many(_pages_v_blocks_logo_belt, {
    relationName: '_blocks_logoBelt',
  }),
  _blocks_services: many(_pages_v_blocks_services, {
    relationName: '_blocks_services',
  }),
  _blocks_about: many(_pages_v_blocks_about, {
    relationName: '_blocks_about',
  }),
  _blocks_whyTrust: many(_pages_v_blocks_why_trust, {
    relationName: '_blocks_whyTrust',
  }),
  _blocks_projects: many(_pages_v_blocks_projects, {
    relationName: '_blocks_projects',
  }),
  _blocks_contact: many(_pages_v_blocks_contact, {
    relationName: '_blocks_contact',
  }),
  _blocks_richText: many(_pages_v_blocks_rich_text, {
    relationName: '_blocks_richText',
  }),
  _blocks_productHero: many(_pages_v_blocks_product_hero, {
    relationName: '_blocks_productHero',
  }),
  _blocks_keyFeatures: many(_pages_v_blocks_key_features, {
    relationName: '_blocks_keyFeatures',
  }),
  _blocks_productGallery: many(_pages_v_blocks_product_gallery, {
    relationName: '_blocks_productGallery',
  }),
  _blocks_specifications: many(_pages_v_blocks_specifications, {
    relationName: '_blocks_specifications',
  }),
  _blocks_applications: many(_pages_v_blocks_applications, {
    relationName: '_blocks_applications',
  }),
  _blocks_technicalOverview: many(_pages_v_blocks_technical_overview, {
    relationName: '_blocks_technicalOverview',
  }),
  _blocks_benefitsComparison: many(_pages_v_blocks_benefits_comparison, {
    relationName: '_blocks_benefitsComparison',
  }),
  _blocks_productCTA: many(_pages_v_blocks_product_c_t_a, {
    relationName: '_blocks_productCTA',
  }),
  _blocks_productResources: many(_pages_v_blocks_product_resources, {
    relationName: '_blocks_productResources',
  }),
  _blocks_contactHero: many(_pages_v_blocks_contact_hero, {
    relationName: '_blocks_contactHero',
  }),
  _blocks_contactForm: many(_pages_v_blocks_contact_form, {
    relationName: '_blocks_contactForm',
  }),
  _blocks_contactInfo: many(_pages_v_blocks_contact_info, {
    relationName: '_blocks_contactInfo',
  }),
  _blocks_contactLocation: many(_pages_v_blocks_contact_location, {
    relationName: '_blocks_contactLocation',
  }),
  _blocks_contactFAQ: many(_pages_v_blocks_contact_f_a_q, {
    relationName: '_blocks_contactFAQ',
  }),
  _blocks_universalHero: many(_pages_v_blocks_universal_hero, {
    relationName: '_blocks_universalHero',
  }),
  _blocks_universalCTA: many(_pages_v_blocks_universal_c_t_a, {
    relationName: '_blocks_universalCTA',
  }),
  _blocks_featureGrid: many(_pages_v_blocks_feature_grid, {
    relationName: '_blocks_featureGrid',
  }),
  _blocks_contentGrid: many(_pages_v_blocks_content_grid, {
    relationName: '_blocks_contentGrid',
  }),
  _blocks_statsSection: many(_pages_v_blocks_stats_section, {
    relationName: '_blocks_statsSection',
  }),
  _blocks_processSteps: many(_pages_v_blocks_process_steps, {
    relationName: '_blocks_processSteps',
  }),
  _blocks_contentCards: many(_pages_v_blocks_content_cards, {
    relationName: '_blocks_contentCards',
  }),
  _blocks_contactSection: many(_pages_v_blocks_contact_section, {
    relationName: '_blocks_contactSection',
  }),
  _blocks_comparisonTable: many(_pages_v_blocks_comparison_table, {
    relationName: '_blocks_comparisonTable',
  }),
  _blocks_simplePage: many(_pages_v_blocks_simple_page, {
    relationName: '_blocks_simplePage',
  }),
  _blocks_brandShowcase: many(_pages_v_blocks_brand_showcase, {
    relationName: '_blocks_brandShowcase',
  }),
  _blocks_technicalContent: many(_pages_v_blocks_technical_content, {
    relationName: '_blocks_technicalContent',
  }),
  _blocks_resourceGallery: many(_pages_v_blocks_resource_gallery, {
    relationName: '_blocks_resourceGallery',
  }),
  _locales: many(_pages_v_locales, {
    relationName: '_locales',
  }),
}))
export const relations_posts_tags = relations(posts_tags, ({ one }) => ({
  _parentID: one(posts, {
    fields: [posts_tags._parentID],
    references: [posts.id],
    relationName: 'tags',
  }),
}))
export const relations_posts_locales = relations(posts_locales, ({ one }) => ({
  _parentID: one(posts, {
    fields: [posts_locales._parentID],
    references: [posts.id],
    relationName: '_locales',
  }),
}))
export const relations_posts_rels = relations(posts_rels, ({ one }) => ({
  parent: one(posts, {
    fields: [posts_rels.parent],
    references: [posts.id],
    relationName: '_rels',
  }),
  categoriesID: one(categories, {
    fields: [posts_rels.categoriesID],
    references: [categories.id],
    relationName: 'categories',
  }),
}))
export const relations_posts = relations(posts, ({ one, many }) => ({
  featuredImage: one(media, {
    fields: [posts.featuredImage],
    references: [media.id],
    relationName: 'featuredImage',
  }),
  tags: many(posts_tags, {
    relationName: 'tags',
  }),
  author: one(users, {
    fields: [posts.author],
    references: [users.id],
    relationName: 'author',
  }),
  _locales: many(posts_locales, {
    relationName: '_locales',
  }),
  _rels: many(posts_rels, {
    relationName: '_rels',
  }),
}))
export const relations__posts_v_version_tags = relations(_posts_v_version_tags, ({ one }) => ({
  _parentID: one(_posts_v, {
    fields: [_posts_v_version_tags._parentID],
    references: [_posts_v.id],
    relationName: 'version_tags',
  }),
}))
export const relations__posts_v_locales = relations(_posts_v_locales, ({ one }) => ({
  _parentID: one(_posts_v, {
    fields: [_posts_v_locales._parentID],
    references: [_posts_v.id],
    relationName: '_locales',
  }),
}))
export const relations__posts_v_rels = relations(_posts_v_rels, ({ one }) => ({
  parent: one(_posts_v, {
    fields: [_posts_v_rels.parent],
    references: [_posts_v.id],
    relationName: '_rels',
  }),
  categoriesID: one(categories, {
    fields: [_posts_v_rels.categoriesID],
    references: [categories.id],
    relationName: 'categories',
  }),
}))
export const relations__posts_v = relations(_posts_v, ({ one, many }) => ({
  parent: one(posts, {
    fields: [_posts_v.parent],
    references: [posts.id],
    relationName: 'parent',
  }),
  version_featuredImage: one(media, {
    fields: [_posts_v.version_featuredImage],
    references: [media.id],
    relationName: 'version_featuredImage',
  }),
  version_tags: many(_posts_v_version_tags, {
    relationName: 'version_tags',
  }),
  version_author: one(users, {
    fields: [_posts_v.version_author],
    references: [users.id],
    relationName: 'version_author',
  }),
  _locales: many(_posts_v_locales, {
    relationName: '_locales',
  }),
  _rels: many(_posts_v_rels, {
    relationName: '_rels',
  }),
}))
export const relations_categories_locales = relations(categories_locales, ({ one }) => ({
  _parentID: one(categories, {
    fields: [categories_locales._parentID],
    references: [categories.id],
    relationName: '_locales',
  }),
}))
export const relations_categories = relations(categories, ({ one, many }) => ({
  parent: one(categories, {
    fields: [categories.parent],
    references: [categories.id],
    relationName: 'parent',
  }),
  _locales: many(categories_locales, {
    relationName: '_locales',
  }),
}))
export const relations_contact_submissions_emails_sent = relations(
  contact_submissions_emails_sent,
  ({ one }) => ({
    _parentID: one(contact_submissions, {
      fields: [contact_submissions_emails_sent._parentID],
      references: [contact_submissions.id],
      relationName: 'emailsSent',
    }),
  }),
)
export const relations_contact_submissions_texts = relations(
  contact_submissions_texts,
  ({ one }) => ({
    parent: one(contact_submissions, {
      fields: [contact_submissions_texts.parent],
      references: [contact_submissions.id],
      relationName: '_texts',
    }),
  }),
)
export const relations_contact_submissions = relations(contact_submissions, ({ one, many }) => ({
  assignedTo: one(users, {
    fields: [contact_submissions.assignedTo],
    references: [users.id],
    relationName: 'assignedTo',
  }),
  emailsSent: many(contact_submissions_emails_sent, {
    relationName: 'emailsSent',
  }),
  _texts: many(contact_submissions_texts, {
    relationName: '_texts',
  }),
}))
export const relations_payload_locked_documents_rels = relations(
  payload_locked_documents_rels,
  ({ one }) => ({
    parent: one(payload_locked_documents, {
      fields: [payload_locked_documents_rels.parent],
      references: [payload_locked_documents.id],
      relationName: '_rels',
    }),
    usersID: one(users, {
      fields: [payload_locked_documents_rels.usersID],
      references: [users.id],
      relationName: 'users',
    }),
    mediaID: one(media, {
      fields: [payload_locked_documents_rels.mediaID],
      references: [media.id],
      relationName: 'media',
    }),
    pagesID: one(pages, {
      fields: [payload_locked_documents_rels.pagesID],
      references: [pages.id],
      relationName: 'pages',
    }),
    postsID: one(posts, {
      fields: [payload_locked_documents_rels.postsID],
      references: [posts.id],
      relationName: 'posts',
    }),
    categoriesID: one(categories, {
      fields: [payload_locked_documents_rels.categoriesID],
      references: [categories.id],
      relationName: 'categories',
    }),
    'contact-submissionsID': one(contact_submissions, {
      fields: [payload_locked_documents_rels['contact-submissionsID']],
      references: [contact_submissions.id],
      relationName: 'contact-submissions',
    }),
  }),
)
export const relations_payload_locked_documents = relations(
  payload_locked_documents,
  ({ many }) => ({
    _rels: many(payload_locked_documents_rels, {
      relationName: '_rels',
    }),
  }),
)
export const relations_payload_preferences_rels = relations(
  payload_preferences_rels,
  ({ one }) => ({
    parent: one(payload_preferences, {
      fields: [payload_preferences_rels.parent],
      references: [payload_preferences.id],
      relationName: '_rels',
    }),
    usersID: one(users, {
      fields: [payload_preferences_rels.usersID],
      references: [users.id],
      relationName: 'users',
    }),
  }),
)
export const relations_payload_preferences = relations(payload_preferences, ({ many }) => ({
  _rels: many(payload_preferences_rels, {
    relationName: '_rels',
  }),
}))
export const relations_payload_migrations = relations(payload_migrations, () => ({}))
export const relations_header_navigation_dropdown_items_locales = relations(
  header_navigation_dropdown_items_locales,
  ({ one }) => ({
    _parentID: one(header_navigation_dropdown_items, {
      fields: [header_navigation_dropdown_items_locales._parentID],
      references: [header_navigation_dropdown_items.id],
      relationName: '_locales',
    }),
  }),
)
export const relations_header_navigation_dropdown_items = relations(
  header_navigation_dropdown_items,
  ({ one, many }) => ({
    _parentID: one(header_navigation, {
      fields: [header_navigation_dropdown_items._parentID],
      references: [header_navigation.id],
      relationName: 'dropdownItems',
    }),
    _locales: many(header_navigation_dropdown_items_locales, {
      relationName: '_locales',
    }),
    page: one(pages, {
      fields: [header_navigation_dropdown_items.page],
      references: [pages.id],
      relationName: 'page',
    }),
    post: one(posts, {
      fields: [header_navigation_dropdown_items.post],
      references: [posts.id],
      relationName: 'post',
    }),
    category: one(categories, {
      fields: [header_navigation_dropdown_items.category],
      references: [categories.id],
      relationName: 'category',
    }),
  }),
)
export const relations_header_navigation_locales = relations(
  header_navigation_locales,
  ({ one }) => ({
    _parentID: one(header_navigation, {
      fields: [header_navigation_locales._parentID],
      references: [header_navigation.id],
      relationName: '_locales',
    }),
  }),
)
export const relations_header_navigation = relations(header_navigation, ({ one, many }) => ({
  _parentID: one(header, {
    fields: [header_navigation._parentID],
    references: [header.id],
    relationName: 'navigation',
  }),
  _locales: many(header_navigation_locales, {
    relationName: '_locales',
  }),
  page: one(pages, {
    fields: [header_navigation.page],
    references: [pages.id],
    relationName: 'page',
  }),
  post: one(posts, {
    fields: [header_navigation.post],
    references: [posts.id],
    relationName: 'post',
  }),
  category: one(categories, {
    fields: [header_navigation.category],
    references: [categories.id],
    relationName: 'category',
  }),
  dropdownItems: many(header_navigation_dropdown_items, {
    relationName: 'dropdownItems',
  }),
}))
export const relations_header_locales = relations(header_locales, ({ one }) => ({
  _parentID: one(header, {
    fields: [header_locales._parentID],
    references: [header.id],
    relationName: '_locales',
  }),
}))
export const relations_header_rels = relations(header_rels, ({ one }) => ({
  parent: one(header, {
    fields: [header_rels.parent],
    references: [header.id],
    relationName: '_rels',
  }),
  categoriesID: one(categories, {
    fields: [header_rels.categoriesID],
    references: [categories.id],
    relationName: 'categories',
  }),
}))
export const relations_header = relations(header, ({ one, many }) => ({
  logo: one(media, {
    fields: [header.logo],
    references: [media.id],
    relationName: 'logo',
  }),
  navigation: many(header_navigation, {
    relationName: 'navigation',
  }),
  _locales: many(header_locales, {
    relationName: '_locales',
  }),
  _rels: many(header_rels, {
    relationName: '_rels',
  }),
}))
export const relations_footer_company_info_address = relations(
  footer_company_info_address,
  ({ one }) => ({
    _parentID: one(footer, {
      fields: [footer_company_info_address._parentID],
      references: [footer.id],
      relationName: 'companyInfo_address',
    }),
  }),
)
export const relations_footer_footer_columns_links_locales = relations(
  footer_footer_columns_links_locales,
  ({ one }) => ({
    _parentID: one(footer_footer_columns_links, {
      fields: [footer_footer_columns_links_locales._parentID],
      references: [footer_footer_columns_links.id],
      relationName: '_locales',
    }),
  }),
)
export const relations_footer_footer_columns_links = relations(
  footer_footer_columns_links,
  ({ one, many }) => ({
    _parentID: one(footer_footer_columns, {
      fields: [footer_footer_columns_links._parentID],
      references: [footer_footer_columns.id],
      relationName: 'links',
    }),
    _locales: many(footer_footer_columns_links_locales, {
      relationName: '_locales',
    }),
    page: one(pages, {
      fields: [footer_footer_columns_links.page],
      references: [pages.id],
      relationName: 'page',
    }),
  }),
)
export const relations_footer_footer_columns_locales = relations(
  footer_footer_columns_locales,
  ({ one }) => ({
    _parentID: one(footer_footer_columns, {
      fields: [footer_footer_columns_locales._parentID],
      references: [footer_footer_columns.id],
      relationName: '_locales',
    }),
  }),
)
export const relations_footer_footer_columns = relations(
  footer_footer_columns,
  ({ one, many }) => ({
    _parentID: one(footer, {
      fields: [footer_footer_columns._parentID],
      references: [footer.id],
      relationName: 'footerColumns',
    }),
    _locales: many(footer_footer_columns_locales, {
      relationName: '_locales',
    }),
    links: many(footer_footer_columns_links, {
      relationName: 'links',
    }),
  }),
)
export const relations_footer_bottom_links = relations(footer_bottom_links, ({ one }) => ({
  _parentID: one(footer, {
    fields: [footer_bottom_links._parentID],
    references: [footer.id],
    relationName: 'bottomLinks',
  }),
  page: one(pages, {
    fields: [footer_bottom_links.page],
    references: [pages.id],
    relationName: 'page',
  }),
}))
export const relations_footer_locales = relations(footer_locales, ({ one }) => ({
  _parentID: one(footer, {
    fields: [footer_locales._parentID],
    references: [footer.id],
    relationName: '_locales',
  }),
}))
export const relations_footer = relations(footer, ({ one, many }) => ({
  logo: one(media, {
    fields: [footer.logo],
    references: [media.id],
    relationName: 'logo',
  }),
  companyInfo_address: many(footer_company_info_address, {
    relationName: 'companyInfo_address',
  }),
  footerColumns: many(footer_footer_columns, {
    relationName: 'footerColumns',
  }),
  bottomLinks: many(footer_bottom_links, {
    relationName: 'bottomLinks',
  }),
  _locales: many(footer_locales, {
    relationName: '_locales',
  }),
}))
export const relations_seo = relations(seo, ({ one }) => ({
  defaultImage: one(media, {
    fields: [seo.defaultImage],
    references: [media.id],
    relationName: 'defaultImage',
  }),
  favicon: one(media, {
    fields: [seo.favicon],
    references: [media.id],
    relationName: 'favicon',
  }),
}))
export const relations_homepage_blocks_hero_cta_buttons = relations(
  homepage_blocks_hero_cta_buttons,
  ({ one }) => ({
    _parentID: one(homepage_blocks_hero, {
      fields: [homepage_blocks_hero_cta_buttons._parentID],
      references: [homepage_blocks_hero.id],
      relationName: 'ctaButtons',
    }),
    page: one(pages, {
      fields: [homepage_blocks_hero_cta_buttons.page],
      references: [pages.id],
      relationName: 'page',
    }),
  }),
)
export const relations_homepage_blocks_hero = relations(homepage_blocks_hero, ({ one, many }) => ({
  _parentID: one(homepage, {
    fields: [homepage_blocks_hero._parentID],
    references: [homepage.id],
    relationName: '_blocks_hero',
  }),
  backgroundImage: one(media, {
    fields: [homepage_blocks_hero.backgroundImage],
    references: [media.id],
    relationName: 'backgroundImage',
  }),
  ctaButtons: many(homepage_blocks_hero_cta_buttons, {
    relationName: 'ctaButtons',
  }),
}))
export const relations_homepage_blocks_logo_belt_logos = relations(
  homepage_blocks_logo_belt_logos,
  ({ one }) => ({
    _parentID: one(homepage_blocks_logo_belt, {
      fields: [homepage_blocks_logo_belt_logos._parentID],
      references: [homepage_blocks_logo_belt.id],
      relationName: 'logos',
    }),
    logo: one(media, {
      fields: [homepage_blocks_logo_belt_logos.logo],
      references: [media.id],
      relationName: 'logo',
    }),
  }),
)
export const relations_homepage_blocks_logo_belt = relations(
  homepage_blocks_logo_belt,
  ({ one, many }) => ({
    _parentID: one(homepage, {
      fields: [homepage_blocks_logo_belt._parentID],
      references: [homepage.id],
      relationName: '_blocks_logoBelt',
    }),
    logos: many(homepage_blocks_logo_belt_logos, {
      relationName: 'logos',
    }),
  }),
)
export const relations_homepage_blocks_services_services_features = relations(
  homepage_blocks_services_services_features,
  ({ one }) => ({
    _parentID: one(homepage_blocks_services_services, {
      fields: [homepage_blocks_services_services_features._parentID],
      references: [homepage_blocks_services_services.id],
      relationName: 'features',
    }),
  }),
)
export const relations_homepage_blocks_services_services = relations(
  homepage_blocks_services_services,
  ({ one, many }) => ({
    _parentID: one(homepage_blocks_services, {
      fields: [homepage_blocks_services_services._parentID],
      references: [homepage_blocks_services.id],
      relationName: 'services',
    }),
    image: one(media, {
      fields: [homepage_blocks_services_services.image],
      references: [media.id],
      relationName: 'image',
    }),
    features: many(homepage_blocks_services_services_features, {
      relationName: 'features',
    }),
    button_page: one(pages, {
      fields: [homepage_blocks_services_services.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
  }),
)
export const relations_homepage_blocks_services = relations(
  homepage_blocks_services,
  ({ one, many }) => ({
    _parentID: one(homepage, {
      fields: [homepage_blocks_services._parentID],
      references: [homepage.id],
      relationName: '_blocks_services',
    }),
    services: many(homepage_blocks_services_services, {
      relationName: 'services',
    }),
  }),
)
export const relations_homepage_blocks_about_badges = relations(
  homepage_blocks_about_badges,
  ({ one }) => ({
    _parentID: one(homepage_blocks_about, {
      fields: [homepage_blocks_about_badges._parentID],
      references: [homepage_blocks_about.id],
      relationName: 'badges',
    }),
  }),
)
export const relations_homepage_blocks_about_stats = relations(
  homepage_blocks_about_stats,
  ({ one }) => ({
    _parentID: one(homepage_blocks_about, {
      fields: [homepage_blocks_about_stats._parentID],
      references: [homepage_blocks_about.id],
      relationName: 'stats',
    }),
  }),
)
export const relations_homepage_blocks_about_process = relations(
  homepage_blocks_about_process,
  ({ one }) => ({
    _parentID: one(homepage_blocks_about, {
      fields: [homepage_blocks_about_process._parentID],
      references: [homepage_blocks_about.id],
      relationName: 'process',
    }),
  }),
)
export const relations_homepage_blocks_about = relations(
  homepage_blocks_about,
  ({ one, many }) => ({
    _parentID: one(homepage, {
      fields: [homepage_blocks_about._parentID],
      references: [homepage.id],
      relationName: '_blocks_about',
    }),
    image: one(media, {
      fields: [homepage_blocks_about.image],
      references: [media.id],
      relationName: 'image',
    }),
    badges: many(homepage_blocks_about_badges, {
      relationName: 'badges',
    }),
    stats: many(homepage_blocks_about_stats, {
      relationName: 'stats',
    }),
    process: many(homepage_blocks_about_process, {
      relationName: 'process',
    }),
    button_page: one(pages, {
      fields: [homepage_blocks_about.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
  }),
)
export const relations_homepage_blocks_why_trust_reasons = relations(
  homepage_blocks_why_trust_reasons,
  ({ one }) => ({
    _parentID: one(homepage_blocks_why_trust, {
      fields: [homepage_blocks_why_trust_reasons._parentID],
      references: [homepage_blocks_why_trust.id],
      relationName: 'reasons',
    }),
  }),
)
export const relations_homepage_blocks_why_trust_pillars = relations(
  homepage_blocks_why_trust_pillars,
  ({ one }) => ({
    _parentID: one(homepage_blocks_why_trust, {
      fields: [homepage_blocks_why_trust_pillars._parentID],
      references: [homepage_blocks_why_trust.id],
      relationName: 'pillars',
    }),
  }),
)
export const relations_homepage_blocks_why_trust = relations(
  homepage_blocks_why_trust,
  ({ one, many }) => ({
    _parentID: one(homepage, {
      fields: [homepage_blocks_why_trust._parentID],
      references: [homepage.id],
      relationName: '_blocks_whyTrust',
    }),
    image: one(media, {
      fields: [homepage_blocks_why_trust.image],
      references: [media.id],
      relationName: 'image',
    }),
    reasons: many(homepage_blocks_why_trust_reasons, {
      relationName: 'reasons',
    }),
    pillars: many(homepage_blocks_why_trust_pillars, {
      relationName: 'pillars',
    }),
    button_page: one(pages, {
      fields: [homepage_blocks_why_trust.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
  }),
)
export const relations_homepage_blocks_projects_projects_stack = relations(
  homepage_blocks_projects_projects_stack,
  ({ one }) => ({
    _parentID: one(homepage_blocks_projects_projects, {
      fields: [homepage_blocks_projects_projects_stack._parentID],
      references: [homepage_blocks_projects_projects.id],
      relationName: 'stack',
    }),
  }),
)
export const relations_homepage_blocks_projects_projects = relations(
  homepage_blocks_projects_projects,
  ({ one, many }) => ({
    _parentID: one(homepage_blocks_projects, {
      fields: [homepage_blocks_projects_projects._parentID],
      references: [homepage_blocks_projects.id],
      relationName: 'projects',
    }),
    image: one(media, {
      fields: [homepage_blocks_projects_projects.image],
      references: [media.id],
      relationName: 'image',
    }),
    stack: many(homepage_blocks_projects_projects_stack, {
      relationName: 'stack',
    }),
  }),
)
export const relations_homepage_blocks_projects = relations(
  homepage_blocks_projects,
  ({ one, many }) => ({
    _parentID: one(homepage, {
      fields: [homepage_blocks_projects._parentID],
      references: [homepage.id],
      relationName: '_blocks_projects',
    }),
    projects: many(homepage_blocks_projects_projects, {
      relationName: 'projects',
    }),
    button_page: one(pages, {
      fields: [homepage_blocks_projects.button_page],
      references: [pages.id],
      relationName: 'button_page',
    }),
  }),
)
export const relations_homepage_blocks_contact = relations(homepage_blocks_contact, ({ one }) => ({
  _parentID: one(homepage, {
    fields: [homepage_blocks_contact._parentID],
    references: [homepage.id],
    relationName: '_blocks_contact',
  }),
}))
export const relations_homepage = relations(homepage, ({ many }) => ({
  _blocks_hero: many(homepage_blocks_hero, {
    relationName: '_blocks_hero',
  }),
  _blocks_logoBelt: many(homepage_blocks_logo_belt, {
    relationName: '_blocks_logoBelt',
  }),
  _blocks_services: many(homepage_blocks_services, {
    relationName: '_blocks_services',
  }),
  _blocks_about: many(homepage_blocks_about, {
    relationName: '_blocks_about',
  }),
  _blocks_whyTrust: many(homepage_blocks_why_trust, {
    relationName: '_blocks_whyTrust',
  }),
  _blocks_projects: many(homepage_blocks_projects, {
    relationName: '_blocks_projects',
  }),
  _blocks_contact: many(homepage_blocks_contact, {
    relationName: '_blocks_contact',
  }),
}))
export const relations_email_admin = relations(email_admin, () => ({}))

type DatabaseSchema = {
  enum__locales: typeof enum__locales
  enum_pages_blocks_hero_cta_buttons_type: typeof enum_pages_blocks_hero_cta_buttons_type
  enum_pages_blocks_hero_cta_buttons_variant: typeof enum_pages_blocks_hero_cta_buttons_variant
  enum_pages_blocks_services_services_button_type: typeof enum_pages_blocks_services_services_button_type
  enum_pages_blocks_about_button_type: typeof enum_pages_blocks_about_button_type
  enum_pages_blocks_why_trust_pillars_icon: typeof enum_pages_blocks_why_trust_pillars_icon
  enum_pages_blocks_why_trust_button_type: typeof enum_pages_blocks_why_trust_button_type
  enum_pages_blocks_projects_button_type: typeof enum_pages_blocks_projects_button_type
  enum_pages_blocks_product_hero_cta_buttons_type: typeof enum_pages_blocks_product_hero_cta_buttons_type
  enum_pages_blocks_product_hero_cta_buttons_variant: typeof enum_pages_blocks_product_hero_cta_buttons_variant
  enum_pages_blocks_key_features_features_icon: typeof enum_pages_blocks_key_features_features_icon
  enum_pages_blocks_applications_applications_icon: typeof enum_pages_blocks_applications_applications_icon
  enum_pages_blocks_benefits_comparison_summary_cards_icon: typeof enum_pages_blocks_benefits_comparison_summary_cards_icon
  enum_pages_blocks_contact_hero_quick_contact_methods_type: typeof enum_pages_blocks_contact_hero_quick_contact_methods_type
  enum_pages_blocks_universal_hero_contact_methods_link_type: typeof enum_pages_blocks_universal_hero_contact_methods_link_type
  enum_pages_blocks_universal_hero_variant: typeof enum_pages_blocks_universal_hero_variant
  enum_pages_blocks_universal_hero_benefits_layout: typeof enum_pages_blocks_universal_hero_benefits_layout
  enum_pages_blocks_universal_hero_primary_c_t_a_type: typeof enum_pages_blocks_universal_hero_primary_c_t_a_type
  enum_pages_blocks_universal_hero_primary_c_t_a_variant: typeof enum_pages_blocks_universal_hero_primary_c_t_a_variant
  enum_pages_blocks_universal_hero_secondary_c_t_a_type: typeof enum_pages_blocks_universal_hero_secondary_c_t_a_type
  enum_pages_blocks_universal_hero_secondary_c_t_a_variant: typeof enum_pages_blocks_universal_hero_secondary_c_t_a_variant
  enum_pages_blocks_universal_hero_background_style: typeof enum_pages_blocks_universal_hero_background_style
  enum_pages_blocks_universal_hero_content_alignment: typeof enum_pages_blocks_universal_hero_content_alignment
  enum_pages_blocks_universal_c_t_a_variant: typeof enum_pages_blocks_universal_c_t_a_variant
  enum_pages_blocks_universal_c_t_a_primary_c_t_a_type: typeof enum_pages_blocks_universal_c_t_a_primary_c_t_a_type
  enum_pages_blocks_universal_c_t_a_primary_c_t_a_variant: typeof enum_pages_blocks_universal_c_t_a_primary_c_t_a_variant
  enum_pages_blocks_universal_c_t_a_secondary_c_t_a_type: typeof enum_pages_blocks_universal_c_t_a_secondary_c_t_a_type
  enum_pages_blocks_universal_c_t_a_secondary_c_t_a_variant: typeof enum_pages_blocks_universal_c_t_a_secondary_c_t_a_variant
  enum_pages_blocks_universal_c_t_a_background_style: typeof enum_pages_blocks_universal_c_t_a_background_style
  enum_pages_blocks_feature_grid_features_link_type: typeof enum_pages_blocks_feature_grid_features_link_type
  enum_pages_blocks_feature_grid_variant: typeof enum_pages_blocks_feature_grid_variant
  enum_pages_blocks_feature_grid_columns: typeof enum_pages_blocks_feature_grid_columns
  enum_pages_blocks_feature_grid_card_style: typeof enum_pages_blocks_feature_grid_card_style
  enum_pages_blocks_feature_grid_background_style: typeof enum_pages_blocks_feature_grid_background_style
  enum_pages_blocks_content_grid_items_link_type: typeof enum_pages_blocks_content_grid_items_link_type
  enum_pages_blocks_content_grid_variant: typeof enum_pages_blocks_content_grid_variant
  enum_pages_blocks_content_grid_columns: typeof enum_pages_blocks_content_grid_columns
  enum_pages_blocks_content_grid_background_style: typeof enum_pages_blocks_content_grid_background_style
  enum_pages_blocks_stats_section_variant: typeof enum_pages_blocks_stats_section_variant
  enum_pages_blocks_stats_section_columns: typeof enum_pages_blocks_stats_section_columns
  enum_pages_blocks_stats_section_background_style: typeof enum_pages_blocks_stats_section_background_style
  enum_pages_blocks_process_steps_variant: typeof enum_pages_blocks_process_steps_variant
  enum_pages_blocks_process_steps_background_style: typeof enum_pages_blocks_process_steps_background_style
  enum_pages_blocks_content_cards_cards_link_type: typeof enum_pages_blocks_content_cards_cards_link_type
  enum_pages_blocks_content_cards_variant: typeof enum_pages_blocks_content_cards_variant
  enum_pages_blocks_content_cards_columns: typeof enum_pages_blocks_content_cards_columns
  enum_pages_blocks_content_cards_background_style: typeof enum_pages_blocks_content_cards_background_style
  enum_pages_blocks_contact_section_variant: typeof enum_pages_blocks_contact_section_variant
  enum_pages_blocks_contact_section_background_style: typeof enum_pages_blocks_contact_section_background_style
  enum_pages_blocks_comparison_table_items_primary: typeof enum_pages_blocks_comparison_table_items_primary
  enum_pages_blocks_comparison_table_items_secondary: typeof enum_pages_blocks_comparison_table_items_secondary
  enum_pages_blocks_comparison_table_background_style: typeof enum_pages_blocks_comparison_table_background_style
  enum_pages_blocks_simple_page_breadcrumbs_link_type: typeof enum_pages_blocks_simple_page_breadcrumbs_link_type
  enum_pages_blocks_simple_page_links_link_type: typeof enum_pages_blocks_simple_page_links_link_type
  enum_pages_blocks_simple_page_variant: typeof enum_pages_blocks_simple_page_variant
  enum_pages_blocks_brand_showcase_variant: typeof enum_pages_blocks_brand_showcase_variant
  enum_pages_blocks_brand_showcase_background_style: typeof enum_pages_blocks_brand_showcase_background_style
  enum_pages_blocks_technical_content_variant: typeof enum_pages_blocks_technical_content_variant
  enum_pages_blocks_technical_content_background_style: typeof enum_pages_blocks_technical_content_background_style
  enum_pages_blocks_resource_gallery_variant: typeof enum_pages_blocks_resource_gallery_variant
  enum_pages_blocks_resource_gallery_background_style: typeof enum_pages_blocks_resource_gallery_background_style
  enum_pages_status: typeof enum_pages_status
  enum__pages_v_blocks_hero_cta_buttons_type: typeof enum__pages_v_blocks_hero_cta_buttons_type
  enum__pages_v_blocks_hero_cta_buttons_variant: typeof enum__pages_v_blocks_hero_cta_buttons_variant
  enum__pages_v_blocks_services_services_button_type: typeof enum__pages_v_blocks_services_services_button_type
  enum__pages_v_blocks_about_button_type: typeof enum__pages_v_blocks_about_button_type
  enum__pages_v_blocks_why_trust_pillars_icon: typeof enum__pages_v_blocks_why_trust_pillars_icon
  enum__pages_v_blocks_why_trust_button_type: typeof enum__pages_v_blocks_why_trust_button_type
  enum__pages_v_blocks_projects_button_type: typeof enum__pages_v_blocks_projects_button_type
  enum__pages_v_blocks_product_hero_cta_buttons_type: typeof enum__pages_v_blocks_product_hero_cta_buttons_type
  enum__pages_v_blocks_product_hero_cta_buttons_variant: typeof enum__pages_v_blocks_product_hero_cta_buttons_variant
  enum__pages_v_blocks_key_features_features_icon: typeof enum__pages_v_blocks_key_features_features_icon
  enum__pages_v_blocks_applications_applications_icon: typeof enum__pages_v_blocks_applications_applications_icon
  enum__pages_v_blocks_benefits_comparison_summary_cards_icon: typeof enum__pages_v_blocks_benefits_comparison_summary_cards_icon
  enum__pages_v_blocks_contact_hero_quick_contact_methods_type: typeof enum__pages_v_blocks_contact_hero_quick_contact_methods_type
  enum__pages_v_blocks_universal_hero_contact_methods_link_type: typeof enum__pages_v_blocks_universal_hero_contact_methods_link_type
  enum__pages_v_blocks_universal_hero_variant: typeof enum__pages_v_blocks_universal_hero_variant
  enum__pages_v_blocks_universal_hero_benefits_layout: typeof enum__pages_v_blocks_universal_hero_benefits_layout
  enum__pages_v_blocks_universal_hero_primary_c_t_a_type: typeof enum__pages_v_blocks_universal_hero_primary_c_t_a_type
  enum__pages_v_blocks_universal_hero_primary_c_t_a_variant: typeof enum__pages_v_blocks_universal_hero_primary_c_t_a_variant
  enum__pages_v_blocks_universal_hero_secondary_c_t_a_type: typeof enum__pages_v_blocks_universal_hero_secondary_c_t_a_type
  enum__pages_v_blocks_universal_hero_secondary_c_t_a_variant: typeof enum__pages_v_blocks_universal_hero_secondary_c_t_a_variant
  enum__pages_v_blocks_universal_hero_background_style: typeof enum__pages_v_blocks_universal_hero_background_style
  enum__pages_v_blocks_universal_hero_content_alignment: typeof enum__pages_v_blocks_universal_hero_content_alignment
  enum__pages_v_blocks_universal_c_t_a_variant: typeof enum__pages_v_blocks_universal_c_t_a_variant
  enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_type: typeof enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_type
  enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_variant: typeof enum__pages_v_blocks_universal_c_t_a_primary_c_t_a_variant
  enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_type: typeof enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_type
  enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_variant: typeof enum__pages_v_blocks_universal_c_t_a_secondary_c_t_a_variant
  enum__pages_v_blocks_universal_c_t_a_background_style: typeof enum__pages_v_blocks_universal_c_t_a_background_style
  enum__pages_v_blocks_feature_grid_features_link_type: typeof enum__pages_v_blocks_feature_grid_features_link_type
  enum__pages_v_blocks_feature_grid_variant: typeof enum__pages_v_blocks_feature_grid_variant
  enum__pages_v_blocks_feature_grid_columns: typeof enum__pages_v_blocks_feature_grid_columns
  enum__pages_v_blocks_feature_grid_card_style: typeof enum__pages_v_blocks_feature_grid_card_style
  enum__pages_v_blocks_feature_grid_background_style: typeof enum__pages_v_blocks_feature_grid_background_style
  enum__pages_v_blocks_content_grid_items_link_type: typeof enum__pages_v_blocks_content_grid_items_link_type
  enum__pages_v_blocks_content_grid_variant: typeof enum__pages_v_blocks_content_grid_variant
  enum__pages_v_blocks_content_grid_columns: typeof enum__pages_v_blocks_content_grid_columns
  enum__pages_v_blocks_content_grid_background_style: typeof enum__pages_v_blocks_content_grid_background_style
  enum__pages_v_blocks_stats_section_variant: typeof enum__pages_v_blocks_stats_section_variant
  enum__pages_v_blocks_stats_section_columns: typeof enum__pages_v_blocks_stats_section_columns
  enum__pages_v_blocks_stats_section_background_style: typeof enum__pages_v_blocks_stats_section_background_style
  enum__pages_v_blocks_process_steps_variant: typeof enum__pages_v_blocks_process_steps_variant
  enum__pages_v_blocks_process_steps_background_style: typeof enum__pages_v_blocks_process_steps_background_style
  enum__pages_v_blocks_content_cards_cards_link_type: typeof enum__pages_v_blocks_content_cards_cards_link_type
  enum__pages_v_blocks_content_cards_variant: typeof enum__pages_v_blocks_content_cards_variant
  enum__pages_v_blocks_content_cards_columns: typeof enum__pages_v_blocks_content_cards_columns
  enum__pages_v_blocks_content_cards_background_style: typeof enum__pages_v_blocks_content_cards_background_style
  enum__pages_v_blocks_contact_section_variant: typeof enum__pages_v_blocks_contact_section_variant
  enum__pages_v_blocks_contact_section_background_style: typeof enum__pages_v_blocks_contact_section_background_style
  enum__pages_v_blocks_comparison_table_items_primary: typeof enum__pages_v_blocks_comparison_table_items_primary
  enum__pages_v_blocks_comparison_table_items_secondary: typeof enum__pages_v_blocks_comparison_table_items_secondary
  enum__pages_v_blocks_comparison_table_background_style: typeof enum__pages_v_blocks_comparison_table_background_style
  enum__pages_v_blocks_simple_page_breadcrumbs_link_type: typeof enum__pages_v_blocks_simple_page_breadcrumbs_link_type
  enum__pages_v_blocks_simple_page_links_link_type: typeof enum__pages_v_blocks_simple_page_links_link_type
  enum__pages_v_blocks_simple_page_variant: typeof enum__pages_v_blocks_simple_page_variant
  enum__pages_v_blocks_brand_showcase_variant: typeof enum__pages_v_blocks_brand_showcase_variant
  enum__pages_v_blocks_brand_showcase_background_style: typeof enum__pages_v_blocks_brand_showcase_background_style
  enum__pages_v_blocks_technical_content_variant: typeof enum__pages_v_blocks_technical_content_variant
  enum__pages_v_blocks_technical_content_background_style: typeof enum__pages_v_blocks_technical_content_background_style
  enum__pages_v_blocks_resource_gallery_variant: typeof enum__pages_v_blocks_resource_gallery_variant
  enum__pages_v_blocks_resource_gallery_background_style: typeof enum__pages_v_blocks_resource_gallery_background_style
  enum__pages_v_version_status: typeof enum__pages_v_version_status
  enum__pages_v_published_locale: typeof enum__pages_v_published_locale
  enum_posts_status: typeof enum_posts_status
  enum__posts_v_version_status: typeof enum__posts_v_version_status
  enum__posts_v_published_locale: typeof enum__posts_v_published_locale
  enum_contact_submissions_emails_sent_type: typeof enum_contact_submissions_emails_sent_type
  enum_contact_submissions_status: typeof enum_contact_submissions_status
  enum_contact_submissions_priority: typeof enum_contact_submissions_priority
  enum_contact_submissions_source: typeof enum_contact_submissions_source
  enum_header_navigation_dropdown_items_type: typeof enum_header_navigation_dropdown_items_type
  enum_header_navigation_nav_type: typeof enum_header_navigation_nav_type
  enum_header_navigation_type: typeof enum_header_navigation_type
  enum_header_navigation_dropdown_style: typeof enum_header_navigation_dropdown_style
  enum_header_categories_nav_display_type: typeof enum_header_categories_nav_display_type
  enum_footer_footer_columns_links_type: typeof enum_footer_footer_columns_links_type
  enum_footer_bottom_links_type: typeof enum_footer_bottom_links_type
  enum_homepage_blocks_hero_cta_buttons_type: typeof enum_homepage_blocks_hero_cta_buttons_type
  enum_homepage_blocks_hero_cta_buttons_variant: typeof enum_homepage_blocks_hero_cta_buttons_variant
  enum_homepage_blocks_services_services_button_type: typeof enum_homepage_blocks_services_services_button_type
  enum_homepage_blocks_about_button_type: typeof enum_homepage_blocks_about_button_type
  enum_homepage_blocks_why_trust_pillars_icon: typeof enum_homepage_blocks_why_trust_pillars_icon
  enum_homepage_blocks_why_trust_button_type: typeof enum_homepage_blocks_why_trust_button_type
  enum_homepage_blocks_projects_button_type: typeof enum_homepage_blocks_projects_button_type
  users_sessions: typeof users_sessions
  users: typeof users
  media: typeof media
  pages_blocks_hero_cta_buttons: typeof pages_blocks_hero_cta_buttons
  pages_blocks_hero: typeof pages_blocks_hero
  pages_blocks_logo_belt_logos: typeof pages_blocks_logo_belt_logos
  pages_blocks_logo_belt: typeof pages_blocks_logo_belt
  pages_blocks_services_services_features: typeof pages_blocks_services_services_features
  pages_blocks_services_services: typeof pages_blocks_services_services
  pages_blocks_services: typeof pages_blocks_services
  pages_blocks_about_badges: typeof pages_blocks_about_badges
  pages_blocks_about_stats: typeof pages_blocks_about_stats
  pages_blocks_about_process: typeof pages_blocks_about_process
  pages_blocks_about: typeof pages_blocks_about
  pages_blocks_why_trust_reasons: typeof pages_blocks_why_trust_reasons
  pages_blocks_why_trust_pillars: typeof pages_blocks_why_trust_pillars
  pages_blocks_why_trust: typeof pages_blocks_why_trust
  pages_blocks_projects_projects_stack: typeof pages_blocks_projects_projects_stack
  pages_blocks_projects_projects: typeof pages_blocks_projects_projects
  pages_blocks_projects: typeof pages_blocks_projects
  pages_blocks_contact: typeof pages_blocks_contact
  pages_blocks_rich_text: typeof pages_blocks_rich_text
  pages_blocks_product_hero_key_benefits: typeof pages_blocks_product_hero_key_benefits
  pages_blocks_product_hero_cta_buttons: typeof pages_blocks_product_hero_cta_buttons
  pages_blocks_product_hero: typeof pages_blocks_product_hero
  pages_blocks_key_features_features: typeof pages_blocks_key_features_features
  pages_blocks_key_features: typeof pages_blocks_key_features
  pages_blocks_product_gallery_images: typeof pages_blocks_product_gallery_images
  pages_blocks_product_gallery: typeof pages_blocks_product_gallery
  pages_blocks_specifications_specifications_items: typeof pages_blocks_specifications_specifications_items
  pages_blocks_specifications_specifications: typeof pages_blocks_specifications_specifications
  pages_blocks_specifications_certification_badges: typeof pages_blocks_specifications_certification_badges
  pages_blocks_specifications_additional_info_details: typeof pages_blocks_specifications_additional_info_details
  pages_blocks_specifications: typeof pages_blocks_specifications
  pages_blocks_applications_applications_details: typeof pages_blocks_applications_applications_details
  pages_blocks_applications_applications: typeof pages_blocks_applications_applications
  pages_blocks_applications_stats: typeof pages_blocks_applications_stats
  pages_blocks_applications_case_study_stats: typeof pages_blocks_applications_case_study_stats
  pages_blocks_applications: typeof pages_blocks_applications
  pages_blocks_technical_overview_process_steps: typeof pages_blocks_technical_overview_process_steps
  pages_blocks_technical_overview_technical_benefits: typeof pages_blocks_technical_overview_technical_benefits
  pages_blocks_technical_overview: typeof pages_blocks_technical_overview
  pages_blocks_benefits_comparison_benefits: typeof pages_blocks_benefits_comparison_benefits
  pages_blocks_benefits_comparison_summary_cards: typeof pages_blocks_benefits_comparison_summary_cards
  pages_blocks_benefits_comparison: typeof pages_blocks_benefits_comparison
  pages_blocks_product_c_t_a_stats: typeof pages_blocks_product_c_t_a_stats
  pages_blocks_product_c_t_a_why_us_points: typeof pages_blocks_product_c_t_a_why_us_points
  pages_blocks_product_c_t_a_application_options: typeof pages_blocks_product_c_t_a_application_options
  pages_blocks_product_c_t_a: typeof pages_blocks_product_c_t_a
  pages_blocks_product_resources_resources: typeof pages_blocks_product_resources_resources
  pages_blocks_product_resources_quick_access_items: typeof pages_blocks_product_resources_quick_access_items
  pages_blocks_product_resources: typeof pages_blocks_product_resources
  pages_blocks_contact_hero_quick_contact_methods: typeof pages_blocks_contact_hero_quick_contact_methods
  pages_blocks_contact_hero: typeof pages_blocks_contact_hero
  pages_blocks_contact_form: typeof pages_blocks_contact_form
  pages_blocks_contact_info_contact_methods: typeof pages_blocks_contact_info_contact_methods
  pages_blocks_contact_info: typeof pages_blocks_contact_info
  pages_blocks_contact_location: typeof pages_blocks_contact_location
  pages_blocks_contact_f_a_q_faqs: typeof pages_blocks_contact_f_a_q_faqs
  pages_blocks_contact_f_a_q: typeof pages_blocks_contact_f_a_q
  pages_blocks_universal_hero_benefits: typeof pages_blocks_universal_hero_benefits
  pages_blocks_universal_hero_trust_indicators: typeof pages_blocks_universal_hero_trust_indicators
  pages_blocks_universal_hero_stats: typeof pages_blocks_universal_hero_stats
  pages_blocks_universal_hero_contact_methods: typeof pages_blocks_universal_hero_contact_methods
  pages_blocks_universal_hero: typeof pages_blocks_universal_hero
  pages_blocks_universal_c_t_a_benefits: typeof pages_blocks_universal_c_t_a_benefits
  pages_blocks_universal_c_t_a_stats: typeof pages_blocks_universal_c_t_a_stats
  pages_blocks_universal_c_t_a: typeof pages_blocks_universal_c_t_a
  pages_blocks_feature_grid_features_details: typeof pages_blocks_feature_grid_features_details
  pages_blocks_feature_grid_features: typeof pages_blocks_feature_grid_features
  pages_blocks_feature_grid: typeof pages_blocks_feature_grid
  pages_blocks_content_grid_items_applications: typeof pages_blocks_content_grid_items_applications
  pages_blocks_content_grid_items: typeof pages_blocks_content_grid_items
  pages_blocks_content_grid: typeof pages_blocks_content_grid
  pages_blocks_stats_section_stats: typeof pages_blocks_stats_section_stats
  pages_blocks_stats_section: typeof pages_blocks_stats_section
  pages_blocks_process_steps_steps_details: typeof pages_blocks_process_steps_steps_details
  pages_blocks_process_steps_steps: typeof pages_blocks_process_steps_steps
  pages_blocks_process_steps: typeof pages_blocks_process_steps
  pages_blocks_content_cards_cards_tags: typeof pages_blocks_content_cards_cards_tags
  pages_blocks_content_cards_cards: typeof pages_blocks_content_cards_cards
  pages_blocks_content_cards: typeof pages_blocks_content_cards
  pages_blocks_contact_section_benefits: typeof pages_blocks_contact_section_benefits
  pages_blocks_contact_section: typeof pages_blocks_contact_section
  pages_blocks_comparison_table_items: typeof pages_blocks_comparison_table_items
  pages_blocks_comparison_table: typeof pages_blocks_comparison_table
  pages_blocks_simple_page_breadcrumbs: typeof pages_blocks_simple_page_breadcrumbs
  pages_blocks_simple_page_links: typeof pages_blocks_simple_page_links
  pages_blocks_simple_page: typeof pages_blocks_simple_page
  pages_blocks_brand_showcase_brands: typeof pages_blocks_brand_showcase_brands
  pages_blocks_brand_showcase: typeof pages_blocks_brand_showcase
  pages_blocks_technical_content_process_steps: typeof pages_blocks_technical_content_process_steps
  pages_blocks_technical_content_specifications_items: typeof pages_blocks_technical_content_specifications_items
  pages_blocks_technical_content_specifications: typeof pages_blocks_technical_content_specifications
  pages_blocks_technical_content: typeof pages_blocks_technical_content
  pages_blocks_resource_gallery_resources: typeof pages_blocks_resource_gallery_resources
  pages_blocks_resource_gallery_gallery_images: typeof pages_blocks_resource_gallery_gallery_images
  pages_blocks_resource_gallery: typeof pages_blocks_resource_gallery
  pages: typeof pages
  pages_locales: typeof pages_locales
  _pages_v_blocks_hero_cta_buttons: typeof _pages_v_blocks_hero_cta_buttons
  _pages_v_blocks_hero: typeof _pages_v_blocks_hero
  _pages_v_blocks_logo_belt_logos: typeof _pages_v_blocks_logo_belt_logos
  _pages_v_blocks_logo_belt: typeof _pages_v_blocks_logo_belt
  _pages_v_blocks_services_services_features: typeof _pages_v_blocks_services_services_features
  _pages_v_blocks_services_services: typeof _pages_v_blocks_services_services
  _pages_v_blocks_services: typeof _pages_v_blocks_services
  _pages_v_blocks_about_badges: typeof _pages_v_blocks_about_badges
  _pages_v_blocks_about_stats: typeof _pages_v_blocks_about_stats
  _pages_v_blocks_about_process: typeof _pages_v_blocks_about_process
  _pages_v_blocks_about: typeof _pages_v_blocks_about
  _pages_v_blocks_why_trust_reasons: typeof _pages_v_blocks_why_trust_reasons
  _pages_v_blocks_why_trust_pillars: typeof _pages_v_blocks_why_trust_pillars
  _pages_v_blocks_why_trust: typeof _pages_v_blocks_why_trust
  _pages_v_blocks_projects_projects_stack: typeof _pages_v_blocks_projects_projects_stack
  _pages_v_blocks_projects_projects: typeof _pages_v_blocks_projects_projects
  _pages_v_blocks_projects: typeof _pages_v_blocks_projects
  _pages_v_blocks_contact: typeof _pages_v_blocks_contact
  _pages_v_blocks_rich_text: typeof _pages_v_blocks_rich_text
  _pages_v_blocks_product_hero_key_benefits: typeof _pages_v_blocks_product_hero_key_benefits
  _pages_v_blocks_product_hero_cta_buttons: typeof _pages_v_blocks_product_hero_cta_buttons
  _pages_v_blocks_product_hero: typeof _pages_v_blocks_product_hero
  _pages_v_blocks_key_features_features: typeof _pages_v_blocks_key_features_features
  _pages_v_blocks_key_features: typeof _pages_v_blocks_key_features
  _pages_v_blocks_product_gallery_images: typeof _pages_v_blocks_product_gallery_images
  _pages_v_blocks_product_gallery: typeof _pages_v_blocks_product_gallery
  _pages_v_blocks_specifications_specifications_items: typeof _pages_v_blocks_specifications_specifications_items
  _pages_v_blocks_specifications_specifications: typeof _pages_v_blocks_specifications_specifications
  _pages_v_blocks_specifications_certification_badges: typeof _pages_v_blocks_specifications_certification_badges
  _pages_v_blocks_specifications_additional_info_details: typeof _pages_v_blocks_specifications_additional_info_details
  _pages_v_blocks_specifications: typeof _pages_v_blocks_specifications
  _pages_v_blocks_applications_applications_details: typeof _pages_v_blocks_applications_applications_details
  _pages_v_blocks_applications_applications: typeof _pages_v_blocks_applications_applications
  _pages_v_blocks_applications_stats: typeof _pages_v_blocks_applications_stats
  _pages_v_blocks_applications_case_study_stats: typeof _pages_v_blocks_applications_case_study_stats
  _pages_v_blocks_applications: typeof _pages_v_blocks_applications
  _pages_v_blocks_technical_overview_process_steps: typeof _pages_v_blocks_technical_overview_process_steps
  _pages_v_blocks_technical_overview_technical_benefits: typeof _pages_v_blocks_technical_overview_technical_benefits
  _pages_v_blocks_technical_overview: typeof _pages_v_blocks_technical_overview
  _pages_v_blocks_benefits_comparison_benefits: typeof _pages_v_blocks_benefits_comparison_benefits
  _pages_v_blocks_benefits_comparison_summary_cards: typeof _pages_v_blocks_benefits_comparison_summary_cards
  _pages_v_blocks_benefits_comparison: typeof _pages_v_blocks_benefits_comparison
  _pages_v_blocks_product_c_t_a_stats: typeof _pages_v_blocks_product_c_t_a_stats
  _pages_v_blocks_product_c_t_a_why_us_points: typeof _pages_v_blocks_product_c_t_a_why_us_points
  _pages_v_blocks_product_c_t_a_application_options: typeof _pages_v_blocks_product_c_t_a_application_options
  _pages_v_blocks_product_c_t_a: typeof _pages_v_blocks_product_c_t_a
  _pages_v_blocks_product_resources_resources: typeof _pages_v_blocks_product_resources_resources
  _pages_v_blocks_product_resources_quick_access_items: typeof _pages_v_blocks_product_resources_quick_access_items
  _pages_v_blocks_product_resources: typeof _pages_v_blocks_product_resources
  _pages_v_blocks_contact_hero_quick_contact_methods: typeof _pages_v_blocks_contact_hero_quick_contact_methods
  _pages_v_blocks_contact_hero: typeof _pages_v_blocks_contact_hero
  _pages_v_blocks_contact_form: typeof _pages_v_blocks_contact_form
  _pages_v_blocks_contact_info_contact_methods: typeof _pages_v_blocks_contact_info_contact_methods
  _pages_v_blocks_contact_info: typeof _pages_v_blocks_contact_info
  _pages_v_blocks_contact_location: typeof _pages_v_blocks_contact_location
  _pages_v_blocks_contact_f_a_q_faqs: typeof _pages_v_blocks_contact_f_a_q_faqs
  _pages_v_blocks_contact_f_a_q: typeof _pages_v_blocks_contact_f_a_q
  _pages_v_blocks_universal_hero_benefits: typeof _pages_v_blocks_universal_hero_benefits
  _pages_v_blocks_universal_hero_trust_indicators: typeof _pages_v_blocks_universal_hero_trust_indicators
  _pages_v_blocks_universal_hero_stats: typeof _pages_v_blocks_universal_hero_stats
  _pages_v_blocks_universal_hero_contact_methods: typeof _pages_v_blocks_universal_hero_contact_methods
  _pages_v_blocks_universal_hero: typeof _pages_v_blocks_universal_hero
  _pages_v_blocks_universal_c_t_a_benefits: typeof _pages_v_blocks_universal_c_t_a_benefits
  _pages_v_blocks_universal_c_t_a_stats: typeof _pages_v_blocks_universal_c_t_a_stats
  _pages_v_blocks_universal_c_t_a: typeof _pages_v_blocks_universal_c_t_a
  _pages_v_blocks_feature_grid_features_details: typeof _pages_v_blocks_feature_grid_features_details
  _pages_v_blocks_feature_grid_features: typeof _pages_v_blocks_feature_grid_features
  _pages_v_blocks_feature_grid: typeof _pages_v_blocks_feature_grid
  _pages_v_blocks_content_grid_items_applications: typeof _pages_v_blocks_content_grid_items_applications
  _pages_v_blocks_content_grid_items: typeof _pages_v_blocks_content_grid_items
  _pages_v_blocks_content_grid: typeof _pages_v_blocks_content_grid
  _pages_v_blocks_stats_section_stats: typeof _pages_v_blocks_stats_section_stats
  _pages_v_blocks_stats_section: typeof _pages_v_blocks_stats_section
  _pages_v_blocks_process_steps_steps_details: typeof _pages_v_blocks_process_steps_steps_details
  _pages_v_blocks_process_steps_steps: typeof _pages_v_blocks_process_steps_steps
  _pages_v_blocks_process_steps: typeof _pages_v_blocks_process_steps
  _pages_v_blocks_content_cards_cards_tags: typeof _pages_v_blocks_content_cards_cards_tags
  _pages_v_blocks_content_cards_cards: typeof _pages_v_blocks_content_cards_cards
  _pages_v_blocks_content_cards: typeof _pages_v_blocks_content_cards
  _pages_v_blocks_contact_section_benefits: typeof _pages_v_blocks_contact_section_benefits
  _pages_v_blocks_contact_section: typeof _pages_v_blocks_contact_section
  _pages_v_blocks_comparison_table_items: typeof _pages_v_blocks_comparison_table_items
  _pages_v_blocks_comparison_table: typeof _pages_v_blocks_comparison_table
  _pages_v_blocks_simple_page_breadcrumbs: typeof _pages_v_blocks_simple_page_breadcrumbs
  _pages_v_blocks_simple_page_links: typeof _pages_v_blocks_simple_page_links
  _pages_v_blocks_simple_page: typeof _pages_v_blocks_simple_page
  _pages_v_blocks_brand_showcase_brands: typeof _pages_v_blocks_brand_showcase_brands
  _pages_v_blocks_brand_showcase: typeof _pages_v_blocks_brand_showcase
  _pages_v_blocks_technical_content_process_steps: typeof _pages_v_blocks_technical_content_process_steps
  _pages_v_blocks_technical_content_specifications_items: typeof _pages_v_blocks_technical_content_specifications_items
  _pages_v_blocks_technical_content_specifications: typeof _pages_v_blocks_technical_content_specifications
  _pages_v_blocks_technical_content: typeof _pages_v_blocks_technical_content
  _pages_v_blocks_resource_gallery_resources: typeof _pages_v_blocks_resource_gallery_resources
  _pages_v_blocks_resource_gallery_gallery_images: typeof _pages_v_blocks_resource_gallery_gallery_images
  _pages_v_blocks_resource_gallery: typeof _pages_v_blocks_resource_gallery
  _pages_v: typeof _pages_v
  _pages_v_locales: typeof _pages_v_locales
  posts_tags: typeof posts_tags
  posts: typeof posts
  posts_locales: typeof posts_locales
  posts_rels: typeof posts_rels
  _posts_v_version_tags: typeof _posts_v_version_tags
  _posts_v: typeof _posts_v
  _posts_v_locales: typeof _posts_v_locales
  _posts_v_rels: typeof _posts_v_rels
  categories: typeof categories
  categories_locales: typeof categories_locales
  contact_submissions_emails_sent: typeof contact_submissions_emails_sent
  contact_submissions: typeof contact_submissions
  contact_submissions_texts: typeof contact_submissions_texts
  payload_locked_documents: typeof payload_locked_documents
  payload_locked_documents_rels: typeof payload_locked_documents_rels
  payload_preferences: typeof payload_preferences
  payload_preferences_rels: typeof payload_preferences_rels
  payload_migrations: typeof payload_migrations
  header_navigation_dropdown_items: typeof header_navigation_dropdown_items
  header_navigation_dropdown_items_locales: typeof header_navigation_dropdown_items_locales
  header_navigation: typeof header_navigation
  header_navigation_locales: typeof header_navigation_locales
  header: typeof header
  header_locales: typeof header_locales
  header_rels: typeof header_rels
  footer_company_info_address: typeof footer_company_info_address
  footer_footer_columns_links: typeof footer_footer_columns_links
  footer_footer_columns_links_locales: typeof footer_footer_columns_links_locales
  footer_footer_columns: typeof footer_footer_columns
  footer_footer_columns_locales: typeof footer_footer_columns_locales
  footer_bottom_links: typeof footer_bottom_links
  footer: typeof footer
  footer_locales: typeof footer_locales
  seo: typeof seo
  homepage_blocks_hero_cta_buttons: typeof homepage_blocks_hero_cta_buttons
  homepage_blocks_hero: typeof homepage_blocks_hero
  homepage_blocks_logo_belt_logos: typeof homepage_blocks_logo_belt_logos
  homepage_blocks_logo_belt: typeof homepage_blocks_logo_belt
  homepage_blocks_services_services_features: typeof homepage_blocks_services_services_features
  homepage_blocks_services_services: typeof homepage_blocks_services_services
  homepage_blocks_services: typeof homepage_blocks_services
  homepage_blocks_about_badges: typeof homepage_blocks_about_badges
  homepage_blocks_about_stats: typeof homepage_blocks_about_stats
  homepage_blocks_about_process: typeof homepage_blocks_about_process
  homepage_blocks_about: typeof homepage_blocks_about
  homepage_blocks_why_trust_reasons: typeof homepage_blocks_why_trust_reasons
  homepage_blocks_why_trust_pillars: typeof homepage_blocks_why_trust_pillars
  homepage_blocks_why_trust: typeof homepage_blocks_why_trust
  homepage_blocks_projects_projects_stack: typeof homepage_blocks_projects_projects_stack
  homepage_blocks_projects_projects: typeof homepage_blocks_projects_projects
  homepage_blocks_projects: typeof homepage_blocks_projects
  homepage_blocks_contact: typeof homepage_blocks_contact
  homepage: typeof homepage
  email_admin: typeof email_admin
  relations_users_sessions: typeof relations_users_sessions
  relations_users: typeof relations_users
  relations_media: typeof relations_media
  relations_pages_blocks_hero_cta_buttons: typeof relations_pages_blocks_hero_cta_buttons
  relations_pages_blocks_hero: typeof relations_pages_blocks_hero
  relations_pages_blocks_logo_belt_logos: typeof relations_pages_blocks_logo_belt_logos
  relations_pages_blocks_logo_belt: typeof relations_pages_blocks_logo_belt
  relations_pages_blocks_services_services_features: typeof relations_pages_blocks_services_services_features
  relations_pages_blocks_services_services: typeof relations_pages_blocks_services_services
  relations_pages_blocks_services: typeof relations_pages_blocks_services
  relations_pages_blocks_about_badges: typeof relations_pages_blocks_about_badges
  relations_pages_blocks_about_stats: typeof relations_pages_blocks_about_stats
  relations_pages_blocks_about_process: typeof relations_pages_blocks_about_process
  relations_pages_blocks_about: typeof relations_pages_blocks_about
  relations_pages_blocks_why_trust_reasons: typeof relations_pages_blocks_why_trust_reasons
  relations_pages_blocks_why_trust_pillars: typeof relations_pages_blocks_why_trust_pillars
  relations_pages_blocks_why_trust: typeof relations_pages_blocks_why_trust
  relations_pages_blocks_projects_projects_stack: typeof relations_pages_blocks_projects_projects_stack
  relations_pages_blocks_projects_projects: typeof relations_pages_blocks_projects_projects
  relations_pages_blocks_projects: typeof relations_pages_blocks_projects
  relations_pages_blocks_contact: typeof relations_pages_blocks_contact
  relations_pages_blocks_rich_text: typeof relations_pages_blocks_rich_text
  relations_pages_blocks_product_hero_key_benefits: typeof relations_pages_blocks_product_hero_key_benefits
  relations_pages_blocks_product_hero_cta_buttons: typeof relations_pages_blocks_product_hero_cta_buttons
  relations_pages_blocks_product_hero: typeof relations_pages_blocks_product_hero
  relations_pages_blocks_key_features_features: typeof relations_pages_blocks_key_features_features
  relations_pages_blocks_key_features: typeof relations_pages_blocks_key_features
  relations_pages_blocks_product_gallery_images: typeof relations_pages_blocks_product_gallery_images
  relations_pages_blocks_product_gallery: typeof relations_pages_blocks_product_gallery
  relations_pages_blocks_specifications_specifications_items: typeof relations_pages_blocks_specifications_specifications_items
  relations_pages_blocks_specifications_specifications: typeof relations_pages_blocks_specifications_specifications
  relations_pages_blocks_specifications_certification_badges: typeof relations_pages_blocks_specifications_certification_badges
  relations_pages_blocks_specifications_additional_info_details: typeof relations_pages_blocks_specifications_additional_info_details
  relations_pages_blocks_specifications: typeof relations_pages_blocks_specifications
  relations_pages_blocks_applications_applications_details: typeof relations_pages_blocks_applications_applications_details
  relations_pages_blocks_applications_applications: typeof relations_pages_blocks_applications_applications
  relations_pages_blocks_applications_stats: typeof relations_pages_blocks_applications_stats
  relations_pages_blocks_applications_case_study_stats: typeof relations_pages_blocks_applications_case_study_stats
  relations_pages_blocks_applications: typeof relations_pages_blocks_applications
  relations_pages_blocks_technical_overview_process_steps: typeof relations_pages_blocks_technical_overview_process_steps
  relations_pages_blocks_technical_overview_technical_benefits: typeof relations_pages_blocks_technical_overview_technical_benefits
  relations_pages_blocks_technical_overview: typeof relations_pages_blocks_technical_overview
  relations_pages_blocks_benefits_comparison_benefits: typeof relations_pages_blocks_benefits_comparison_benefits
  relations_pages_blocks_benefits_comparison_summary_cards: typeof relations_pages_blocks_benefits_comparison_summary_cards
  relations_pages_blocks_benefits_comparison: typeof relations_pages_blocks_benefits_comparison
  relations_pages_blocks_product_c_t_a_stats: typeof relations_pages_blocks_product_c_t_a_stats
  relations_pages_blocks_product_c_t_a_why_us_points: typeof relations_pages_blocks_product_c_t_a_why_us_points
  relations_pages_blocks_product_c_t_a_application_options: typeof relations_pages_blocks_product_c_t_a_application_options
  relations_pages_blocks_product_c_t_a: typeof relations_pages_blocks_product_c_t_a
  relations_pages_blocks_product_resources_resources: typeof relations_pages_blocks_product_resources_resources
  relations_pages_blocks_product_resources_quick_access_items: typeof relations_pages_blocks_product_resources_quick_access_items
  relations_pages_blocks_product_resources: typeof relations_pages_blocks_product_resources
  relations_pages_blocks_contact_hero_quick_contact_methods: typeof relations_pages_blocks_contact_hero_quick_contact_methods
  relations_pages_blocks_contact_hero: typeof relations_pages_blocks_contact_hero
  relations_pages_blocks_contact_form: typeof relations_pages_blocks_contact_form
  relations_pages_blocks_contact_info_contact_methods: typeof relations_pages_blocks_contact_info_contact_methods
  relations_pages_blocks_contact_info: typeof relations_pages_blocks_contact_info
  relations_pages_blocks_contact_location: typeof relations_pages_blocks_contact_location
  relations_pages_blocks_contact_f_a_q_faqs: typeof relations_pages_blocks_contact_f_a_q_faqs
  relations_pages_blocks_contact_f_a_q: typeof relations_pages_blocks_contact_f_a_q
  relations_pages_blocks_universal_hero_benefits: typeof relations_pages_blocks_universal_hero_benefits
  relations_pages_blocks_universal_hero_trust_indicators: typeof relations_pages_blocks_universal_hero_trust_indicators
  relations_pages_blocks_universal_hero_stats: typeof relations_pages_blocks_universal_hero_stats
  relations_pages_blocks_universal_hero_contact_methods: typeof relations_pages_blocks_universal_hero_contact_methods
  relations_pages_blocks_universal_hero: typeof relations_pages_blocks_universal_hero
  relations_pages_blocks_universal_c_t_a_benefits: typeof relations_pages_blocks_universal_c_t_a_benefits
  relations_pages_blocks_universal_c_t_a_stats: typeof relations_pages_blocks_universal_c_t_a_stats
  relations_pages_blocks_universal_c_t_a: typeof relations_pages_blocks_universal_c_t_a
  relations_pages_blocks_feature_grid_features_details: typeof relations_pages_blocks_feature_grid_features_details
  relations_pages_blocks_feature_grid_features: typeof relations_pages_blocks_feature_grid_features
  relations_pages_blocks_feature_grid: typeof relations_pages_blocks_feature_grid
  relations_pages_blocks_content_grid_items_applications: typeof relations_pages_blocks_content_grid_items_applications
  relations_pages_blocks_content_grid_items: typeof relations_pages_blocks_content_grid_items
  relations_pages_blocks_content_grid: typeof relations_pages_blocks_content_grid
  relations_pages_blocks_stats_section_stats: typeof relations_pages_blocks_stats_section_stats
  relations_pages_blocks_stats_section: typeof relations_pages_blocks_stats_section
  relations_pages_blocks_process_steps_steps_details: typeof relations_pages_blocks_process_steps_steps_details
  relations_pages_blocks_process_steps_steps: typeof relations_pages_blocks_process_steps_steps
  relations_pages_blocks_process_steps: typeof relations_pages_blocks_process_steps
  relations_pages_blocks_content_cards_cards_tags: typeof relations_pages_blocks_content_cards_cards_tags
  relations_pages_blocks_content_cards_cards: typeof relations_pages_blocks_content_cards_cards
  relations_pages_blocks_content_cards: typeof relations_pages_blocks_content_cards
  relations_pages_blocks_contact_section_benefits: typeof relations_pages_blocks_contact_section_benefits
  relations_pages_blocks_contact_section: typeof relations_pages_blocks_contact_section
  relations_pages_blocks_comparison_table_items: typeof relations_pages_blocks_comparison_table_items
  relations_pages_blocks_comparison_table: typeof relations_pages_blocks_comparison_table
  relations_pages_blocks_simple_page_breadcrumbs: typeof relations_pages_blocks_simple_page_breadcrumbs
  relations_pages_blocks_simple_page_links: typeof relations_pages_blocks_simple_page_links
  relations_pages_blocks_simple_page: typeof relations_pages_blocks_simple_page
  relations_pages_blocks_brand_showcase_brands: typeof relations_pages_blocks_brand_showcase_brands
  relations_pages_blocks_brand_showcase: typeof relations_pages_blocks_brand_showcase
  relations_pages_blocks_technical_content_process_steps: typeof relations_pages_blocks_technical_content_process_steps
  relations_pages_blocks_technical_content_specifications_items: typeof relations_pages_blocks_technical_content_specifications_items
  relations_pages_blocks_technical_content_specifications: typeof relations_pages_blocks_technical_content_specifications
  relations_pages_blocks_technical_content: typeof relations_pages_blocks_technical_content
  relations_pages_blocks_resource_gallery_resources: typeof relations_pages_blocks_resource_gallery_resources
  relations_pages_blocks_resource_gallery_gallery_images: typeof relations_pages_blocks_resource_gallery_gallery_images
  relations_pages_blocks_resource_gallery: typeof relations_pages_blocks_resource_gallery
  relations_pages_locales: typeof relations_pages_locales
  relations_pages: typeof relations_pages
  relations__pages_v_blocks_hero_cta_buttons: typeof relations__pages_v_blocks_hero_cta_buttons
  relations__pages_v_blocks_hero: typeof relations__pages_v_blocks_hero
  relations__pages_v_blocks_logo_belt_logos: typeof relations__pages_v_blocks_logo_belt_logos
  relations__pages_v_blocks_logo_belt: typeof relations__pages_v_blocks_logo_belt
  relations__pages_v_blocks_services_services_features: typeof relations__pages_v_blocks_services_services_features
  relations__pages_v_blocks_services_services: typeof relations__pages_v_blocks_services_services
  relations__pages_v_blocks_services: typeof relations__pages_v_blocks_services
  relations__pages_v_blocks_about_badges: typeof relations__pages_v_blocks_about_badges
  relations__pages_v_blocks_about_stats: typeof relations__pages_v_blocks_about_stats
  relations__pages_v_blocks_about_process: typeof relations__pages_v_blocks_about_process
  relations__pages_v_blocks_about: typeof relations__pages_v_blocks_about
  relations__pages_v_blocks_why_trust_reasons: typeof relations__pages_v_blocks_why_trust_reasons
  relations__pages_v_blocks_why_trust_pillars: typeof relations__pages_v_blocks_why_trust_pillars
  relations__pages_v_blocks_why_trust: typeof relations__pages_v_blocks_why_trust
  relations__pages_v_blocks_projects_projects_stack: typeof relations__pages_v_blocks_projects_projects_stack
  relations__pages_v_blocks_projects_projects: typeof relations__pages_v_blocks_projects_projects
  relations__pages_v_blocks_projects: typeof relations__pages_v_blocks_projects
  relations__pages_v_blocks_contact: typeof relations__pages_v_blocks_contact
  relations__pages_v_blocks_rich_text: typeof relations__pages_v_blocks_rich_text
  relations__pages_v_blocks_product_hero_key_benefits: typeof relations__pages_v_blocks_product_hero_key_benefits
  relations__pages_v_blocks_product_hero_cta_buttons: typeof relations__pages_v_blocks_product_hero_cta_buttons
  relations__pages_v_blocks_product_hero: typeof relations__pages_v_blocks_product_hero
  relations__pages_v_blocks_key_features_features: typeof relations__pages_v_blocks_key_features_features
  relations__pages_v_blocks_key_features: typeof relations__pages_v_blocks_key_features
  relations__pages_v_blocks_product_gallery_images: typeof relations__pages_v_blocks_product_gallery_images
  relations__pages_v_blocks_product_gallery: typeof relations__pages_v_blocks_product_gallery
  relations__pages_v_blocks_specifications_specifications_items: typeof relations__pages_v_blocks_specifications_specifications_items
  relations__pages_v_blocks_specifications_specifications: typeof relations__pages_v_blocks_specifications_specifications
  relations__pages_v_blocks_specifications_certification_badges: typeof relations__pages_v_blocks_specifications_certification_badges
  relations__pages_v_blocks_specifications_additional_info_details: typeof relations__pages_v_blocks_specifications_additional_info_details
  relations__pages_v_blocks_specifications: typeof relations__pages_v_blocks_specifications
  relations__pages_v_blocks_applications_applications_details: typeof relations__pages_v_blocks_applications_applications_details
  relations__pages_v_blocks_applications_applications: typeof relations__pages_v_blocks_applications_applications
  relations__pages_v_blocks_applications_stats: typeof relations__pages_v_blocks_applications_stats
  relations__pages_v_blocks_applications_case_study_stats: typeof relations__pages_v_blocks_applications_case_study_stats
  relations__pages_v_blocks_applications: typeof relations__pages_v_blocks_applications
  relations__pages_v_blocks_technical_overview_process_steps: typeof relations__pages_v_blocks_technical_overview_process_steps
  relations__pages_v_blocks_technical_overview_technical_benefits: typeof relations__pages_v_blocks_technical_overview_technical_benefits
  relations__pages_v_blocks_technical_overview: typeof relations__pages_v_blocks_technical_overview
  relations__pages_v_blocks_benefits_comparison_benefits: typeof relations__pages_v_blocks_benefits_comparison_benefits
  relations__pages_v_blocks_benefits_comparison_summary_cards: typeof relations__pages_v_blocks_benefits_comparison_summary_cards
  relations__pages_v_blocks_benefits_comparison: typeof relations__pages_v_blocks_benefits_comparison
  relations__pages_v_blocks_product_c_t_a_stats: typeof relations__pages_v_blocks_product_c_t_a_stats
  relations__pages_v_blocks_product_c_t_a_why_us_points: typeof relations__pages_v_blocks_product_c_t_a_why_us_points
  relations__pages_v_blocks_product_c_t_a_application_options: typeof relations__pages_v_blocks_product_c_t_a_application_options
  relations__pages_v_blocks_product_c_t_a: typeof relations__pages_v_blocks_product_c_t_a
  relations__pages_v_blocks_product_resources_resources: typeof relations__pages_v_blocks_product_resources_resources
  relations__pages_v_blocks_product_resources_quick_access_items: typeof relations__pages_v_blocks_product_resources_quick_access_items
  relations__pages_v_blocks_product_resources: typeof relations__pages_v_blocks_product_resources
  relations__pages_v_blocks_contact_hero_quick_contact_methods: typeof relations__pages_v_blocks_contact_hero_quick_contact_methods
  relations__pages_v_blocks_contact_hero: typeof relations__pages_v_blocks_contact_hero
  relations__pages_v_blocks_contact_form: typeof relations__pages_v_blocks_contact_form
  relations__pages_v_blocks_contact_info_contact_methods: typeof relations__pages_v_blocks_contact_info_contact_methods
  relations__pages_v_blocks_contact_info: typeof relations__pages_v_blocks_contact_info
  relations__pages_v_blocks_contact_location: typeof relations__pages_v_blocks_contact_location
  relations__pages_v_blocks_contact_f_a_q_faqs: typeof relations__pages_v_blocks_contact_f_a_q_faqs
  relations__pages_v_blocks_contact_f_a_q: typeof relations__pages_v_blocks_contact_f_a_q
  relations__pages_v_blocks_universal_hero_benefits: typeof relations__pages_v_blocks_universal_hero_benefits
  relations__pages_v_blocks_universal_hero_trust_indicators: typeof relations__pages_v_blocks_universal_hero_trust_indicators
  relations__pages_v_blocks_universal_hero_stats: typeof relations__pages_v_blocks_universal_hero_stats
  relations__pages_v_blocks_universal_hero_contact_methods: typeof relations__pages_v_blocks_universal_hero_contact_methods
  relations__pages_v_blocks_universal_hero: typeof relations__pages_v_blocks_universal_hero
  relations__pages_v_blocks_universal_c_t_a_benefits: typeof relations__pages_v_blocks_universal_c_t_a_benefits
  relations__pages_v_blocks_universal_c_t_a_stats: typeof relations__pages_v_blocks_universal_c_t_a_stats
  relations__pages_v_blocks_universal_c_t_a: typeof relations__pages_v_blocks_universal_c_t_a
  relations__pages_v_blocks_feature_grid_features_details: typeof relations__pages_v_blocks_feature_grid_features_details
  relations__pages_v_blocks_feature_grid_features: typeof relations__pages_v_blocks_feature_grid_features
  relations__pages_v_blocks_feature_grid: typeof relations__pages_v_blocks_feature_grid
  relations__pages_v_blocks_content_grid_items_applications: typeof relations__pages_v_blocks_content_grid_items_applications
  relations__pages_v_blocks_content_grid_items: typeof relations__pages_v_blocks_content_grid_items
  relations__pages_v_blocks_content_grid: typeof relations__pages_v_blocks_content_grid
  relations__pages_v_blocks_stats_section_stats: typeof relations__pages_v_blocks_stats_section_stats
  relations__pages_v_blocks_stats_section: typeof relations__pages_v_blocks_stats_section
  relations__pages_v_blocks_process_steps_steps_details: typeof relations__pages_v_blocks_process_steps_steps_details
  relations__pages_v_blocks_process_steps_steps: typeof relations__pages_v_blocks_process_steps_steps
  relations__pages_v_blocks_process_steps: typeof relations__pages_v_blocks_process_steps
  relations__pages_v_blocks_content_cards_cards_tags: typeof relations__pages_v_blocks_content_cards_cards_tags
  relations__pages_v_blocks_content_cards_cards: typeof relations__pages_v_blocks_content_cards_cards
  relations__pages_v_blocks_content_cards: typeof relations__pages_v_blocks_content_cards
  relations__pages_v_blocks_contact_section_benefits: typeof relations__pages_v_blocks_contact_section_benefits
  relations__pages_v_blocks_contact_section: typeof relations__pages_v_blocks_contact_section
  relations__pages_v_blocks_comparison_table_items: typeof relations__pages_v_blocks_comparison_table_items
  relations__pages_v_blocks_comparison_table: typeof relations__pages_v_blocks_comparison_table
  relations__pages_v_blocks_simple_page_breadcrumbs: typeof relations__pages_v_blocks_simple_page_breadcrumbs
  relations__pages_v_blocks_simple_page_links: typeof relations__pages_v_blocks_simple_page_links
  relations__pages_v_blocks_simple_page: typeof relations__pages_v_blocks_simple_page
  relations__pages_v_blocks_brand_showcase_brands: typeof relations__pages_v_blocks_brand_showcase_brands
  relations__pages_v_blocks_brand_showcase: typeof relations__pages_v_blocks_brand_showcase
  relations__pages_v_blocks_technical_content_process_steps: typeof relations__pages_v_blocks_technical_content_process_steps
  relations__pages_v_blocks_technical_content_specifications_items: typeof relations__pages_v_blocks_technical_content_specifications_items
  relations__pages_v_blocks_technical_content_specifications: typeof relations__pages_v_blocks_technical_content_specifications
  relations__pages_v_blocks_technical_content: typeof relations__pages_v_blocks_technical_content
  relations__pages_v_blocks_resource_gallery_resources: typeof relations__pages_v_blocks_resource_gallery_resources
  relations__pages_v_blocks_resource_gallery_gallery_images: typeof relations__pages_v_blocks_resource_gallery_gallery_images
  relations__pages_v_blocks_resource_gallery: typeof relations__pages_v_blocks_resource_gallery
  relations__pages_v_locales: typeof relations__pages_v_locales
  relations__pages_v: typeof relations__pages_v
  relations_posts_tags: typeof relations_posts_tags
  relations_posts_locales: typeof relations_posts_locales
  relations_posts_rels: typeof relations_posts_rels
  relations_posts: typeof relations_posts
  relations__posts_v_version_tags: typeof relations__posts_v_version_tags
  relations__posts_v_locales: typeof relations__posts_v_locales
  relations__posts_v_rels: typeof relations__posts_v_rels
  relations__posts_v: typeof relations__posts_v
  relations_categories_locales: typeof relations_categories_locales
  relations_categories: typeof relations_categories
  relations_contact_submissions_emails_sent: typeof relations_contact_submissions_emails_sent
  relations_contact_submissions_texts: typeof relations_contact_submissions_texts
  relations_contact_submissions: typeof relations_contact_submissions
  relations_payload_locked_documents_rels: typeof relations_payload_locked_documents_rels
  relations_payload_locked_documents: typeof relations_payload_locked_documents
  relations_payload_preferences_rels: typeof relations_payload_preferences_rels
  relations_payload_preferences: typeof relations_payload_preferences
  relations_payload_migrations: typeof relations_payload_migrations
  relations_header_navigation_dropdown_items_locales: typeof relations_header_navigation_dropdown_items_locales
  relations_header_navigation_dropdown_items: typeof relations_header_navigation_dropdown_items
  relations_header_navigation_locales: typeof relations_header_navigation_locales
  relations_header_navigation: typeof relations_header_navigation
  relations_header_locales: typeof relations_header_locales
  relations_header_rels: typeof relations_header_rels
  relations_header: typeof relations_header
  relations_footer_company_info_address: typeof relations_footer_company_info_address
  relations_footer_footer_columns_links_locales: typeof relations_footer_footer_columns_links_locales
  relations_footer_footer_columns_links: typeof relations_footer_footer_columns_links
  relations_footer_footer_columns_locales: typeof relations_footer_footer_columns_locales
  relations_footer_footer_columns: typeof relations_footer_footer_columns
  relations_footer_bottom_links: typeof relations_footer_bottom_links
  relations_footer_locales: typeof relations_footer_locales
  relations_footer: typeof relations_footer
  relations_seo: typeof relations_seo
  relations_homepage_blocks_hero_cta_buttons: typeof relations_homepage_blocks_hero_cta_buttons
  relations_homepage_blocks_hero: typeof relations_homepage_blocks_hero
  relations_homepage_blocks_logo_belt_logos: typeof relations_homepage_blocks_logo_belt_logos
  relations_homepage_blocks_logo_belt: typeof relations_homepage_blocks_logo_belt
  relations_homepage_blocks_services_services_features: typeof relations_homepage_blocks_services_services_features
  relations_homepage_blocks_services_services: typeof relations_homepage_blocks_services_services
  relations_homepage_blocks_services: typeof relations_homepage_blocks_services
  relations_homepage_blocks_about_badges: typeof relations_homepage_blocks_about_badges
  relations_homepage_blocks_about_stats: typeof relations_homepage_blocks_about_stats
  relations_homepage_blocks_about_process: typeof relations_homepage_blocks_about_process
  relations_homepage_blocks_about: typeof relations_homepage_blocks_about
  relations_homepage_blocks_why_trust_reasons: typeof relations_homepage_blocks_why_trust_reasons
  relations_homepage_blocks_why_trust_pillars: typeof relations_homepage_blocks_why_trust_pillars
  relations_homepage_blocks_why_trust: typeof relations_homepage_blocks_why_trust
  relations_homepage_blocks_projects_projects_stack: typeof relations_homepage_blocks_projects_projects_stack
  relations_homepage_blocks_projects_projects: typeof relations_homepage_blocks_projects_projects
  relations_homepage_blocks_projects: typeof relations_homepage_blocks_projects
  relations_homepage_blocks_contact: typeof relations_homepage_blocks_contact
  relations_homepage: typeof relations_homepage
  relations_email_admin: typeof relations_email_admin
}

declare module '@payloadcms/db-vercel-postgres' {
  export interface GeneratedDatabaseSchema {
    schema: DatabaseSchema
  }
}
