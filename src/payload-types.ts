/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    posts: Post;
    categories: Category;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    seo: Seo;
    homepage: Homepage;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    seo: SeoSelect<false> | SeoSelect<true>;
    homepage: HomepageSelect<false> | HomepageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug: string;
  /**
   * Build your page using blocks. Mix and match different content sections.
   */
  layout?:
    | (
        | {
            /**
             * Main hero title
             */
            title: string;
            /**
             * Hero subtitle or description
             */
            subtitle?: string | null;
            /**
             * Hero background image
             */
            backgroundImage?: (number | null) | Media;
            ctaButtons?:
              | {
                  label: string;
                  type: 'page' | 'url' | 'anchor';
                  page?: (number | null) | Page;
                  url?: string | null;
                  anchor?: string | null;
                  variant?: ('default' | 'secondary' | 'outline' | 'ghost') | null;
                  id?: string | null;
                }[]
              | null;
            bottomText?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            logos?:
              | {
                  logo: number | Media;
                  alt: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'logoBelt';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            services?:
              | {
                  title: string;
                  description?: string | null;
                  image: number | Media;
                  features?:
                    | {
                        feature: string;
                        id?: string | null;
                      }[]
                    | null;
                  button: {
                    text: string;
                    type: 'page' | 'url' | 'anchor';
                    page?: (number | null) | Page;
                    url?: string | null;
                    anchor?: string | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'services';
          }
        | {
            title: string;
            description?: string | null;
            image: number | Media;
            badges?:
              | {
                  text: string;
                  id?: string | null;
                }[]
              | null;
            stats?:
              | {
                  number: string;
                  label: string;
                  id?: string | null;
                }[]
              | null;
            process?:
              | {
                  step: string;
                  id?: string | null;
                }[]
              | null;
            calloutText?: string | null;
            button: {
              text: string;
              type: 'page' | 'url' | 'anchor';
              page?: (number | null) | Page;
              url?: string | null;
              anchor?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'about';
          }
        | {
            title: string;
            image: number | Media;
            reasons?:
              | {
                  reason: string;
                  id?: string | null;
                }[]
              | null;
            pillars?:
              | {
                  title: string;
                  description: string;
                  icon: 'shield' | 'cog' | 'headset';
                  id?: string | null;
                }[]
              | null;
            button: {
              text: string;
              type: 'page' | 'url' | 'anchor';
              page?: (number | null) | Page;
              url?: string | null;
              anchor?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'whyTrust';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            projects?:
              | {
                  title: string;
                  category: string;
                  image: number | Media;
                  description: string;
                  stack?:
                    | {
                        technology: string;
                        id?: string | null;
                      }[]
                    | null;
                  link?: string | null;
                  id?: string | null;
                }[]
              | null;
            button: {
              text: string;
              type: 'page' | 'url' | 'anchor';
              page?: (number | null) | Page;
              url?: string | null;
              anchor?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'projects';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            phone?: string | null;
            email?: string | null;
            privacyText?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contact';
          }
        | {
            /**
             * Rich text content for flexible text sections
             */
            content: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'richText';
          }
        | {
            /**
             * Small badge text above title
             */
            badge?: string | null;
            /**
             * Main product title
             */
            title: string;
            /**
             * Product subtitle
             */
            subtitle?: string | null;
            /**
             * Product description
             */
            description?: string | null;
            /**
             * Product hero image
             */
            backgroundImage?: (number | null) | Media;
            keyBenefits?:
              | {
                  title: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            ctaButtons?:
              | {
                  label: string;
                  type: 'page' | 'url' | 'anchor';
                  page?: (number | null) | Page;
                  url?: string | null;
                  anchor?: string | null;
                  variant?: ('default' | 'secondary' | 'outline' | 'ghost') | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'productHero';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            features?:
              | {
                  icon: 'mechanical' | 'shield' | 'retrofit' | 'modular' | 'temperature' | 'key';
                  title: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            bottomHighlight?: {
              title?: string | null;
              description?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'keyFeatures';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            images?:
              | {
                  title: string;
                  description: string;
                  category: string;
                  image?: (number | null) | Media;
                  id?: string | null;
                }[]
              | null;
            downloadSection?: {
              title?: string | null;
              description?: string | null;
              downloadButtonText?: string | null;
              requestButtonText?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'productGallery';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            specifications?:
              | {
                  category: string;
                  items?:
                    | {
                        label: string;
                        value: string;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            certificationBadges?:
              | {
                  name: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            additionalInfo?: {
              title?: string | null;
              description?: string | null;
              details?:
                | {
                    label: string;
                    value: string;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'specifications';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            applications?:
              | {
                  icon: 'oilgas' | 'energy' | 'pharm' | 'manufacturing' | 'atex' | 'water';
                  title: string;
                  description: string;
                  details?:
                    | {
                        detail: string;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            stats?:
              | {
                  number: string;
                  label: string;
                  id?: string | null;
                }[]
              | null;
            caseStudy?: {
              title?: string | null;
              description?: string | null;
              stats?:
                | {
                    label: string;
                    value: string;
                    id?: string | null;
                  }[]
                | null;
              image?: (number | null) | Media;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'applications';
          }
        | {
            badge?: string | null;
            title: string;
            description: string;
            technicalImage?: (number | null) | Media;
            processSteps?:
              | {
                  title: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            technicalBenefits?:
              | {
                  title: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'technicalOverview';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            benefits?:
              | {
                  advantage: string;
                  description: string;
                  mGard: string;
                  electronic: string;
                  id?: string | null;
                }[]
              | null;
            summaryCards?:
              | {
                  icon: 'shield' | 'clock' | 'users';
                  title: string;
                  description: string;
                  id?: string | null;
                }[]
              | null;
            bottomCTA?: {
              title?: string | null;
              description?: string | null;
              primaryButtonText?: string | null;
              secondaryButtonText?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'benefitsComparison';
          }
        | {
            title: string;
            description: string;
            stats?:
              | {
                  value: string;
                  label: string;
                  id?: string | null;
                }[]
              | null;
            contactInfo?: {
              phone?: string | null;
              email?: string | null;
              responseTime?: string | null;
            };
            whyUsPoints?:
              | {
                  text: string;
                  id?: string | null;
                }[]
              | null;
            heroImage?: (number | null) | Media;
            formTitle?: string | null;
            applicationOptions?:
              | {
                  value: string;
                  label: string;
                  id?: string | null;
                }[]
              | null;
            privacyText?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'productCTA';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            resources?:
              | {
                  title: string;
                  description: string;
                  fileType: string;
                  fileSize: string;
                  icon: string;
                  category: string;
                  downloadUrl?: string | null;
                  id?: string | null;
                }[]
              | null;
            quickAccessItems?:
              | {
                  name: string;
                  fileInfo: string;
                  downloadUrl?: string | null;
                  id?: string | null;
                }[]
              | null;
            contactSection?: {
              title?: string | null;
              description?: string | null;
              phone?: string | null;
              email?: string | null;
            };
            newsletterSection?: {
              title?: string | null;
              description?: string | null;
              privacyText?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'productResources';
          }
        | {
            /**
             * Main contact page title
             */
            title: string;
            /**
             * Hero subtitle with response times
             */
            subtitle?: string | null;
            quickContactMethods?:
              | {
                  type: 'phone' | 'email' | 'location';
                  label: string;
                  value: string;
                  link: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contactHero';
          }
        | {
            /**
             * Small badge text above title
             */
            badge?: string | null;
            /**
             * Contact form section title
             */
            title: string;
            /**
             * Contact form section subtitle
             */
            subtitle?: string | null;
            /**
             * Title inside the form container
             */
            formTitle?: string | null;
            submitButtonText?: string | null;
            submitButtonLoadingText?: string | null;
            privacyText?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contactForm';
          }
        | {
            /**
             * Small badge text above title
             */
            badge?: string | null;
            /**
             * Contact information section title
             */
            title: string;
            /**
             * Contact information section subtitle
             */
            subtitle?: string | null;
            contactMethods?:
              | {
                  title: string;
                  email: string;
                  phone: string;
                  description: string;
                  hours: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contactInfo';
          }
        | {
            /**
             * Small badge text above title
             */
            badge?: string | null;
            /**
             * Location section title
             */
            title: string;
            /**
             * Location section subtitle
             */
            subtitle?: string | null;
            /**
             * Google Maps embed URL
             */
            mapEmbedUrl?: string | null;
            address?: {
              companyName?: string | null;
              street?: string | null;
              city?: string | null;
              country?: string | null;
            };
            emergencyPhone?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contactLocation';
          }
        | {
            /**
             * Small badge text above title
             */
            badge?: string | null;
            /**
             * FAQ section title
             */
            title: string;
            /**
             * FAQ section subtitle
             */
            subtitle?: string | null;
            faqs?:
              | {
                  question: string;
                  answer: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contactFAQ';
          }
      )[]
    | null;
  meta?: {
    /**
     * SEO title (optional, defaults to page title)
     */
    title?: string | null;
    /**
     * SEO description for search engines
     */
    description?: string | null;
  };
  publishedAt?: string | null;
  status?: ('draft' | 'published') | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  slug: string;
  /**
   * Brief description of the post for previews and SEO
   */
  excerpt?: string | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Main image for the post
   */
  featuredImage?: (number | null) | Media;
  categories?: (number | Category)[] | null;
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Author will be auto-assigned if not selected
   */
  author?: (number | null) | User;
  publishedAt?: string | null;
  status?: ('draft' | 'published' | 'archived') | null;
  meta?: {
    /**
     * SEO title (optional, defaults to post title)
     */
    title?: string | null;
    /**
     * SEO description for search engines
     */
    description?: string | null;
    /**
     * Comma-separated keywords for SEO
     */
    keywords?: string | null;
  };
  /**
   * Estimated reading time in minutes
   */
  readingTime?: number | null;
  /**
   * Feature this post on homepage
   */
  featured?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  slug: string;
  /**
   * Optional description of this category
   */
  description?: string | null;
  /**
   * Choose a parent category to create hierarchy
   */
  parent?: (number | null) | Category;
  /**
   * Hex color code for this category (e.g., #FF5733)
   */
  color?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundImage?: T;
              ctaButtons?:
                | T
                | {
                    label?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                    anchor?: T;
                    variant?: T;
                    id?: T;
                  };
              bottomText?: T;
              id?: T;
              blockName?: T;
            };
        logoBelt?:
          | T
          | {
              logos?:
                | T
                | {
                    logo?: T;
                    alt?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        services?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              services?:
                | T
                | {
                    title?: T;
                    description?: T;
                    image?: T;
                    features?:
                      | T
                      | {
                          feature?: T;
                          id?: T;
                        };
                    button?:
                      | T
                      | {
                          text?: T;
                          type?: T;
                          page?: T;
                          url?: T;
                          anchor?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        about?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              badges?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              stats?:
                | T
                | {
                    number?: T;
                    label?: T;
                    id?: T;
                  };
              process?:
                | T
                | {
                    step?: T;
                    id?: T;
                  };
              calloutText?: T;
              button?:
                | T
                | {
                    text?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                    anchor?: T;
                  };
              id?: T;
              blockName?: T;
            };
        whyTrust?:
          | T
          | {
              title?: T;
              image?: T;
              reasons?:
                | T
                | {
                    reason?: T;
                    id?: T;
                  };
              pillars?:
                | T
                | {
                    title?: T;
                    description?: T;
                    icon?: T;
                    id?: T;
                  };
              button?:
                | T
                | {
                    text?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                    anchor?: T;
                  };
              id?: T;
              blockName?: T;
            };
        projects?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              projects?:
                | T
                | {
                    title?: T;
                    category?: T;
                    image?: T;
                    description?: T;
                    stack?:
                      | T
                      | {
                          technology?: T;
                          id?: T;
                        };
                    link?: T;
                    id?: T;
                  };
              button?:
                | T
                | {
                    text?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                    anchor?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contact?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              phone?: T;
              email?: T;
              privacyText?: T;
              id?: T;
              blockName?: T;
            };
        richText?:
          | T
          | {
              content?: T;
              id?: T;
              blockName?: T;
            };
        productHero?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              description?: T;
              backgroundImage?: T;
              keyBenefits?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              ctaButtons?:
                | T
                | {
                    label?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                    anchor?: T;
                    variant?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        keyFeatures?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              features?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              bottomHighlight?:
                | T
                | {
                    title?: T;
                    description?: T;
                  };
              id?: T;
              blockName?: T;
            };
        productGallery?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              images?:
                | T
                | {
                    title?: T;
                    description?: T;
                    category?: T;
                    image?: T;
                    id?: T;
                  };
              downloadSection?:
                | T
                | {
                    title?: T;
                    description?: T;
                    downloadButtonText?: T;
                    requestButtonText?: T;
                  };
              id?: T;
              blockName?: T;
            };
        specifications?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              specifications?:
                | T
                | {
                    category?: T;
                    items?:
                      | T
                      | {
                          label?: T;
                          value?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              certificationBadges?:
                | T
                | {
                    name?: T;
                    description?: T;
                    id?: T;
                  };
              additionalInfo?:
                | T
                | {
                    title?: T;
                    description?: T;
                    details?:
                      | T
                      | {
                          label?: T;
                          value?: T;
                          id?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        applications?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              applications?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    description?: T;
                    details?:
                      | T
                      | {
                          detail?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              stats?:
                | T
                | {
                    number?: T;
                    label?: T;
                    id?: T;
                  };
              caseStudy?:
                | T
                | {
                    title?: T;
                    description?: T;
                    stats?:
                      | T
                      | {
                          label?: T;
                          value?: T;
                          id?: T;
                        };
                    image?: T;
                  };
              id?: T;
              blockName?: T;
            };
        technicalOverview?:
          | T
          | {
              badge?: T;
              title?: T;
              description?: T;
              technicalImage?: T;
              processSteps?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              technicalBenefits?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        benefitsComparison?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              benefits?:
                | T
                | {
                    advantage?: T;
                    description?: T;
                    mGard?: T;
                    electronic?: T;
                    id?: T;
                  };
              summaryCards?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              bottomCTA?:
                | T
                | {
                    title?: T;
                    description?: T;
                    primaryButtonText?: T;
                    secondaryButtonText?: T;
                  };
              id?: T;
              blockName?: T;
            };
        productCTA?:
          | T
          | {
              title?: T;
              description?: T;
              stats?:
                | T
                | {
                    value?: T;
                    label?: T;
                    id?: T;
                  };
              contactInfo?:
                | T
                | {
                    phone?: T;
                    email?: T;
                    responseTime?: T;
                  };
              whyUsPoints?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              heroImage?: T;
              formTitle?: T;
              applicationOptions?:
                | T
                | {
                    value?: T;
                    label?: T;
                    id?: T;
                  };
              privacyText?: T;
              id?: T;
              blockName?: T;
            };
        productResources?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              resources?:
                | T
                | {
                    title?: T;
                    description?: T;
                    fileType?: T;
                    fileSize?: T;
                    icon?: T;
                    category?: T;
                    downloadUrl?: T;
                    id?: T;
                  };
              quickAccessItems?:
                | T
                | {
                    name?: T;
                    fileInfo?: T;
                    downloadUrl?: T;
                    id?: T;
                  };
              contactSection?:
                | T
                | {
                    title?: T;
                    description?: T;
                    phone?: T;
                    email?: T;
                  };
              newsletterSection?:
                | T
                | {
                    title?: T;
                    description?: T;
                    privacyText?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contactHero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              quickContactMethods?:
                | T
                | {
                    type?: T;
                    label?: T;
                    value?: T;
                    link?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contactForm?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              formTitle?: T;
              submitButtonText?: T;
              submitButtonLoadingText?: T;
              privacyText?: T;
              id?: T;
              blockName?: T;
            };
        contactInfo?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              contactMethods?:
                | T
                | {
                    title?: T;
                    email?: T;
                    phone?: T;
                    description?: T;
                    hours?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contactLocation?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              mapEmbedUrl?: T;
              address?:
                | T
                | {
                    companyName?: T;
                    street?: T;
                    city?: T;
                    country?: T;
                  };
              emergencyPhone?: T;
              id?: T;
              blockName?: T;
            };
        contactFAQ?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              faqs?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  publishedAt?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  excerpt?: T;
  content?: T;
  featuredImage?: T;
  categories?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  author?: T;
  publishedAt?: T;
  status?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  readingTime?: T;
  featured?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  parent?: T;
  color?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  /**
   * The name of your website/brand
   */
  siteName: string;
  /**
   * Upload your logo (optional)
   */
  logo?: (number | null) | Media;
  /**
   * Configure your main navigation menu
   */
  navigation?:
    | {
        label: string;
        type: 'page' | 'url' | 'blog' | 'post' | 'category';
        page?: (number | null) | Page;
        /**
         * Link to a specific blog post
         */
        post?: (number | null) | Post;
        /**
         * Link to a specific category
         */
        category?: (number | null) | Category;
        /**
         * Enter full URL (e.g., https://example.com)
         */
        url?: string | null;
        /**
         * Open link in new tab
         */
        newTab?: boolean | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Configure mobile hamburger menu behavior
   */
  mobileNavigation?: {
    /**
     * Enable hamburger menu for mobile devices
     */
    enabled?: boolean | null;
    /**
     * Accessibility label for hamburger menu button
     */
    menuButtonLabel?: string | null;
    /**
     * Accessibility label for close menu button
     */
    closeButtonLabel?: string | null;
    /**
     * Show language selector in mobile menu
     */
    showLanguageSelector?: boolean | null;
    /**
     * Show contact button in mobile menu
     */
    showContactButton?: boolean | null;
  };
  /**
   * Configure recent posts dropdown in navigation
   */
  recentPosts?: {
    /**
     * Show recent posts in navigation
     */
    enabled?: boolean | null;
    /**
     * Label for the recent posts section
     */
    label?: string | null;
    /**
     * Number of recent posts to show (1-10)
     */
    numberOfPosts?: number | null;
    /**
     * Show recent posts in mobile menu
     */
    showInMobile?: boolean | null;
  };
  /**
   * Configure categories navigation
   */
  categoriesNav?: {
    /**
     * Show categories in navigation
     */
    enabled?: boolean | null;
    /**
     * Label for the categories section
     */
    label?: string | null;
    displayType?: ('all' | 'selected') | null;
    /**
     * Choose specific categories to show
     */
    selectedCategories?: (number | Category)[] | null;
    /**
     * Maximum number of categories to show (1-12)
     */
    maxCategories?: number | null;
    /**
     * Show categories in mobile menu
     */
    showInMobile?: boolean | null;
  };
  /**
   * Social media links for header/footer
   */
  socialLinks?: {
    /**
     * Facebook page URL
     */
    facebook?: string | null;
    /**
     * Twitter/X profile URL
     */
    twitter?: string | null;
    /**
     * Instagram profile URL
     */
    instagram?: string | null;
    /**
     * LinkedIn profile/company URL
     */
    linkedin?: string | null;
    /**
     * YouTube channel URL
     */
    youtube?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  /**
   * Footer logo image
   */
  logo: number | Media;
  /**
   * Copyright text displayed in footer
   */
  copyright?: string | null;
  /**
   * Company contact information
   */
  companyInfo?: {
    address?:
      | {
          line: string;
          id?: string | null;
        }[]
      | null;
    phone?: string | null;
    email?: string | null;
  };
  /**
   * Footer link columns (e.g., Company, Products, Support)
   */
  footerColumns?:
    | {
        title: string;
        links?:
          | {
              label: string;
              type: 'page' | 'url' | 'anchor';
              page?: (number | null) | Page;
              /**
               * Enter full URL (e.g., https://example.com)
               */
              url?: string | null;
              /**
               * Enter anchor (e.g., #kontakt)
               */
              anchor?: string | null;
              /**
               * Open link in new tab
               */
              newTab?: boolean | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Links shown at the bottom of the footer
   */
  bottomLinks?:
    | {
        label: string;
        type: 'page' | 'url' | 'anchor';
        page?: (number | null) | Page;
        url?: string | null;
        anchor?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seo".
 */
export interface Seo {
  id: number;
  /**
   * Default site name for meta tags
   */
  siteName: string;
  /**
   * Default site description for meta tags and search engines
   */
  siteDescription: string;
  /**
   * Your website URL (without trailing slash)
   */
  siteUrl: string;
  /**
   * Default social sharing image (1200x630px recommended)
   */
  defaultImage?: (number | null) | Media;
  /**
   * Website favicon (.ico, .png, or .svg - 32x32px recommended)
   */
  favicon?: (number | null) | Media;
  /**
   * Default keywords for SEO (comma-separated)
   */
  keywords?: string | null;
  /**
   * Default author name for meta tags
   */
  author?: string | null;
  /**
   * Twitter handle for Twitter Card meta tags (without @)
   */
  twitterHandle?: string | null;
  /**
   * Facebook App ID for Open Graph meta tags
   */
  facebookAppId?: string | null;
  /**
   * Google Analytics configuration
   */
  googleAnalytics?: {
    /**
     * Enable Google Analytics tracking
     */
    enabled?: boolean | null;
    /**
     * Google Analytics 4 Measurement ID (e.g., G-XXXXXXXXXX)
     */
    measurementId?: string | null;
  };
  /**
   * Google Tag Manager configuration
   */
  googleTagManager?: {
    /**
     * Enable Google Tag Manager
     */
    enabled?: boolean | null;
    /**
     * Google Tag Manager Container ID (e.g., GTM-XXXXXXX)
     */
    containerId?: string | null;
  };
  /**
   * Search engine robots configuration
   */
  robots?: {
    /**
     * Allow search engines to index this site
     */
    index?: boolean | null;
    /**
     * Allow search engines to follow links on this site
     */
    follow?: boolean | null;
    /**
     * Custom robots.txt content (optional)
     */
    customRobots?: string | null;
  };
  /**
   * Site verification codes for search engines
   */
  verification?: {
    /**
     * Google Search Console verification code
     */
    googleSiteVerification?: string | null;
    /**
     * Bing Webmaster Tools verification code
     */
    bingSiteVerification?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: number;
  layout?:
    | (
        | {
            /**
             * Main hero title
             */
            title: string;
            /**
             * Hero subtitle or description
             */
            subtitle?: string | null;
            /**
             * Hero background image
             */
            backgroundImage: number | Media;
            ctaButtons?:
              | {
                  label: string;
                  type: 'page' | 'url' | 'anchor';
                  page?: (number | null) | Page;
                  url?: string | null;
                  anchor?: string | null;
                  variant?: ('default' | 'secondary' | 'outline' | 'ghost') | null;
                  id?: string | null;
                }[]
              | null;
            bottomText?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            logos?:
              | {
                  logo: number | Media;
                  alt: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'logoBelt';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            services?:
              | {
                  title: string;
                  description?: string | null;
                  image: number | Media;
                  features?:
                    | {
                        feature: string;
                        id?: string | null;
                      }[]
                    | null;
                  button: {
                    text: string;
                    type: 'page' | 'url' | 'anchor';
                    page?: (number | null) | Page;
                    url?: string | null;
                    anchor?: string | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'services';
          }
        | {
            title: string;
            description?: string | null;
            image: number | Media;
            badges?:
              | {
                  text: string;
                  id?: string | null;
                }[]
              | null;
            stats?:
              | {
                  number: string;
                  label: string;
                  id?: string | null;
                }[]
              | null;
            process?:
              | {
                  step: string;
                  id?: string | null;
                }[]
              | null;
            calloutText?: string | null;
            button: {
              text: string;
              type: 'page' | 'url' | 'anchor';
              page?: (number | null) | Page;
              url?: string | null;
              anchor?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'about';
          }
        | {
            title: string;
            image: number | Media;
            reasons?:
              | {
                  reason: string;
                  id?: string | null;
                }[]
              | null;
            pillars?:
              | {
                  title: string;
                  description: string;
                  icon: 'shield' | 'cog' | 'headset';
                  id?: string | null;
                }[]
              | null;
            button: {
              text: string;
              type: 'page' | 'url' | 'anchor';
              page?: (number | null) | Page;
              url?: string | null;
              anchor?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'whyTrust';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            projects?:
              | {
                  title: string;
                  category: string;
                  image: number | Media;
                  description: string;
                  stack?:
                    | {
                        technology: string;
                        id?: string | null;
                      }[]
                    | null;
                  link?: string | null;
                  id?: string | null;
                }[]
              | null;
            button: {
              text: string;
              type: 'page' | 'url' | 'anchor';
              page?: (number | null) | Page;
              url?: string | null;
              anchor?: string | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'projects';
          }
        | {
            badge?: string | null;
            title: string;
            subtitle?: string | null;
            phone?: string | null;
            email?: string | null;
            privacyText?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contact';
          }
      )[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  siteName?: T;
  logo?: T;
  navigation?:
    | T
    | {
        label?: T;
        type?: T;
        page?: T;
        post?: T;
        category?: T;
        url?: T;
        newTab?: T;
        id?: T;
      };
  mobileNavigation?:
    | T
    | {
        enabled?: T;
        menuButtonLabel?: T;
        closeButtonLabel?: T;
        showLanguageSelector?: T;
        showContactButton?: T;
      };
  recentPosts?:
    | T
    | {
        enabled?: T;
        label?: T;
        numberOfPosts?: T;
        showInMobile?: T;
      };
  categoriesNav?:
    | T
    | {
        enabled?: T;
        label?: T;
        displayType?: T;
        selectedCategories?: T;
        maxCategories?: T;
        showInMobile?: T;
      };
  socialLinks?:
    | T
    | {
        facebook?: T;
        twitter?: T;
        instagram?: T;
        linkedin?: T;
        youtube?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  logo?: T;
  copyright?: T;
  companyInfo?:
    | T
    | {
        address?:
          | T
          | {
              line?: T;
              id?: T;
            };
        phone?: T;
        email?: T;
      };
  footerColumns?:
    | T
    | {
        title?: T;
        links?:
          | T
          | {
              label?: T;
              type?: T;
              page?: T;
              url?: T;
              anchor?: T;
              newTab?: T;
              id?: T;
            };
        id?: T;
      };
  bottomLinks?:
    | T
    | {
        label?: T;
        type?: T;
        page?: T;
        url?: T;
        anchor?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seo_select".
 */
export interface SeoSelect<T extends boolean = true> {
  siteName?: T;
  siteDescription?: T;
  siteUrl?: T;
  defaultImage?: T;
  favicon?: T;
  keywords?: T;
  author?: T;
  twitterHandle?: T;
  facebookAppId?: T;
  googleAnalytics?:
    | T
    | {
        enabled?: T;
        measurementId?: T;
      };
  googleTagManager?:
    | T
    | {
        enabled?: T;
        containerId?: T;
      };
  robots?:
    | T
    | {
        index?: T;
        follow?: T;
        customRobots?: T;
      };
  verification?:
    | T
    | {
        googleSiteVerification?: T;
        bingSiteVerification?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  layout?:
    | T
    | {
        hero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundImage?: T;
              ctaButtons?:
                | T
                | {
                    label?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                    anchor?: T;
                    variant?: T;
                    id?: T;
                  };
              bottomText?: T;
              id?: T;
              blockName?: T;
            };
        logoBelt?:
          | T
          | {
              logos?:
                | T
                | {
                    logo?: T;
                    alt?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        services?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              services?:
                | T
                | {
                    title?: T;
                    description?: T;
                    image?: T;
                    features?:
                      | T
                      | {
                          feature?: T;
                          id?: T;
                        };
                    button?:
                      | T
                      | {
                          text?: T;
                          type?: T;
                          page?: T;
                          url?: T;
                          anchor?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        about?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              badges?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              stats?:
                | T
                | {
                    number?: T;
                    label?: T;
                    id?: T;
                  };
              process?:
                | T
                | {
                    step?: T;
                    id?: T;
                  };
              calloutText?: T;
              button?:
                | T
                | {
                    text?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                    anchor?: T;
                  };
              id?: T;
              blockName?: T;
            };
        whyTrust?:
          | T
          | {
              title?: T;
              image?: T;
              reasons?:
                | T
                | {
                    reason?: T;
                    id?: T;
                  };
              pillars?:
                | T
                | {
                    title?: T;
                    description?: T;
                    icon?: T;
                    id?: T;
                  };
              button?:
                | T
                | {
                    text?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                    anchor?: T;
                  };
              id?: T;
              blockName?: T;
            };
        projects?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              projects?:
                | T
                | {
                    title?: T;
                    category?: T;
                    image?: T;
                    description?: T;
                    stack?:
                      | T
                      | {
                          technology?: T;
                          id?: T;
                        };
                    link?: T;
                    id?: T;
                  };
              button?:
                | T
                | {
                    text?: T;
                    type?: T;
                    page?: T;
                    url?: T;
                    anchor?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contact?:
          | T
          | {
              badge?: T;
              title?: T;
              subtitle?: T;
              phone?: T;
              email?: T;
              privacyText?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}